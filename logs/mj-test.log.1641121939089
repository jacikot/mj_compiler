INFO  11:31:53,640 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program_original.mj
INFO  11:31:53,729 - #2 program
INFO  11:31:53,729 - #22 p
INFO  11:31:53,730 - #5 const
INFO  11:31:53,732 - #22 int
INFO  11:31:53,732 - #22 size
INFO  11:31:53,733 - #9 =
INFO  11:31:53,733 - #20 10
INFO  11:31:53,733 - #7 ,
INFO  11:31:53,733 - #22 jaab
INFO  11:31:53,733 - #9 =
INFO  11:31:53,733 - #20 0
INFO  11:31:53,733 - #7 ,
INFO  11:31:53,733 - #22 xx
INFO  11:31:53,734 - #9 =
INFO  11:31:53,734 - #20 5
INFO  11:31:53,734 - #6 ;
INFO  11:31:53,734 - #5 const
INFO  11:31:53,734 - #22 char
INFO  11:31:53,734 - #22 variable
INFO  11:31:53,734 - #9 =
INFO  11:31:53,734 - #23 'p'
INFO  11:31:53,734 - #6 ;
INFO  11:31:53,734 - #5 const
INFO  11:31:53,735 - #22 bool
INFO  11:31:53,735 - #22 xyz
INFO  11:31:53,735 - #9 =
INFO  11:31:53,735 - #21 0
INFO  11:31:53,735 - #6 ;
INFO  11:31:53,735 - #22 int
INFO  11:31:53,735 - #22 xyza
INFO  11:31:53,735 - #7 ,
INFO  11:31:53,735 - #22 jana2
INFO  11:31:53,736 - #10 [
INFO  11:31:53,736 - #11 ]
INFO  11:31:53,736 - #6 ;
INFO  11:31:53,736 - #13 class
INFO  11:31:53,736 - #22 Base
INFO  11:31:53,736 - #3 {
INFO  11:31:53,738 - #4 }
INFO  11:31:53,739 - #13 class
INFO  11:31:53,740 - #22 Derived
INFO  11:31:53,740 - #14 extends
INFO  11:31:53,740 - #22 Base
INFO  11:31:53,740 - #3 {
INFO  11:31:53,741 - #4 }
INFO  11:31:53,741 - #13 class
INFO  11:31:53,741 - #22 B
INFO  11:31:53,741 - #3 {
INFO  11:31:53,741 - #22 int
INFO  11:31:53,741 - #22 baseField
INFO  11:31:53,741 - #6 ;
INFO  11:31:53,741 - #22 bool
INFO  11:31:53,742 - #22 xyza
INFO  11:31:53,742 - #6 ;
INFO  11:31:53,742 - #3 {
INFO  11:31:53,742 - #22 B
INFO  11:31:53,742 - #15 (
INFO  11:31:53,743 - #16 )
INFO  11:31:53,743 - #22 int
INFO  11:31:53,744 - #22 a
INFO  11:31:53,744 - #7 ,
INFO  11:31:53,744 - #22 j
INFO  11:31:53,744 - #6 ;
INFO  11:31:53,744 - #3 {
INFO  11:31:53,745 - #4 }
INFO  11:31:53,746 - #18 void
INFO  11:31:53,748 - #22 xyz
INFO  11:31:53,749 - #15 (
INFO  11:31:53,751 - #22 int
INFO  11:31:53,751 - #22 j
INFO  11:31:53,751 - #16 )
INFO  11:31:53,752 - #3 {
INFO  11:31:53,752 - #4 }
INFO  11:31:53,752 - #4 }
INFO  11:31:53,753 - #4 }
INFO  11:31:53,753 - #13 class
INFO  11:31:53,754 - #22 A
INFO  11:31:53,754 - #14 extends
INFO  11:31:53,754 - #22 B
INFO  11:31:53,754 - #3 {
INFO  11:31:53,754 - #3 {
INFO  11:31:53,754 - #22 A
INFO  11:31:53,754 - #15 (
INFO  11:31:53,754 - #16 )
INFO  11:31:53,754 - #3 {
INFO  11:31:53,755 - #4 }
INFO  11:31:53,755 - #18 void
INFO  11:31:53,755 - #22 xyz
INFO  11:31:53,755 - #15 (
INFO  11:31:53,755 - #22 int
INFO  11:31:53,755 - #22 h
INFO  11:31:53,755 - #16 )
INFO  11:31:53,755 - #22 int
INFO  11:31:53,755 - #22 x
INFO  11:31:53,755 - #6 ;
INFO  11:31:53,755 - #3 {
INFO  11:31:53,755 - #22 Label
INFO  11:31:53,755 - #8 :
INFO  11:31:53,756 - #22 x
INFO  11:31:53,757 - #47 ++
INFO  11:31:53,763 - #6 ;
INFO  11:31:53,764 - #4 }
INFO  11:31:53,764 - #4 }
INFO  11:31:53,765 - #4 }
INFO  11:31:53,765 - #3 {
INFO  11:31:53,765 - #22 int
INFO  11:31:53,765 - #22 method
INFO  11:31:53,765 - #15 (
INFO  11:31:53,765 - #22 B
INFO  11:31:53,765 - #22 d
INFO  11:31:53,765 - #7 ,
INFO  11:31:53,765 - #22 A
INFO  11:31:53,765 - #22 a
INFO  11:31:53,765 - #16 )
INFO  11:31:53,766 - #3 {
INFO  11:31:53,766 - #4 }
INFO  11:31:53,766 - #18 void
INFO  11:31:53,766 - #22 main
INFO  11:31:53,766 - #15 (
INFO  11:31:53,766 - #16 )
INFO  11:31:53,766 - #3 {
INFO  11:31:53,766 - #26 goto
INFO  11:31:53,766 - #22 LABELA
INFO  11:31:53,766 - #6 ;
INFO  11:31:53,766 - #22 LABELA
INFO  11:31:53,766 - #8 :
INFO  11:31:53,766 - #24 if
INFO  11:31:53,767 - #15 (
INFO  11:31:53,767 - #22 a
INFO  11:31:53,767 - #34 ==
INFO  11:31:53,767 - #20 1
INFO  11:31:53,768 - #16 )
INFO  11:31:53,769 - #3 {
INFO  11:31:53,769 - #24 if
INFO  11:31:53,769 - #15 (
INFO  11:31:53,769 - #22 b
INFO  11:31:53,769 - #34 ==
INFO  11:31:53,769 - #20 0
INFO  11:31:53,769 - #16 )
INFO  11:31:53,769 - #22 a
INFO  11:31:53,769 - #9 =
INFO  11:31:53,769 - #20 0
INFO  11:31:53,770 - #6 ;
INFO  11:31:53,770 - #4 }
INFO  11:31:53,771 - #25 else
INFO  11:31:53,771 - #22 b
INFO  11:31:53,771 - #9 =
INFO  11:31:53,771 - #20 0
INFO  11:31:53,771 - #6 ;
INFO  11:31:53,771 - #4 }
INFO  11:31:53,771 - #4 }
INFO  11:31:53,786 - Program(
  ProgramName(
   p
  ) [ProgramName]
  DeclListClass(
    DeclListClass(
      DeclListClass(
        DeclListClass(
          DeclListVar(
            DeclListConst(
              DeclListConst(
                DeclListConst(
                  DeclListEmpty(
                  ) [DeclListEmpty]
                  DeclConst(
                    Type(
                     int
                    ) [Type]
                    ConstDeclMultiple(
                      ConstDeclMultiple(
                        ConstDeclSingle(
                          ConstDeclElemCorrect(
                           size
                            ConstLitNum(
                             10
                            ) [ConstLitNum]
                          ) [ConstDeclElemCorrect]
                        ) [ConstDeclSingle]
                        ConstDeclElemCorrect(
                         jaab
                          ConstLitNum(
                           0
                          ) [ConstLitNum]
                        ) [ConstDeclElemCorrect]
                      ) [ConstDeclMultiple]
                      ConstDeclElemCorrect(
                       xx
                        ConstLitNum(
                         5
                        ) [ConstLitNum]
                      ) [ConstDeclElemCorrect]
                    ) [ConstDeclMultiple]
                  ) [DeclConst]
                ) [DeclListConst]
                DeclConst(
                  Type(
                   char
                  ) [Type]
                  ConstDeclSingle(
                    ConstDeclElemCorrect(
                     variable
                      ConstLitChar(
                       'p'
                      ) [ConstLitChar]
                    ) [ConstDeclElemCorrect]
                  ) [ConstDeclSingle]
                ) [DeclConst]
              ) [DeclListConst]
              DeclConst(
                Type(
                 bool
                ) [Type]
                ConstDeclSingle(
                  ConstDeclElemCorrect(
                   xyz
                    ConstLitBool(
                     0
                    ) [ConstLitBool]
                  ) [ConstDeclElemCorrect]
                ) [ConstDeclSingle]
              ) [DeclConst]
            ) [DeclListConst]
            VarDeclGlobalCorrect(
              Type(
               int
              ) [Type]
              VarDeclMultiple(
                VarDeclSingle(
                  VarDeclElemSingle(
                   xyza
                  ) [VarDeclElemSingle]
                ) [VarDeclSingle]
                VarDeclElemArray(
                 jana2
                ) [VarDeclElemArray]
              ) [VarDeclMultiple]
            ) [VarDeclGlobalCorrect]
          ) [DeclListVar]
          ClassDecl(
            ClassName(
             Base
            ) [ClassName]
            ExtendsDeclEmpty(
            ) [ExtendsDeclEmpty]
            ClassDeclsEmpty(
            ) [ClassDeclsEmpty]
          ) [ClassDecl]
        ) [DeclListClass]
        ClassDecl(
          ClassName(
           Derived
          ) [ClassName]
          ExtendsDeclType(
            Type(
             Base
            ) [Type]
          ) [ExtendsDeclType]
          ClassDeclsEmpty(
          ) [ClassDeclsEmpty]
        ) [ClassDecl]
      ) [DeclListClass]
      ClassDecl(
        ClassName(
         B
        ) [ClassName]
        ExtendsDeclEmpty(
        ) [ExtendsDeclEmpty]
        ClassVarDecls(
          VarDeclsCorrect(
            Type(
             int
            ) [Type]
            VarDeclSingleNoC(
              VarDeclElemSingleNoC(
               baseField
              ) [VarDeclElemSingleNoC]
            ) [VarDeclSingleNoC]
          ) [VarDeclsCorrect]
          ClassVarDecls(
            VarDeclsCorrect(
              Type(
               bool
              ) [Type]
              VarDeclSingleNoC(
                VarDeclElemSingleNoC(
                 xyza
                ) [VarDeclElemSingleNoC]
              ) [VarDeclSingleNoC]
            ) [VarDeclsCorrect]
            ClassDeclsMethods(
              InnerMethodBlockAll(
                ConstructorDecl(
                  ConstructorName(
                   B
                  ) [ConstructorName]
                  InnerVarDecls(
                    InnerVarDeclsEmpty(
                    ) [InnerVarDeclsEmpty]
                    VarDecl(
                      Type(
                       int
                      ) [Type]
                      VarDeclMultipleNoC(
                        VarDeclSingleNoC(
                          VarDeclElemSingleNoC(
                           a
                          ) [VarDeclElemSingleNoC]
                        ) [VarDeclSingleNoC]
                        VarDeclElemSingleNoC(
                         j
                        ) [VarDeclElemSingleNoC]
                      ) [VarDeclMultipleNoC]
                    ) [VarDecl]
                  ) [InnerVarDecls]
                  StatementsEmpty(
                  ) [StatementsEmpty]
                ) [ConstructorDecl]
                MethodDecls(
                  MethodDeclPar(
                    MethodDeclChecker(
                      RetTypeVoid(
                      ) [RetTypeVoid]
                      MethodName(
                       xyz
                      ) [MethodName]
                    ) [MethodDeclChecker]
                    FormParsSingle(
                      Type(
                       int
                      ) [Type]
                     j
                    ) [FormParsSingle]
                    InnerVarDeclsEmpty(
                    ) [InnerVarDeclsEmpty]
                    StatementsEmpty(
                    ) [StatementsEmpty]
                  ) [MethodDeclPar]
                  MethodDeclsEmpty(
                  ) [MethodDeclsEmpty]
                ) [MethodDecls]
              ) [InnerMethodBlockAll]
            ) [ClassDeclsMethods]
          ) [ClassVarDecls]
        ) [ClassVarDecls]
      ) [ClassDecl]
    ) [DeclListClass]
    ClassDecl(
      ClassName(
       A
      ) [ClassName]
      ExtendsDeclType(
        Type(
         B
        ) [Type]
      ) [ExtendsDeclType]
      ClassDeclsMethods(
        InnerMethodBlockAll(
          ConstructorDecl(
            ConstructorName(
             A
            ) [ConstructorName]
            InnerVarDeclsEmpty(
            ) [InnerVarDeclsEmpty]
            StatementsEmpty(
            ) [StatementsEmpty]
          ) [ConstructorDecl]
          MethodDecls(
            MethodDeclPar(
              MethodDeclChecker(
                RetTypeVoid(
                ) [RetTypeVoid]
                MethodName(
                 xyz
                ) [MethodName]
              ) [MethodDeclChecker]
              FormParsSingle(
                Type(
                 int
                ) [Type]
               h
              ) [FormParsSingle]
              InnerVarDecls(
                InnerVarDeclsEmpty(
                ) [InnerVarDeclsEmpty]
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  VarDeclSingleNoC(
                    VarDeclElemSingleNoC(
                     x
                    ) [VarDeclElemSingleNoC]
                  ) [VarDeclSingleNoC]
                ) [VarDecl]
              ) [InnerVarDecls]
              StatementsList(
                StatementsEmpty(
                ) [StatementsEmpty]
                StatementSingleLabel(
                  LabelDef(
                    Label(
                     Label
                    ) [Label]
                  ) [LabelDef]
                  StmtDesign(
                    DesignStmt(
                      DesignatorFirst(
                       x
                      ) [DesignatorFirst]
                      DsgnOpInc(
                      ) [DsgnOpInc]
                    ) [DesignStmt]
                  ) [StmtDesign]
                ) [StatementSingleLabel]
              ) [StatementsList]
            ) [MethodDeclPar]
            MethodDeclsEmpty(
            ) [MethodDeclsEmpty]
          ) [MethodDecls]
        ) [InnerMethodBlockAll]
      ) [ClassDeclsMethods]
    ) [ClassDecl]
  ) [DeclListClass]
  MethodDecls(
    MethodDeclPar(
      MethodDeclChecker(
        RetTypeType(
          Type(
           int
          ) [Type]
        ) [RetTypeType]
        MethodName(
         method
        ) [MethodName]
      ) [MethodDeclChecker]
      FormParsMultiple(
        FormParsSingle(
          Type(
           B
          ) [Type]
         d
        ) [FormParsSingle]
        Type(
         A
        ) [Type]
       a
      ) [FormParsMultiple]
      InnerVarDeclsEmpty(
      ) [InnerVarDeclsEmpty]
      StatementsEmpty(
      ) [StatementsEmpty]
    ) [MethodDeclPar]
    MethodDecls(
      MethodDeclNoPar(
        MethodDeclChecker(
          RetTypeVoid(
          ) [RetTypeVoid]
          MethodName(
           main
          ) [MethodName]
        ) [MethodDeclChecker]
        InnerVarDeclsEmpty(
        ) [InnerVarDeclsEmpty]
        StatementsList(
          StatementsList(
            StatementsEmpty(
            ) [StatementsEmpty]
            StatementSingle(
              StmtGoto(
                Label(
                 LABELA
                ) [Label]
              ) [StmtGoto]
            ) [StatementSingle]
          ) [StatementsList]
          StatementSingleLabel(
            LabelDef(
              Label(
               LABELA
              ) [Label]
            ) [LabelDef]
            StmtIfElse(
              CondSingle(
                CondTermSingle(
                  CondFactMultiple(
                    ExprSingle(
                      TermSingle(
                        FactorDsgn(
                          DesignatorFirst(
                           a
                          ) [DesignatorFirst]
                        ) [FactorDsgn]
                      ) [TermSingle]
                    ) [ExprSingle]
                    RelopEqu(
                    ) [RelopEqu]
                    ExprSingle(
                      TermSingle(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [CondFactMultiple]
                ) [CondTermSingle]
              ) [CondSingle]
              StatementMultiple(
                StatementsBlock(
                  StatementsList(
                    StatementsEmpty(
                    ) [StatementsEmpty]
                    StatementSingle(
                      StmtIf(
                        CondSingle(
                          CondTermSingle(
                            CondFactMultiple(
                              ExprSingle(
                                TermSingle(
                                  FactorDsgn(
                                    DesignatorFirst(
                                     b
                                    ) [DesignatorFirst]
                                  ) [FactorDsgn]
                                ) [TermSingle]
                              ) [ExprSingle]
                              RelopEqu(
                              ) [RelopEqu]
                              ExprSingle(
                                TermSingle(
                                  FactorNumber(
                                   0
                                  ) [FactorNumber]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [CondFactMultiple]
                          ) [CondTermSingle]
                        ) [CondSingle]
                        StatementSingle(
                          StmtDesign(
                            DesignStmt(
                              DesignatorFirst(
                               a
                              ) [DesignatorFirst]
                              DsgnOpAssign(
                                Assignop(
                                ) [Assignop]
                                ExprSingle(
                                  TermSingle(
                                    FactorNumber(
                                     0
                                    ) [FactorNumber]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [DsgnOpAssign]
                            ) [DesignStmt]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [StmtIf]
                    ) [StatementSingle]
                  ) [StatementsList]
                ) [StatementsBlock]
              ) [StatementMultiple]
              StatementSingle(
                StmtDesign(
                  DesignStmt(
                    DesignatorFirst(
                     b
                    ) [DesignatorFirst]
                    DsgnOpAssign(
                      Assignop(
                      ) [Assignop]
                      ExprSingle(
                        TermSingle(
                          FactorNumber(
                           0
                          ) [FactorNumber]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [DsgnOpAssign]
                  ) [DesignStmt]
                ) [StmtDesign]
              ) [StatementSingle]
            ) [StmtIfElse]
          ) [StatementSingleLabel]
        ) [StatementsList]
      ) [MethodDeclNoPar]
      MethodDeclsEmpty(
      ) [MethodDeclsEmpty]
    ) [MethodDecls]
  ) [MethodDecls]
) [Program]
INFO  11:31:53,794 - Pronadjen simbol: p na liniji 1
INFO  11:31:53,795 - Pronadjen simbol: size na liniji 2
INFO  11:31:53,795 - Pronadjen simbol: jaab na liniji 2
INFO  11:31:53,795 - Pronadjen simbol: xx na liniji 2
INFO  11:31:53,795 - Pronadjen simbol: variable na liniji 3
INFO  11:31:53,795 - Pronadjen simbol: xyz na liniji 4
INFO  11:31:53,795 - Pronadjen simbol: xyza na liniji 5
INFO  11:31:53,795 - Pronadjen simbol: jana2 na liniji 5
INFO  11:31:53,795 - Pronadjen simbol: Base na liniji 6
INFO  11:31:53,795 - Pronadjen simbol: Derived na liniji 10
INFO  11:31:53,796 - Pronadjen simbol: B na liniji 13
INFO  11:31:53,796 - Pronadjen simbol: baseField na liniji 14
INFO  11:31:53,796 - Pronadjen simbol: xyza na liniji 15
INFO  11:31:53,796 - Pronadjen simbol: B na liniji 17
INFO  11:31:53,796 - Pronadjen simbol: a na liniji 17
INFO  11:31:53,796 - Pronadjen simbol: j na liniji 17
INFO  11:31:53,796 - Pronadjen simbol: xyz na liniji 20
INFO  11:31:53,796 - Pronadjen simbol: j na liniji 20
INFO  11:31:53,797 - Pronadjen simbol: A na liniji 23
INFO  11:31:53,797 - Pronadjen simbol: A na liniji 25
INFO  11:31:53,797 - Pronadjen simbol: xyz na liniji 28
INFO  11:31:53,799 - Pronadjen simbol: h na liniji 28
INFO  11:31:53,799 - Pronadjen simbol: x na liniji 28
INFO  11:31:53,799 - Pronadjen simbol: Label na liniji 29
INFO  11:31:53,799 - Pronadjen simbol: method na liniji 35
INFO  11:31:53,799 - Pronadjen simbol: d na liniji 35
INFO  11:31:53,799 - Pronadjen simbol: a na liniji 35
INFO  11:31:53,799 - Pronadjen simbol: main na liniji 36
INFO  11:31:53,799 - Pronadjen simbol: LABELA na liniji 38
INFO  11:31:53,801 - Upotreba simbola: LABELA prihvacena na liniji 37
