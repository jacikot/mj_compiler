INFO  16:17:16,709 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program.mj
INFO  16:17:16,792 - #2 program
INFO  16:17:16,793 - #22 p
INFO  16:17:16,793 - #5 const
INFO  16:17:16,794 - #22 int
INFO  16:17:16,794 - #22 size
INFO  16:17:16,795 - #9 =
INFO  16:17:16,795 - #20 10
INFO  16:17:16,795 - #6 ;
INFO  16:17:16,795 - #13 class
INFO  16:17:16,796 - #22 Table
INFO  16:17:16,796 - #3 {
INFO  16:17:16,797 - #22 int
INFO  16:17:16,798 - #22 pos
INFO  16:17:16,798 - #10 [
INFO  16:17:16,798 - #11 ]
INFO  16:17:16,798 - #22 neg
ERROR 16:17:16,798 - 
Sintaksna greska na liniji 4
INFO  16:17:16,798 - #10 [
INFO  16:17:16,798 - #11 ]
INFO  16:17:16,798 - #3 {
INFO  16:17:16,799 - #18 void
INFO  16:17:16,801 - #22 putp
INFO  16:17:16,801 - #15 (
INFO  16:17:16,801 - #22 int
INFO  16:17:16,801 - #22 a
INFO  16:17:16,801 - #7 ,
INFO  16:17:16,802 - #22 int
INFO  16:17:16,802 - #22 idx
INFO  16:17:16,802 - #16 )
INFO  16:17:16,802 - #3 {
INFO  16:17:16,802 - #22 this
INFO  16:17:16,802 - #17 .
INFO  16:17:16,802 - #22 pos
INFO  16:17:16,802 - #10 [
INFO  16:17:16,802 - #22 idx
INFO  16:17:16,802 - #11 ]
INFO  16:17:16,802 - #9 =
INFO  16:17:16,802 - #22 a
INFO  16:17:16,803 - #6 ;
INFO  16:17:16,803 - #4 }
INFO  16:17:16,803 - #18 void
INFO  16:17:16,803 - #22 putn
INFO  16:17:16,803 - #15 (
INFO  16:17:16,803 - #22 int
INFO  16:17:16,803 - #22 a
INFO  16:17:16,803 - #7 ,
INFO  16:17:16,803 - #22 int
INFO  16:17:16,803 - #22 idx
INFO  16:17:16,803 - #16 )
INFO  16:17:16,804 - #3 {
INFO  16:17:16,804 - #22 this
INFO  16:17:16,804 - #17 .
INFO  16:17:16,804 - #22 neg
INFO  16:17:16,804 - #10 [
INFO  16:17:16,804 - #22 idx
INFO  16:17:16,804 - #11 ]
INFO  16:17:16,804 - #9 =
INFO  16:17:16,804 - #22 a
INFO  16:17:16,804 - #6 ;
INFO  16:17:16,804 - #4 }
INFO  16:17:16,804 - #22 int
INFO  16:17:16,804 - #22 getp
INFO  16:17:16,805 - #15 (
ERROR 16:17:16,805 - 
Sintaksna greska na liniji 8
INFO  16:17:16,805 - #22 int
INFO  16:17:16,805 - #22 idx
INFO  16:17:16,805 - #16 )
INFO  16:17:16,805 - #3 {
INFO  16:17:16,805 - #31 return
INFO  16:17:16,805 - #22 pos
INFO  16:17:16,805 - #10 [
INFO  16:17:16,806 - #22 idx
INFO  16:17:16,806 - #11 ]
INFO  16:17:16,806 - #6 ;
INFO  16:17:16,806 - #4 }
INFO  16:17:16,806 - #22 int
INFO  16:17:16,806 - #22 getn
INFO  16:17:16,806 - #15 (
INFO  16:17:16,806 - #22 int
INFO  16:17:16,806 - #22 idx
INFO  16:17:16,806 - #16 )
INFO  16:17:16,806 - #3 {
INFO  16:17:16,806 - #31 return
INFO  16:17:16,806 - #22 neg
INFO  16:17:16,806 - #10 [
INFO  16:17:16,807 - #22 idx
INFO  16:17:16,807 - #11 ]
INFO  16:17:16,807 - #6 ;
INFO  16:17:16,807 - #4 }
INFO  16:17:16,807 - #4 }
INFO  16:17:16,807 - #4 }
INFO  16:17:16,807 - #12 record
INFO  16:17:16,807 - #22 Board
INFO  16:17:16,807 - #3 {
INFO  16:17:16,807 - #22 int
INFO  16:17:16,807 - #22 rows
INFO  16:17:16,807 - #7 ,
INFO  16:17:16,807 - #22 columns
INFO  16:17:16,808 - #6 ;
INFO  16:17:16,808 - #4 }
ERROR 16:17:16,810 - Izvrsen oporavak do , u liniji 8
ERROR 16:17:16,812 - 
Sintaksna greska na liniji 15
INFO  16:17:16,813 - #22 Table
INFO  16:17:16,813 - #22 val
INFO  16:17:16,813 - #6 ;
INFO  16:17:16,813 - #22 Board
INFO  16:17:16,813 - #22 board
INFO  16:17:16,813 - #6 ;
INFO  16:17:16,813 - #3 {
INFO  16:17:16,813 - #18 void
INFO  16:17:16,813 - #22 f
INFO  16:17:16,813 - #15 (
INFO  16:17:16,813 - #22 char
INFO  16:17:16,813 - #22 ch
INFO  16:17:16,814 - #7 ,
INFO  16:17:16,814 - #22 int
INFO  16:17:16,814 - #22 a
INFO  16:17:16,814 - #7 ,
INFO  16:17:16,814 - #22 int
INFO  16:17:16,814 - #22 arg
INFO  16:17:16,814 - #16 )
INFO  16:17:16,814 - #22 int
INFO  16:17:16,814 - #22 x
INFO  16:17:16,814 - #6 ;
INFO  16:17:16,814 - #3 {
INFO  16:17:16,814 - #22 x
INFO  16:17:16,814 - #9 =
INFO  16:17:16,814 - #22 arg
INFO  16:17:16,814 - #6 ;
INFO  16:17:16,814 - #4 }
INFO  16:17:16,814 - #18 void
INFO  16:17:16,814 - #22 main
INFO  16:17:16,815 - #15 (
INFO  16:17:16,815 - #16 )
INFO  16:17:16,815 - #22 int
INFO  16:17:16,815 - #22 x
INFO  16:17:16,815 - #7 ,
INFO  16:17:16,815 - #22 i
INFO  16:17:16,815 - #6 ;
INFO  16:17:16,815 - #22 char
ERROR 16:17:16,815 - Izvrsen oporavak do , u liniji 8
INFO  16:17:16,815 - #22 c
INFO  16:17:16,815 - #6 ;
INFO  16:17:16,815 - #3 {
INFO  16:17:16,815 - #22 val
INFO  16:17:16,815 - #9 =
ERROR 16:17:16,815 - 
Sintaksna greska na liniji 26
INFO  16:17:16,815 - #19 new
INFO  16:17:16,815 - #22 Table
INFO  16:17:16,815 - #6 ;
INFO  16:17:16,816 - #22 val
INFO  16:17:16,816 - #17 .
INFO  16:17:16,816 - #22 pos
INFO  16:17:16,816 - #9 =
INFO  16:17:16,816 - #19 new
INFO  16:17:16,816 - #22 int
INFO  16:17:16,816 - #10 [
INFO  16:17:16,816 - #22 size
INFO  16:17:16,816 - #11 ]
INFO  16:17:16,816 - #6 ;
INFO  16:17:16,816 - #22 val
INFO  16:17:16,816 - #17 .
INFO  16:17:16,816 - #22 neg
INFO  16:17:16,816 - #9 =
INFO  16:17:16,820 - #19 new
INFO  16:17:16,821 - #22 int
INFO  16:17:16,821 - #10 [
INFO  16:17:16,821 - #22 size
INFO  16:17:16,821 - #11 ]
INFO  16:17:16,821 - #6 ;
INFO  16:17:16,821 - #32 read
INFO  16:17:16,821 - #15 (
INFO  16:17:16,821 - #22 x
INFO  16:17:16,821 - #16 )
INFO  16:17:16,821 - #6 ;
INFO  16:17:16,821 - #24 if
INFO  16:17:16,821 - #15 (
INFO  16:17:16,821 - #22 x
INFO  16:17:16,821 - #36 >
INFO  16:17:16,821 - #20 5
INFO  16:17:16,821 - #16 )
INFO  16:17:16,821 - #3 {
INFO  16:17:16,821 - #26 goto
INFO  16:17:16,821 - #22 skip
INFO  16:17:16,822 - #6 ;
INFO  16:17:16,822 - #4 }
INFO  16:17:16,822 - #22 i
INFO  16:17:16,822 - #9 =
INFO  16:17:16,822 - #20 0
INFO  16:17:16,822 - #6 ;
INFO  16:17:16,822 - #27 do
INFO  16:17:16,822 - #3 {
INFO  16:17:16,822 - #22 val
INFO  16:17:16,822 - #17 .
INFO  16:17:16,822 - #22 putp
INFO  16:17:16,822 - #15 (
INFO  16:17:16,822 - #20 0
INFO  16:17:16,822 - #7 ,
INFO  16:17:16,822 - #22 i
INFO  16:17:16,822 - #16 )
INFO  16:17:16,822 - #6 ;
INFO  16:17:16,822 - #22 val
INFO  16:17:16,822 - #17 .
INFO  16:17:16,822 - #22 putn
INFO  16:17:16,822 - #15 (
INFO  16:17:16,822 - #20 0
INFO  16:17:16,822 - #7 ,
INFO  16:17:16,822 - #22 i
INFO  16:17:16,822 - #16 )
INFO  16:17:16,823 - #6 ;
INFO  16:17:16,823 - #22 i
INFO  16:17:16,823 - #47 ++
INFO  16:17:16,823 - #6 ;
INFO  16:17:16,823 - #4 }
INFO  16:17:16,823 - #28 while
INFO  16:17:16,823 - #15 (
INFO  16:17:16,823 - #22 i
INFO  16:17:16,823 - #38 <
INFO  16:17:16,823 - #22 size
INFO  16:17:16,823 - #16 )
INFO  16:17:16,823 - #6 ;
INFO  16:17:16,823 - #22 skip
INFO  16:17:16,823 - #8 :
INFO  16:17:16,823 - #22 f
INFO  16:17:16,823 - #15 (
INFO  16:17:16,823 - #22 c
INFO  16:17:16,823 - #7 ,
INFO  16:17:16,823 - #22 x
INFO  16:17:16,823 - #7 ,
INFO  16:17:16,823 - #22 i
INFO  16:17:16,823 - #16 )
INFO  16:17:16,823 - #6 ;
INFO  16:17:16,823 - #22 board
INFO  16:17:16,823 - #9 =
INFO  16:17:16,823 - #19 new
INFO  16:17:16,824 - #22 Board
INFO  16:17:16,824 - #6 ;
INFO  16:17:16,824 - #32 read
INFO  16:17:16,824 - #15 (
INFO  16:17:16,824 - #22 board
INFO  16:17:16,824 - #17 .
INFO  16:17:16,824 - #22 rows
INFO  16:17:16,824 - #16 )
INFO  16:17:16,824 - #6 ;
INFO  16:17:16,824 - #22 x
INFO  16:17:16,824 - #9 =
INFO  16:17:16,824 - #22 board
INFO  16:17:16,824 - #17 .
INFO  16:17:16,824 - #22 rows
INFO  16:17:16,824 - #6 ;
INFO  16:17:16,824 - #27 do
INFO  16:17:16,824 - #3 {
INFO  16:17:16,824 - #24 if
INFO  16:17:16,824 - #15 (
INFO  16:17:16,824 - #22 x
INFO  16:17:16,825 - #39 <=
INFO  16:17:16,825 - #20 0
INFO  16:17:16,825 - #16 )
INFO  16:17:16,825 - #29 break
INFO  16:17:16,825 - #6 ;
INFO  16:17:16,825 - #24 if
INFO  16:17:16,825 - #15 (
INFO  16:17:16,825 - #20 0
INFO  16:17:16,825 - #39 <=
INFO  16:17:16,825 - #22 x
INFO  16:17:16,825 - #40 &&
INFO  16:17:16,825 - #22 x
INFO  16:17:16,825 - #38 <
INFO  16:17:16,825 - #22 size
INFO  16:17:16,825 - #16 )
INFO  16:17:16,825 - #3 {
INFO  16:17:16,825 - #22 val
INFO  16:17:16,825 - #17 .
INFO  16:17:16,825 - #22 putp
INFO  16:17:16,825 - #15 (
INFO  16:17:16,825 - #22 val
INFO  16:17:16,825 - #17 .
INFO  16:17:16,825 - #22 getp
INFO  16:17:16,826 - #15 (
INFO  16:17:16,826 - #22 x
INFO  16:17:16,826 - #16 )
INFO  16:17:16,826 - #45 +
INFO  16:17:16,826 - #20 1
INFO  16:17:16,826 - #16 )
INFO  16:17:16,826 - #6 ;
INFO  16:17:16,826 - #4 }
INFO  16:17:16,826 - #25 else
INFO  16:17:16,826 - #24 if
INFO  16:17:16,826 - #15 (
INFO  16:17:16,826 - #46 -
INFO  16:17:16,826 - #22 size
INFO  16:17:16,826 - #38 <
INFO  16:17:16,826 - #22 x
INFO  16:17:16,826 - #40 &&
INFO  16:17:16,826 - #22 x
INFO  16:17:16,826 - #38 <
INFO  16:17:16,826 - #20 0
INFO  16:17:16,826 - #16 )
INFO  16:17:16,826 - #3 {
INFO  16:17:16,826 - #22 val
INFO  16:17:16,826 - #17 .
INFO  16:17:16,826 - #22 putn
INFO  16:17:16,826 - #15 (
INFO  16:17:16,826 - #22 val
INFO  16:17:16,826 - #17 .
INFO  16:17:16,826 - #22 getn
INFO  16:17:16,826 - #15 (
INFO  16:17:16,826 - #46 -
INFO  16:17:16,826 - #22 x
INFO  16:17:16,826 - #16 )
INFO  16:17:16,827 - #45 +
INFO  16:17:16,827 - #20 1
INFO  16:17:16,827 - #16 )
INFO  16:17:16,827 - #6 ;
INFO  16:17:16,827 - #4 }
INFO  16:17:16,827 - #32 read
INFO  16:17:16,827 - #15 (
INFO  16:17:16,827 - #22 x
INFO  16:17:16,827 - #16 )
INFO  16:17:16,827 - #6 ;
INFO  16:17:16,827 - #4 }
INFO  16:17:16,827 - #28 while
INFO  16:17:16,827 - #15 (
INFO  16:17:16,827 - #21 1
INFO  16:17:16,827 - #16 )
INFO  16:17:16,827 - #6 ;
INFO  16:17:16,827 - #4 }
INFO  16:17:16,828 - #4 }
ERROR 16:17:16,828 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 57
