INFO  11:32:57,107 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program.mj
INFO  11:32:57,210 - #2 program
INFO  11:32:57,210 - #22 p
INFO  11:32:57,210 - #5 const
INFO  11:32:57,212 - #22 int
INFO  11:32:57,212 - #22 size
INFO  11:32:57,213 - #9 =
INFO  11:32:57,213 - #20 10
INFO  11:32:57,214 - #6 ;
INFO  11:32:57,214 - #13 class
INFO  11:32:57,214 - #22 Table
INFO  11:32:57,214 - #3 {
INFO  11:32:57,215 - #22 int
INFO  11:32:57,218 - #22 pos
INFO  11:32:57,220 - #10 [
INFO  11:32:57,221 - #11 ]
INFO  11:32:57,221 - #7 ,
INFO  11:32:57,223 - #22 neg
INFO  11:32:57,224 - #10 [
INFO  11:32:57,224 - #11 ]
INFO  11:32:57,224 - #6 ;
INFO  11:32:57,224 - #3 {
INFO  11:32:57,226 - #18 void
INFO  11:32:57,226 - #22 putp
INFO  11:32:57,227 - #15 (
INFO  11:32:57,228 - #22 int
INFO  11:32:57,228 - #22 a
INFO  11:32:57,228 - #7 ,
INFO  11:32:57,229 - #22 int
INFO  11:32:57,229 - #22 idx
INFO  11:32:57,229 - #16 )
INFO  11:32:57,230 - #3 {
INFO  11:32:57,230 - #22 this
INFO  11:32:57,231 - #17 .
INFO  11:32:57,231 - #22 pos
INFO  11:32:57,231 - #10 [
INFO  11:32:57,232 - #22 idx
INFO  11:32:57,232 - #11 ]
INFO  11:32:57,232 - #9 =
INFO  11:32:57,233 - #22 a
INFO  11:32:57,234 - #6 ;
INFO  11:32:57,234 - #4 }
INFO  11:32:57,235 - #18 void
INFO  11:32:57,235 - #22 putn
INFO  11:32:57,235 - #15 (
INFO  11:32:57,235 - #22 int
INFO  11:32:57,236 - #22 a
INFO  11:32:57,236 - #7 ,
INFO  11:32:57,236 - #22 int
INFO  11:32:57,236 - #22 idx
INFO  11:32:57,236 - #16 )
INFO  11:32:57,236 - #3 {
INFO  11:32:57,236 - #22 this
INFO  11:32:57,237 - #17 .
INFO  11:32:57,237 - #22 neg
INFO  11:32:57,237 - #10 [
INFO  11:32:57,237 - #22 idx
INFO  11:32:57,237 - #11 ]
INFO  11:32:57,237 - #9 =
INFO  11:32:57,237 - #22 a
INFO  11:32:57,237 - #6 ;
INFO  11:32:57,237 - #4 }
INFO  11:32:57,237 - #22 int
INFO  11:32:57,238 - #22 getp
INFO  11:32:57,238 - #15 (
INFO  11:32:57,238 - #22 int
INFO  11:32:57,238 - #22 idx
INFO  11:32:57,238 - #16 )
INFO  11:32:57,238 - #3 {
INFO  11:32:57,238 - #31 return
INFO  11:32:57,238 - #22 pos
INFO  11:32:57,238 - #10 [
INFO  11:32:57,239 - #22 idx
INFO  11:32:57,239 - #11 ]
INFO  11:32:57,239 - #6 ;
INFO  11:32:57,239 - #4 }
INFO  11:32:57,239 - #22 int
INFO  11:32:57,239 - #22 getn
INFO  11:32:57,239 - #15 (
INFO  11:32:57,239 - #22 int
INFO  11:32:57,239 - #22 idx
INFO  11:32:57,239 - #16 )
INFO  11:32:57,240 - #3 {
INFO  11:32:57,240 - #31 return
INFO  11:32:57,240 - #22 neg
INFO  11:32:57,240 - #10 [
INFO  11:32:57,240 - #22 idx
INFO  11:32:57,240 - #11 ]
INFO  11:32:57,240 - #6 ;
INFO  11:32:57,240 - #4 }
INFO  11:32:57,240 - #4 }
INFO  11:32:57,242 - #4 }
INFO  11:32:57,242 - #12 record
INFO  11:32:57,243 - #22 Board
INFO  11:32:57,244 - #3 {
INFO  11:32:57,244 - #22 int
INFO  11:32:57,244 - #22 rows
INFO  11:32:57,244 - #7 ,
INFO  11:32:57,244 - #22 columns
INFO  11:32:57,244 - #6 ;
INFO  11:32:57,244 - #4 }
INFO  11:32:57,244 - #22 Table
INFO  11:32:57,246 - #22 val
INFO  11:32:57,246 - #6 ;
INFO  11:32:57,246 - #22 Board
INFO  11:32:57,246 - #22 board
INFO  11:32:57,246 - #6 ;
INFO  11:32:57,246 - #3 {
INFO  11:32:57,247 - #18 void
INFO  11:32:57,247 - #22 f
INFO  11:32:57,247 - #15 (
INFO  11:32:57,247 - #22 char
INFO  11:32:57,247 - #22 ch
INFO  11:32:57,247 - #7 ,
INFO  11:32:57,247 - #22 int
INFO  11:32:57,247 - #22 a
INFO  11:32:57,247 - #7 ,
INFO  11:32:57,247 - #22 int
INFO  11:32:57,247 - #22 arg
INFO  11:32:57,247 - #16 )
INFO  11:32:57,247 - #22 int
INFO  11:32:57,248 - #22 x
INFO  11:32:57,248 - #6 ;
INFO  11:32:57,248 - #3 {
INFO  11:32:57,248 - #22 x
INFO  11:32:57,248 - #9 =
INFO  11:32:57,248 - #22 arg
INFO  11:32:57,248 - #6 ;
INFO  11:32:57,248 - #4 }
INFO  11:32:57,248 - #18 void
INFO  11:32:57,248 - #22 main
INFO  11:32:57,248 - #15 (
INFO  11:32:57,249 - #16 )
INFO  11:32:57,249 - #22 int
INFO  11:32:57,249 - #22 x
INFO  11:32:57,249 - #7 ,
INFO  11:32:57,249 - #22 i
INFO  11:32:57,249 - #6 ;
INFO  11:32:57,249 - #22 char
INFO  11:32:57,249 - #22 c
INFO  11:32:57,249 - #6 ;
INFO  11:32:57,249 - #3 {
INFO  11:32:57,249 - #22 val
INFO  11:32:57,249 - #9 =
INFO  11:32:57,250 - #19 new
INFO  11:32:57,250 - #22 Table
INFO  11:32:57,250 - #6 ;
INFO  11:32:57,250 - #22 val
INFO  11:32:57,250 - #17 .
INFO  11:32:57,250 - #22 pos
INFO  11:32:57,250 - #9 =
INFO  11:32:57,250 - #19 new
INFO  11:32:57,250 - #22 int
INFO  11:32:57,250 - #10 [
INFO  11:32:57,250 - #22 size
INFO  11:32:57,250 - #11 ]
INFO  11:32:57,251 - #6 ;
INFO  11:32:57,251 - #22 val
INFO  11:32:57,251 - #17 .
INFO  11:32:57,251 - #22 neg
INFO  11:32:57,251 - #9 =
INFO  11:32:57,251 - #19 new
INFO  11:32:57,251 - #22 int
INFO  11:32:57,251 - #10 [
INFO  11:32:57,251 - #22 size
INFO  11:32:57,258 - #11 ]
INFO  11:32:57,258 - #6 ;
INFO  11:32:57,258 - #32 read
INFO  11:32:57,259 - #15 (
INFO  11:32:57,259 - #22 x
INFO  11:32:57,259 - #16 )
INFO  11:32:57,259 - #6 ;
INFO  11:32:57,259 - #24 if
INFO  11:32:57,259 - #15 (
INFO  11:32:57,259 - #22 x
INFO  11:32:57,259 - #36 >
INFO  11:32:57,259 - #20 5
INFO  11:32:57,261 - #16 )
INFO  11:32:57,262 - #3 {
INFO  11:32:57,262 - #26 goto
INFO  11:32:57,262 - #22 skip
INFO  11:32:57,262 - #6 ;
INFO  11:32:57,263 - #4 }
INFO  11:32:57,263 - #22 i
INFO  11:32:57,264 - #9 =
INFO  11:32:57,264 - #20 0
INFO  11:32:57,264 - #6 ;
INFO  11:32:57,264 - #27 do
INFO  11:32:57,264 - #3 {
INFO  11:32:57,264 - #22 val
INFO  11:32:57,264 - #17 .
INFO  11:32:57,264 - #22 putp
INFO  11:32:57,264 - #15 (
INFO  11:32:57,265 - #20 0
INFO  11:32:57,265 - #7 ,
INFO  11:32:57,265 - #22 i
INFO  11:32:57,265 - #16 )
INFO  11:32:57,265 - #6 ;
INFO  11:32:57,265 - #22 val
INFO  11:32:57,265 - #17 .
INFO  11:32:57,265 - #22 putn
INFO  11:32:57,266 - #15 (
INFO  11:32:57,266 - #20 0
INFO  11:32:57,266 - #7 ,
INFO  11:32:57,266 - #22 i
INFO  11:32:57,266 - #16 )
INFO  11:32:57,266 - #6 ;
INFO  11:32:57,266 - #22 i
INFO  11:32:57,266 - #47 ++
INFO  11:32:57,266 - #6 ;
INFO  11:32:57,267 - #4 }
INFO  11:32:57,267 - #28 while
INFO  11:32:57,268 - #15 (
INFO  11:32:57,268 - #22 i
INFO  11:32:57,268 - #38 <
INFO  11:32:57,268 - #22 size
INFO  11:32:57,269 - #16 )
INFO  11:32:57,269 - #6 ;
INFO  11:32:57,269 - #22 skip
INFO  11:32:57,269 - #8 :
INFO  11:32:57,269 - #22 f
INFO  11:32:57,269 - #15 (
INFO  11:32:57,270 - #22 c
INFO  11:32:57,270 - #7 ,
INFO  11:32:57,270 - #22 x
INFO  11:32:57,270 - #7 ,
INFO  11:32:57,270 - #22 i
INFO  11:32:57,270 - #16 )
INFO  11:32:57,270 - #6 ;
INFO  11:32:57,270 - #22 board
INFO  11:32:57,270 - #9 =
INFO  11:32:57,270 - #19 new
INFO  11:32:57,270 - #22 Board
INFO  11:32:57,271 - #6 ;
INFO  11:32:57,271 - #32 read
INFO  11:32:57,271 - #15 (
INFO  11:32:57,271 - #22 board
INFO  11:32:57,271 - #17 .
INFO  11:32:57,271 - #22 rows
INFO  11:32:57,271 - #16 )
INFO  11:32:57,271 - #6 ;
INFO  11:32:57,271 - #22 x
INFO  11:32:57,271 - #9 =
INFO  11:32:57,271 - #22 board
INFO  11:32:57,271 - #17 .
INFO  11:32:57,272 - #22 rows
INFO  11:32:57,272 - #6 ;
INFO  11:32:57,272 - #27 do
INFO  11:32:57,272 - #3 {
INFO  11:32:57,272 - #24 if
INFO  11:32:57,272 - #15 (
INFO  11:32:57,272 - #22 x
INFO  11:32:57,272 - #39 <=
INFO  11:32:57,272 - #20 0
INFO  11:32:57,274 - #16 )
INFO  11:32:57,275 - #29 break
INFO  11:32:57,275 - #6 ;
INFO  11:32:57,275 - #24 if
INFO  11:32:57,276 - #15 (
INFO  11:32:57,276 - #20 0
INFO  11:32:57,277 - #39 <=
INFO  11:32:57,277 - #22 x
INFO  11:32:57,277 - #40 &&
INFO  11:32:57,277 - #22 x
INFO  11:32:57,277 - #38 <
INFO  11:32:57,277 - #22 size
INFO  11:32:57,277 - #16 )
INFO  11:32:57,277 - #3 {
INFO  11:32:57,277 - #22 val
INFO  11:32:57,277 - #17 .
INFO  11:32:57,278 - #22 putp
INFO  11:32:57,278 - #15 (
INFO  11:32:57,278 - #22 val
INFO  11:32:57,278 - #17 .
INFO  11:32:57,278 - #22 getp
INFO  11:32:57,278 - #15 (
INFO  11:32:57,278 - #22 x
INFO  11:32:57,278 - #16 )
INFO  11:32:57,278 - #45 +
INFO  11:32:57,278 - #20 1
INFO  11:32:57,280 - #16 )
INFO  11:32:57,281 - #6 ;
INFO  11:32:57,281 - #4 }
INFO  11:32:57,281 - #25 else
ERROR 11:32:57,281 - 
Sintaksna greska na liniji 49
ERROR 11:32:57,281 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 49
