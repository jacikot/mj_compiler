INFO  23:32:58,846 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program_original.mj
INFO  23:32:58,963 - #2 program
INFO  23:32:58,963 - #22 p
INFO  23:32:58,963 - #5 const
INFO  23:32:58,966 - #22 int
INFO  23:32:58,966 - #22 size
INFO  23:32:58,967 - #9 =
INFO  23:32:58,967 - #20 10
INFO  23:32:58,967 - #7 ,
INFO  23:32:58,968 - #22 jaab
INFO  23:32:58,968 - #9 =
INFO  23:32:58,968 - #20 0
INFO  23:32:58,968 - #7 ,
INFO  23:32:58,969 - #22 xx
INFO  23:32:58,969 - #9 =
INFO  23:32:58,969 - #20 5
INFO  23:32:58,969 - #6 ;
INFO  23:32:58,969 - #5 const
INFO  23:32:58,970 - #22 char
INFO  23:32:58,970 - #22 variable
INFO  23:32:58,970 - #9 =
INFO  23:32:58,970 - #23 'p'
INFO  23:32:58,972 - #6 ;
INFO  23:32:58,972 - #5 const
INFO  23:32:58,972 - #22 bool
INFO  23:32:58,973 - #22 xyz
INFO  23:32:58,973 - #9 =
INFO  23:32:58,973 - #21 0
INFO  23:32:58,973 - #6 ;
INFO  23:32:58,973 - #22 int
INFO  23:32:58,973 - #22 xyza
INFO  23:32:58,974 - #7 ,
INFO  23:32:58,974 - #22 jana2
INFO  23:32:58,974 - #10 [
INFO  23:32:58,974 - #11 ]
INFO  23:32:58,974 - #6 ;
INFO  23:32:58,975 - #13 class
INFO  23:32:58,975 - #22 Base
INFO  23:32:58,975 - #3 {
INFO  23:32:58,977 - #4 }
INFO  23:32:58,978 - #13 class
INFO  23:32:58,979 - #22 Derived
INFO  23:32:58,979 - #14 extends
INFO  23:32:58,979 - #22 Base
INFO  23:32:58,980 - #3 {
INFO  23:32:58,980 - #4 }
INFO  23:32:58,980 - #13 class
INFO  23:32:58,980 - #22 B
INFO  23:32:58,980 - #3 {
INFO  23:32:58,980 - #22 int
INFO  23:32:58,980 - #22 baseField
INFO  23:32:58,980 - #6 ;
INFO  23:32:58,981 - #22 bool
INFO  23:32:58,981 - #22 xyza
INFO  23:32:58,981 - #6 ;
INFO  23:32:58,981 - #3 {
INFO  23:32:58,982 - #22 B
INFO  23:32:58,982 - #15 (
INFO  23:32:58,983 - #16 )
INFO  23:32:58,983 - #22 int
INFO  23:32:58,984 - #22 a
INFO  23:32:58,985 - #7 ,
INFO  23:32:58,985 - #22 j
INFO  23:32:58,985 - #6 ;
INFO  23:32:58,985 - #3 {
INFO  23:32:58,987 - #4 }
INFO  23:32:58,988 - #18 void
INFO  23:32:58,989 - #22 xyz
INFO  23:32:58,991 - #15 (
INFO  23:32:58,993 - #22 int
INFO  23:32:58,993 - #22 j
INFO  23:32:58,993 - #16 )
INFO  23:32:58,993 - #3 {
INFO  23:32:58,993 - #4 }
INFO  23:32:58,993 - #4 }
INFO  23:32:58,995 - #4 }
INFO  23:32:58,995 - #13 class
INFO  23:32:58,995 - #22 A
INFO  23:32:58,995 - #14 extends
INFO  23:32:58,996 - #22 B
INFO  23:32:58,996 - #3 {
INFO  23:32:58,996 - #3 {
INFO  23:32:58,996 - #22 A
INFO  23:32:58,996 - #15 (
INFO  23:32:58,996 - #16 )
INFO  23:32:58,996 - #3 {
INFO  23:32:58,996 - #4 }
INFO  23:32:58,997 - #18 void
INFO  23:32:58,997 - #22 xyz
INFO  23:32:58,997 - #15 (
INFO  23:32:58,997 - #22 int
INFO  23:32:58,997 - #22 h
INFO  23:32:58,997 - #16 )
INFO  23:32:58,997 - #22 int
INFO  23:32:58,997 - #22 x
INFO  23:32:58,997 - #6 ;
INFO  23:32:58,997 - #3 {
INFO  23:32:58,998 - #22 Label
INFO  23:32:58,998 - #8 :
INFO  23:32:58,999 - #22 x
INFO  23:32:59,000 - #47 ++
INFO  23:32:59,007 - #6 ;
INFO  23:32:59,009 - #4 }
INFO  23:32:59,009 - #4 }
INFO  23:32:59,009 - #4 }
INFO  23:32:59,009 - #3 {
INFO  23:32:59,009 - #22 int
INFO  23:32:59,009 - #22 method
INFO  23:32:59,010 - #15 (
INFO  23:32:59,010 - #22 B
INFO  23:32:59,010 - #22 d
INFO  23:32:59,010 - #7 ,
INFO  23:32:59,010 - #22 A
INFO  23:32:59,010 - #22 a
INFO  23:32:59,010 - #16 )
INFO  23:32:59,010 - #3 {
INFO  23:32:59,011 - #4 }
INFO  23:32:59,011 - #18 void
INFO  23:32:59,011 - #22 main
INFO  23:32:59,011 - #15 (
INFO  23:32:59,011 - #16 )
INFO  23:32:59,011 - #3 {
INFO  23:32:59,011 - #22 LABELA
INFO  23:32:59,011 - #8 :
INFO  23:32:59,011 - #24 if
INFO  23:32:59,011 - #15 (
INFO  23:32:59,011 - #22 a
INFO  23:32:59,011 - #34 ==
INFO  23:32:59,012 - #20 1
INFO  23:32:59,014 - #16 )
INFO  23:32:59,014 - #3 {
INFO  23:32:59,014 - #24 if
INFO  23:32:59,014 - #15 (
INFO  23:32:59,014 - #22 b
INFO  23:32:59,014 - #34 ==
INFO  23:32:59,014 - #20 0
INFO  23:32:59,014 - #16 )
INFO  23:32:59,014 - #22 a
INFO  23:32:59,014 - #9 =
INFO  23:32:59,014 - #20 0
INFO  23:32:59,015 - #6 ;
INFO  23:32:59,016 - #4 }
INFO  23:32:59,016 - #25 else
INFO  23:32:59,016 - #22 b
INFO  23:32:59,016 - #9 =
INFO  23:32:59,016 - #20 0
INFO  23:32:59,016 - #6 ;
INFO  23:32:59,016 - #26 goto
INFO  23:32:59,016 - #22 xyz
INFO  23:32:59,016 - #6 ;
INFO  23:32:59,016 - #4 }
INFO  23:32:59,017 - #4 }
INFO  23:32:59,034 - Program(
  ProgramName(
   p
  ) [ProgramName]
  DeclListClass(
    DeclListClass(
      DeclListClass(
        DeclListClass(
          DeclListVar(
            DeclListConst(
              DeclListConst(
                DeclListConst(
                  DeclListEmpty(
                  ) [DeclListEmpty]
                  DeclConst(
                    Type(
                     int
                    ) [Type]
                    ConstDeclMultiple(
                      ConstDeclMultiple(
                        ConstDeclSingle(
                          ConstDeclElemCorrect(
                           size
                            ConstLitNum(
                             10
                            ) [ConstLitNum]
                          ) [ConstDeclElemCorrect]
                        ) [ConstDeclSingle]
                        ConstDeclElemCorrect(
                         jaab
                          ConstLitNum(
                           0
                          ) [ConstLitNum]
                        ) [ConstDeclElemCorrect]
                      ) [ConstDeclMultiple]
                      ConstDeclElemCorrect(
                       xx
                        ConstLitNum(
                         5
                        ) [ConstLitNum]
                      ) [ConstDeclElemCorrect]
                    ) [ConstDeclMultiple]
                  ) [DeclConst]
                ) [DeclListConst]
                DeclConst(
                  Type(
                   char
                  ) [Type]
                  ConstDeclSingle(
                    ConstDeclElemCorrect(
                     variable
                      ConstLitChar(
                       'p'
                      ) [ConstLitChar]
                    ) [ConstDeclElemCorrect]
                  ) [ConstDeclSingle]
                ) [DeclConst]
              ) [DeclListConst]
              DeclConst(
                Type(
                 bool
                ) [Type]
                ConstDeclSingle(
                  ConstDeclElemCorrect(
                   xyz
                    ConstLitBool(
                     0
                    ) [ConstLitBool]
                  ) [ConstDeclElemCorrect]
                ) [ConstDeclSingle]
              ) [DeclConst]
            ) [DeclListConst]
            VarDeclGlobalCorrect(
              Type(
               int
              ) [Type]
              VarDeclMultiple(
                VarDeclSingle(
                  VarDeclElemSingle(
                   xyza
                  ) [VarDeclElemSingle]
                ) [VarDeclSingle]
                VarDeclElemArray(
                 jana2
                ) [VarDeclElemArray]
              ) [VarDeclMultiple]
            ) [VarDeclGlobalCorrect]
          ) [DeclListVar]
          ClassDecl(
            ClassName(
             Base
            ) [ClassName]
            ExtendsDeclEmpty(
            ) [ExtendsDeclEmpty]
            ClassDeclsEmpty(
            ) [ClassDeclsEmpty]
          ) [ClassDecl]
        ) [DeclListClass]
        ClassDecl(
          ClassName(
           Derived
          ) [ClassName]
          ExtendsDeclType(
            Type(
             Base
            ) [Type]
          ) [ExtendsDeclType]
          ClassDeclsEmpty(
          ) [ClassDeclsEmpty]
        ) [ClassDecl]
      ) [DeclListClass]
      ClassDecl(
        ClassName(
         B
        ) [ClassName]
        ExtendsDeclEmpty(
        ) [ExtendsDeclEmpty]
        ClassVarDecls(
          VarDeclsCorrect(
            Type(
             int
            ) [Type]
            VarDeclSingleNoC(
              VarDeclElemSingleNoC(
               baseField
              ) [VarDeclElemSingleNoC]
            ) [VarDeclSingleNoC]
          ) [VarDeclsCorrect]
          ClassVarDecls(
            VarDeclsCorrect(
              Type(
               bool
              ) [Type]
              VarDeclSingleNoC(
                VarDeclElemSingleNoC(
                 xyza
                ) [VarDeclElemSingleNoC]
              ) [VarDeclSingleNoC]
            ) [VarDeclsCorrect]
            ClassDeclsMethods(
              InnerMethodBlockAll(
                ConstructorDecl(
                  ConstructorName(
                   B
                  ) [ConstructorName]
                  InnerVarDecls(
                    InnerVarDeclsEmpty(
                    ) [InnerVarDeclsEmpty]
                    VarDecl(
                      Type(
                       int
                      ) [Type]
                      VarDeclMultipleNoC(
                        VarDeclSingleNoC(
                          VarDeclElemSingleNoC(
                           a
                          ) [VarDeclElemSingleNoC]
                        ) [VarDeclSingleNoC]
                        VarDeclElemSingleNoC(
                         j
                        ) [VarDeclElemSingleNoC]
                      ) [VarDeclMultipleNoC]
                    ) [VarDecl]
                  ) [InnerVarDecls]
                  StatementsEmpty(
                  ) [StatementsEmpty]
                ) [ConstructorDecl]
                MethodDecls(
                  MethodDeclPar(
                    MethodDeclChecker(
                      RetTypeVoid(
                      ) [RetTypeVoid]
                      MethodName(
                       xyz
                      ) [MethodName]
                    ) [MethodDeclChecker]
                    FormParsSingle(
                      Type(
                       int
                      ) [Type]
                     j
                    ) [FormParsSingle]
                    InnerVarDeclsEmpty(
                    ) [InnerVarDeclsEmpty]
                    StatementsEmpty(
                    ) [StatementsEmpty]
                  ) [MethodDeclPar]
                  MethodDeclsEmpty(
                  ) [MethodDeclsEmpty]
                ) [MethodDecls]
              ) [InnerMethodBlockAll]
            ) [ClassDeclsMethods]
          ) [ClassVarDecls]
        ) [ClassVarDecls]
      ) [ClassDecl]
    ) [DeclListClass]
    ClassDecl(
      ClassName(
       A
      ) [ClassName]
      ExtendsDeclType(
        Type(
         B
        ) [Type]
      ) [ExtendsDeclType]
      ClassDeclsMethods(
        InnerMethodBlockAll(
          ConstructorDecl(
            ConstructorName(
             A
            ) [ConstructorName]
            InnerVarDeclsEmpty(
            ) [InnerVarDeclsEmpty]
            StatementsEmpty(
            ) [StatementsEmpty]
          ) [ConstructorDecl]
          MethodDecls(
            MethodDeclPar(
              MethodDeclChecker(
                RetTypeVoid(
                ) [RetTypeVoid]
                MethodName(
                 xyz
                ) [MethodName]
              ) [MethodDeclChecker]
              FormParsSingle(
                Type(
                 int
                ) [Type]
               h
              ) [FormParsSingle]
              InnerVarDecls(
                InnerVarDeclsEmpty(
                ) [InnerVarDeclsEmpty]
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  VarDeclSingleNoC(
                    VarDeclElemSingleNoC(
                     x
                    ) [VarDeclElemSingleNoC]
                  ) [VarDeclSingleNoC]
                ) [VarDecl]
              ) [InnerVarDecls]
              StatementsList(
                StatementsEmpty(
                ) [StatementsEmpty]
                StatementSingleLabel(
                  LabelDef(
                    Label(
                     Label
                    ) [Label]
                  ) [LabelDef]
                  StmtDesign(
                    DesignStmt(
                      DesignatorFirst(
                       x
                      ) [DesignatorFirst]
                      DsgnOpInc(
                      ) [DsgnOpInc]
                    ) [DesignStmt]
                  ) [StmtDesign]
                ) [StatementSingleLabel]
              ) [StatementsList]
            ) [MethodDeclPar]
            MethodDeclsEmpty(
            ) [MethodDeclsEmpty]
          ) [MethodDecls]
        ) [InnerMethodBlockAll]
      ) [ClassDeclsMethods]
    ) [ClassDecl]
  ) [DeclListClass]
  MethodDecls(
    MethodDeclPar(
      MethodDeclChecker(
        RetTypeType(
          Type(
           int
          ) [Type]
        ) [RetTypeType]
        MethodName(
         method
        ) [MethodName]
      ) [MethodDeclChecker]
      FormParsMultiple(
        FormParsSingle(
          Type(
           B
          ) [Type]
         d
        ) [FormParsSingle]
        Type(
         A
        ) [Type]
       a
      ) [FormParsMultiple]
      InnerVarDeclsEmpty(
      ) [InnerVarDeclsEmpty]
      StatementsEmpty(
      ) [StatementsEmpty]
    ) [MethodDeclPar]
    MethodDecls(
      MethodDeclNoPar(
        MethodDeclChecker(
          RetTypeVoid(
          ) [RetTypeVoid]
          MethodName(
           main
          ) [MethodName]
        ) [MethodDeclChecker]
        InnerVarDeclsEmpty(
        ) [InnerVarDeclsEmpty]
        StatementsList(
          StatementsList(
            StatementsEmpty(
            ) [StatementsEmpty]
            StatementSingleLabel(
              LabelDef(
                Label(
                 LABELA
                ) [Label]
              ) [LabelDef]
              StmtIfElse(
                CondSingle(
                  CondTermSingle(
                    CondFactMultiple(
                      ExprSingle(
                        TermSingle(
                          FactorDsgn(
                            DesignatorFirst(
                             a
                            ) [DesignatorFirst]
                          ) [FactorDsgn]
                        ) [TermSingle]
                      ) [ExprSingle]
                      RelopEqu(
                      ) [RelopEqu]
                      ExprSingle(
                        TermSingle(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [CondFactMultiple]
                  ) [CondTermSingle]
                ) [CondSingle]
                StatementMultiple(
                  StatementsBlock(
                    StatementsList(
                      StatementsEmpty(
                      ) [StatementsEmpty]
                      StatementSingle(
                        StmtIf(
                          CondSingle(
                            CondTermSingle(
                              CondFactMultiple(
                                ExprSingle(
                                  TermSingle(
                                    FactorDsgn(
                                      DesignatorFirst(
                                       b
                                      ) [DesignatorFirst]
                                    ) [FactorDsgn]
                                  ) [TermSingle]
                                ) [ExprSingle]
                                RelopEqu(
                                ) [RelopEqu]
                                ExprSingle(
                                  TermSingle(
                                    FactorNumber(
                                     0
                                    ) [FactorNumber]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [CondFactMultiple]
                            ) [CondTermSingle]
                          ) [CondSingle]
                          StatementSingle(
                            StmtDesign(
                              DesignStmt(
                                DesignatorFirst(
                                 a
                                ) [DesignatorFirst]
                                DsgnOpAssign(
                                  Assignop(
                                  ) [Assignop]
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumber(
                                       0
                                      ) [FactorNumber]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [DsgnOpAssign]
                              ) [DesignStmt]
                            ) [StmtDesign]
                          ) [StatementSingle]
                        ) [StmtIf]
                      ) [StatementSingle]
                    ) [StatementsList]
                  ) [StatementsBlock]
                ) [StatementMultiple]
                StatementSingle(
                  StmtDesign(
                    DesignStmt(
                      DesignatorFirst(
                       b
                      ) [DesignatorFirst]
                      DsgnOpAssign(
                        Assignop(
                        ) [Assignop]
                        ExprSingle(
                          TermSingle(
                            FactorNumber(
                             0
                            ) [FactorNumber]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [DsgnOpAssign]
                    ) [DesignStmt]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [StmtIfElse]
            ) [StatementSingleLabel]
          ) [StatementsList]
          StatementSingle(
            StmtGoto(
              Label(
               xyz
              ) [Label]
            ) [StmtGoto]
          ) [StatementSingle]
        ) [StatementsList]
      ) [MethodDeclNoPar]
      MethodDeclsEmpty(
      ) [MethodDeclsEmpty]
    ) [MethodDecls]
  ) [MethodDecls]
) [Program]
INFO  23:32:59,047 - Pronadjen simbol: p na liniji 1
INFO  23:32:59,047 - Pronadjen simbol: size na liniji 2
INFO  23:32:59,048 - Pronadjen simbol: jaab na liniji 2
INFO  23:32:59,048 - Pronadjen simbol: xx na liniji 2
INFO  23:32:59,048 - Pronadjen simbol: variable na liniji 3
INFO  23:32:59,048 - Pronadjen simbol: xyz na liniji 4
INFO  23:32:59,048 - Pronadjen simbol: xyza na liniji 5
INFO  23:32:59,049 - Pronadjen simbol: jana2 na liniji 5
INFO  23:32:59,049 - Pronadjen simbol: Base na liniji 6
INFO  23:32:59,049 - Pronadjen simbol: Derived na liniji 10
INFO  23:32:59,049 - Pronadjen simbol: B na liniji 13
INFO  23:32:59,049 - Pronadjen simbol: baseField na liniji 14
INFO  23:32:59,049 - Pronadjen simbol: xyza na liniji 15
INFO  23:32:59,050 - Pronadjen simbol: B na liniji 17
INFO  23:32:59,050 - Pronadjen simbol: a na liniji 17
INFO  23:32:59,050 - Pronadjen simbol: j na liniji 17
INFO  23:32:59,050 - Pronadjen simbol: xyz na liniji 20
INFO  23:32:59,050 - Pronadjen simbol: j na liniji 20
INFO  23:32:59,050 - Pronadjen simbol: A na liniji 23
INFO  23:32:59,051 - Pronadjen simbol: A na liniji 25
INFO  23:32:59,051 - Pronadjen simbol: xyz na liniji 28
INFO  23:32:59,053 - Pronadjen simbol: h na liniji 28
INFO  23:32:59,054 - Pronadjen simbol: x na liniji 28
INFO  23:32:59,054 - Pronadjen simbol: Label na liniji 29
INFO  23:32:59,054 - Pronadjen simbol: method na liniji 35
INFO  23:32:59,054 - Pronadjen simbol: d na liniji 35
INFO  23:32:59,054 - Pronadjen simbol: a na liniji 35
INFO  23:32:59,055 - Pronadjen simbol: main na liniji 36
INFO  23:32:59,055 - Pronadjen simbol: LABELA na liniji 37
ERROR 23:32:59,057 - Labela: Ime xyz nije deklarisana! na liniji 38
