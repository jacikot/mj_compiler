INFO  19:48:24,811 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program_original.mj
INFO  19:48:24,894 - #2 program
INFO  19:48:24,894 - #22 p
INFO  19:48:24,894 - #5 const
INFO  19:48:24,896 - #22 int
INFO  19:48:24,896 - #22 size
INFO  19:48:24,897 - #9 =
INFO  19:48:24,897 - #20 10
INFO  19:48:24,897 - #7 ,
INFO  19:48:24,897 - #22 jaab
INFO  19:48:24,897 - #9 =
INFO  19:48:24,897 - #20 0
INFO  19:48:24,898 - #7 ,
INFO  19:48:24,898 - #22 xx
INFO  19:48:24,898 - #9 =
INFO  19:48:24,898 - #20 5
INFO  19:48:24,898 - #6 ;
INFO  19:48:24,898 - #5 const
INFO  19:48:24,898 - #22 char
INFO  19:48:24,898 - #22 variable
INFO  19:48:24,899 - #9 =
INFO  19:48:24,899 - #23 'p'
INFO  19:48:24,901 - #6 ;
INFO  19:48:24,901 - #5 const
INFO  19:48:24,901 - #22 bool
INFO  19:48:24,901 - #22 xyz
INFO  19:48:24,901 - #9 =
INFO  19:48:24,901 - #21 0
INFO  19:48:24,901 - #6 ;
INFO  19:48:24,902 - #22 int
INFO  19:48:24,902 - #22 xyza
INFO  19:48:24,902 - #7 ,
INFO  19:48:24,902 - #22 jana2
INFO  19:48:24,902 - #10 [
INFO  19:48:24,902 - #11 ]
INFO  19:48:24,903 - #6 ;
INFO  19:48:24,903 - #13 class
INFO  19:48:24,903 - #22 Base
INFO  19:48:24,903 - #3 {
INFO  19:48:24,905 - #4 }
INFO  19:48:24,906 - #13 class
INFO  19:48:24,908 - #22 Derived
INFO  19:48:24,908 - #14 extends
INFO  19:48:24,908 - #22 Base
INFO  19:48:24,908 - #3 {
INFO  19:48:24,908 - #4 }
INFO  19:48:24,908 - #13 class
INFO  19:48:24,908 - #22 B
INFO  19:48:24,908 - #3 {
INFO  19:48:24,909 - #22 int
INFO  19:48:24,909 - #22 baseField
INFO  19:48:24,909 - #10 [
INFO  19:48:24,909 - #11 ]
INFO  19:48:24,909 - #6 ;
INFO  19:48:24,909 - #22 int
INFO  19:48:24,909 - #22 xyza
INFO  19:48:24,909 - #6 ;
INFO  19:48:24,910 - #3 {
INFO  19:48:24,910 - #22 B
INFO  19:48:24,910 - #15 (
INFO  19:48:24,911 - #16 )
INFO  19:48:24,911 - #22 int
INFO  19:48:24,912 - #22 a
INFO  19:48:24,912 - #7 ,
INFO  19:48:24,912 - #22 j
INFO  19:48:24,912 - #6 ;
INFO  19:48:24,912 - #3 {
INFO  19:48:24,914 - #4 }
INFO  19:48:24,915 - #18 void
INFO  19:48:24,916 - #22 xyz
INFO  19:48:24,917 - #15 (
INFO  19:48:24,920 - #22 int
INFO  19:48:24,920 - #22 j
INFO  19:48:24,920 - #16 )
INFO  19:48:24,920 - #3 {
INFO  19:48:24,920 - #4 }
INFO  19:48:24,920 - #4 }
INFO  19:48:24,922 - #4 }
INFO  19:48:24,922 - #13 class
INFO  19:48:24,922 - #22 A
INFO  19:48:24,922 - #14 extends
INFO  19:48:24,922 - #22 B
INFO  19:48:24,923 - #3 {
INFO  19:48:24,923 - #3 {
INFO  19:48:24,923 - #22 A
INFO  19:48:24,923 - #15 (
INFO  19:48:24,923 - #16 )
INFO  19:48:24,923 - #3 {
INFO  19:48:24,923 - #4 }
INFO  19:48:24,923 - #18 void
INFO  19:48:24,923 - #22 xyz
INFO  19:48:24,923 - #15 (
INFO  19:48:24,923 - #22 int
INFO  19:48:24,924 - #22 h
INFO  19:48:24,924 - #16 )
INFO  19:48:24,924 - #22 int
INFO  19:48:24,924 - #22 x
INFO  19:48:24,924 - #6 ;
INFO  19:48:24,924 - #3 {
INFO  19:48:24,924 - #22 Label
INFO  19:48:24,924 - #8 :
INFO  19:48:24,932 - #22 x
INFO  19:48:24,933 - #47 ++
INFO  19:48:24,934 - #6 ;
INFO  19:48:24,934 - #4 }
INFO  19:48:24,934 - #18 void
INFO  19:48:24,935 - #22 mmm
INFO  19:48:24,935 - #15 (
INFO  19:48:24,935 - #16 )
INFO  19:48:24,935 - #3 {
INFO  19:48:24,935 - #4 }
INFO  19:48:24,935 - #4 }
INFO  19:48:24,935 - #4 }
INFO  19:48:24,935 - #12 record
INFO  19:48:24,935 - #22 M
INFO  19:48:24,935 - #3 {
INFO  19:48:24,936 - #4 }
INFO  19:48:24,937 - #22 A
INFO  19:48:24,937 - #22 niz
INFO  19:48:24,938 - #10 [
INFO  19:48:24,938 - #11 ]
INFO  19:48:24,938 - #6 ;
INFO  19:48:24,938 - #3 {
INFO  19:48:24,938 - #22 B
INFO  19:48:24,938 - #22 method
INFO  19:48:24,938 - #15 (
INFO  19:48:24,938 - #22 B
INFO  19:48:24,938 - #22 d
INFO  19:48:24,938 - #7 ,
INFO  19:48:24,938 - #22 A
INFO  19:48:24,938 - #22 a
INFO  19:48:24,939 - #16 )
INFO  19:48:24,939 - #22 int
INFO  19:48:24,939 - #22 h
INFO  19:48:24,939 - #6 ;
INFO  19:48:24,939 - #3 {
INFO  19:48:24,939 - #24 if
INFO  19:48:24,939 - #15 (
INFO  19:48:24,939 - #20 1
INFO  19:48:24,939 - #36 >
INFO  19:48:24,939 - #20 0
INFO  19:48:24,941 - #40 &&
INFO  19:48:24,941 - #19 new
INFO  19:48:24,941 - #22 A
INFO  19:48:24,941 - #34 ==
INFO  19:48:24,942 - #19 new
INFO  19:48:24,943 - #22 A
INFO  19:48:24,943 - #16 )
INFO  19:48:24,944 - #3 {
INFO  19:48:24,944 - #33 print
INFO  19:48:24,944 - #15 (
INFO  19:48:24,944 - #23 'j'
INFO  19:48:24,944 - #16 )
INFO  19:48:24,944 - #6 ;
INFO  19:48:24,944 - #31 return
INFO  19:48:24,944 - #19 new
INFO  19:48:24,944 - #22 A
INFO  19:48:24,944 - #6 ;
INFO  19:48:24,944 - #4 }
INFO  19:48:24,944 - #4 }
INFO  19:48:24,945 - #18 void
INFO  19:48:24,945 - #22 main
INFO  19:48:24,945 - #15 (
INFO  19:48:24,945 - #22 A
INFO  19:48:24,945 - #22 a
INFO  19:48:24,945 - #16 )
INFO  19:48:24,945 - #3 {
INFO  19:48:24,945 - #26 goto
INFO  19:48:24,945 - #22 LABELA
INFO  19:48:24,945 - #6 ;
INFO  19:48:24,945 - #22 LABELA
INFO  19:48:24,945 - #8 :
INFO  19:48:24,945 - #22 a
INFO  19:48:24,945 - #17 .
INFO  19:48:24,946 - #22 baseField
INFO  19:48:24,946 - #10 [
INFO  19:48:24,946 - #20 0
INFO  19:48:24,946 - #11 ]
INFO  19:48:24,946 - #47 ++
INFO  19:48:24,946 - #6 ;
INFO  19:48:24,946 - #22 niz
INFO  19:48:24,946 - #10 [
INFO  19:48:24,946 - #22 a
INFO  19:48:24,946 - #17 .
INFO  19:48:24,947 - #22 baseField
INFO  19:48:24,947 - #10 [
INFO  19:48:24,947 - #20 0
INFO  19:48:24,947 - #11 ]
INFO  19:48:24,947 - #11 ]
INFO  19:48:24,947 - #17 .
INFO  19:48:24,947 - #22 baseField
INFO  19:48:24,947 - #10 [
INFO  19:48:24,947 - #20 2
INFO  19:48:24,948 - #11 ]
INFO  19:48:24,948 - #47 ++
INFO  19:48:24,948 - #6 ;
INFO  19:48:24,948 - #27 do
INFO  19:48:24,948 - #3 {
INFO  19:48:24,949 - #32 read
INFO  19:48:24,949 - #15 (
INFO  19:48:24,949 - #22 a
INFO  19:48:24,949 - #17 .
INFO  19:48:24,949 - #22 baseField
INFO  19:48:24,949 - #10 [
INFO  19:48:24,949 - #20 0
INFO  19:48:24,949 - #11 ]
INFO  19:48:24,950 - #16 )
INFO  19:48:24,950 - #6 ;
INFO  19:48:24,950 - #30 continue
INFO  19:48:24,950 - #6 ;
INFO  19:48:24,950 - #4 }
INFO  19:48:24,951 - #28 while
INFO  19:48:24,951 - #15 (
INFO  19:48:24,951 - #20 1
INFO  19:48:24,951 - #36 >
INFO  19:48:24,951 - #20 0
INFO  19:48:24,951 - #16 )
INFO  19:48:24,951 - #6 ;
INFO  19:48:24,951 - #22 a
INFO  19:48:24,952 - #17 .
INFO  19:48:24,952 - #22 mmm
INFO  19:48:24,952 - #15 (
INFO  19:48:24,952 - #16 )
INFO  19:48:24,952 - #6 ;
INFO  19:48:24,952 - #4 }
INFO  19:48:24,953 - #4 }
INFO  19:48:24,970 - Program(
  ProgramName(
   p
  ) [ProgramName]
  DeclListVar(
    DeclListRecord(
      DeclListClass(
        DeclListClass(
          DeclListClass(
            DeclListClass(
              DeclListVar(
                DeclListConst(
                  DeclListConst(
                    DeclListConst(
                      DeclListEmpty(
                      ) [DeclListEmpty]
                      DeclConst(
                        Type(
                         int
                        ) [Type]
                        ConstDeclMultiple(
                          ConstDeclMultiple(
                            ConstDeclSingle(
                              ConstDeclElemCorrect(
                               size
                                ConstLitNum(
                                 10
                                ) [ConstLitNum]
                              ) [ConstDeclElemCorrect]
                            ) [ConstDeclSingle]
                            ConstDeclElemCorrect(
                             jaab
                              ConstLitNum(
                               0
                              ) [ConstLitNum]
                            ) [ConstDeclElemCorrect]
                          ) [ConstDeclMultiple]
                          ConstDeclElemCorrect(
                           xx
                            ConstLitNum(
                             5
                            ) [ConstLitNum]
                          ) [ConstDeclElemCorrect]
                        ) [ConstDeclMultiple]
                      ) [DeclConst]
                    ) [DeclListConst]
                    DeclConst(
                      Type(
                       char
                      ) [Type]
                      ConstDeclSingle(
                        ConstDeclElemCorrect(
                         variable
                          ConstLitChar(
                           'p'
                          ) [ConstLitChar]
                        ) [ConstDeclElemCorrect]
                      ) [ConstDeclSingle]
                    ) [DeclConst]
                  ) [DeclListConst]
                  DeclConst(
                    Type(
                     bool
                    ) [Type]
                    ConstDeclSingle(
                      ConstDeclElemCorrect(
                       xyz
                        ConstLitBool(
                         0
                        ) [ConstLitBool]
                      ) [ConstDeclElemCorrect]
                    ) [ConstDeclSingle]
                  ) [DeclConst]
                ) [DeclListConst]
                VarDeclGlobalCorrect(
                  Type(
                   int
                  ) [Type]
                  VarDeclMultiple(
                    VarDeclSingle(
                      VarDeclElemSingle(
                       xyza
                      ) [VarDeclElemSingle]
                    ) [VarDeclSingle]
                    VarDeclElemArray(
                     jana2
                    ) [VarDeclElemArray]
                  ) [VarDeclMultiple]
                ) [VarDeclGlobalCorrect]
              ) [DeclListVar]
              ClassDecl(
                ClassName(
                 Base
                ) [ClassName]
                ExtendsDeclEmpty(
                ) [ExtendsDeclEmpty]
                ClassDeclsEmpty(
                ) [ClassDeclsEmpty]
              ) [ClassDecl]
            ) [DeclListClass]
            ClassDecl(
              ClassName(
               Derived
              ) [ClassName]
              ExtendsDeclType(
                Type(
                 Base
                ) [Type]
              ) [ExtendsDeclType]
              ClassDeclsEmpty(
              ) [ClassDeclsEmpty]
            ) [ClassDecl]
          ) [DeclListClass]
          ClassDecl(
            ClassName(
             B
            ) [ClassName]
            ExtendsDeclEmpty(
            ) [ExtendsDeclEmpty]
            ClassVarDecls(
              VarDeclsCorrect(
                Type(
                 int
                ) [Type]
                VarDeclSingleNoC(
                  VarDeclElemArrayNoC(
                   baseField
                  ) [VarDeclElemArrayNoC]
                ) [VarDeclSingleNoC]
              ) [VarDeclsCorrect]
              ClassVarDecls(
                VarDeclsCorrect(
                  Type(
                   int
                  ) [Type]
                  VarDeclSingleNoC(
                    VarDeclElemSingleNoC(
                     xyza
                    ) [VarDeclElemSingleNoC]
                  ) [VarDeclSingleNoC]
                ) [VarDeclsCorrect]
                ClassDeclsMethods(
                  InnerMethodBlockAll(
                    ConstructorDecl(
                      ConstructorName(
                       B
                      ) [ConstructorName]
                      InnerVarDecls(
                        InnerVarDeclsEmpty(
                        ) [InnerVarDeclsEmpty]
                        VarDecl(
                          Type(
                           int
                          ) [Type]
                          VarDeclMultipleNoC(
                            VarDeclSingleNoC(
                              VarDeclElemSingleNoC(
                               a
                              ) [VarDeclElemSingleNoC]
                            ) [VarDeclSingleNoC]
                            VarDeclElemSingleNoC(
                             j
                            ) [VarDeclElemSingleNoC]
                          ) [VarDeclMultipleNoC]
                        ) [VarDecl]
                      ) [InnerVarDecls]
                      StatementsEmpty(
                      ) [StatementsEmpty]
                    ) [ConstructorDecl]
                    MethodDecls(
                      MethodDeclPar(
                        MethodDeclChecker(
                          RetTypeVoid(
                          ) [RetTypeVoid]
                          MethodName(
                           xyz
                          ) [MethodName]
                        ) [MethodDeclChecker]
                        FormParsSingle(
                          Type(
                           int
                          ) [Type]
                         j
                        ) [FormParsSingle]
                        InnerVarDeclsEmpty(
                        ) [InnerVarDeclsEmpty]
                        StatementsEmpty(
                        ) [StatementsEmpty]
                      ) [MethodDeclPar]
                      MethodDeclsEmpty(
                      ) [MethodDeclsEmpty]
                    ) [MethodDecls]
                  ) [InnerMethodBlockAll]
                ) [ClassDeclsMethods]
              ) [ClassVarDecls]
            ) [ClassVarDecls]
          ) [ClassDecl]
        ) [DeclListClass]
        ClassDecl(
          ClassName(
           A
          ) [ClassName]
          ExtendsDeclType(
            Type(
             B
            ) [Type]
          ) [ExtendsDeclType]
          ClassDeclsMethods(
            InnerMethodBlockAll(
              ConstructorDecl(
                ConstructorName(
                 A
                ) [ConstructorName]
                InnerVarDeclsEmpty(
                ) [InnerVarDeclsEmpty]
                StatementsEmpty(
                ) [StatementsEmpty]
              ) [ConstructorDecl]
              MethodDecls(
                MethodDeclPar(
                  MethodDeclChecker(
                    RetTypeVoid(
                    ) [RetTypeVoid]
                    MethodName(
                     xyz
                    ) [MethodName]
                  ) [MethodDeclChecker]
                  FormParsSingle(
                    Type(
                     int
                    ) [Type]
                   h
                  ) [FormParsSingle]
                  InnerVarDecls(
                    InnerVarDeclsEmpty(
                    ) [InnerVarDeclsEmpty]
                    VarDecl(
                      Type(
                       int
                      ) [Type]
                      VarDeclSingleNoC(
                        VarDeclElemSingleNoC(
                         x
                        ) [VarDeclElemSingleNoC]
                      ) [VarDeclSingleNoC]
                    ) [VarDecl]
                  ) [InnerVarDecls]
                  StatementsList(
                    StatementsEmpty(
                    ) [StatementsEmpty]
                    StatementSingleLabel(
                      LabelDef(
                        Label(
                         Label
                        ) [Label]
                      ) [LabelDef]
                      StmtDesign(
                        DsgnOpInc(
                          CallName(
                            DesignatorFirst(
                             x
                            ) [DesignatorFirst]
                          ) [CallName]
                        ) [DsgnOpInc]
                      ) [StmtDesign]
                    ) [StatementSingleLabel]
                  ) [StatementsList]
                ) [MethodDeclPar]
                MethodDecls(
                  MethodDeclNoPar(
                    MethodDeclChecker(
                      RetTypeVoid(
                      ) [RetTypeVoid]
                      MethodName(
                       mmm
                      ) [MethodName]
                    ) [MethodDeclChecker]
                    InnerVarDeclsEmpty(
                    ) [InnerVarDeclsEmpty]
                    StatementsEmpty(
                    ) [StatementsEmpty]
                  ) [MethodDeclNoPar]
                  MethodDeclsEmpty(
                  ) [MethodDeclsEmpty]
                ) [MethodDecls]
              ) [MethodDecls]
            ) [InnerMethodBlockAll]
          ) [ClassDeclsMethods]
        ) [ClassDecl]
      ) [DeclListClass]
      RecordDecl(
        RecordName(
         M
        ) [RecordName]
        InnerVarDeclsEmpty(
        ) [InnerVarDeclsEmpty]
      ) [RecordDecl]
    ) [DeclListRecord]
    VarDeclGlobalCorrect(
      Type(
       A
      ) [Type]
      VarDeclSingle(
        VarDeclElemArray(
         niz
        ) [VarDeclElemArray]
      ) [VarDeclSingle]
    ) [VarDeclGlobalCorrect]
  ) [DeclListVar]
  MethodDecls(
    MethodDeclPar(
      MethodDeclChecker(
        RetTypeType(
          Type(
           B
          ) [Type]
        ) [RetTypeType]
        MethodName(
         method
        ) [MethodName]
      ) [MethodDeclChecker]
      FormParsMultiple(
        FormParsSingle(
          Type(
           B
          ) [Type]
         d
        ) [FormParsSingle]
        Type(
         A
        ) [Type]
       a
      ) [FormParsMultiple]
      InnerVarDecls(
        InnerVarDeclsEmpty(
        ) [InnerVarDeclsEmpty]
        VarDecl(
          Type(
           int
          ) [Type]
          VarDeclSingleNoC(
            VarDeclElemSingleNoC(
             h
            ) [VarDeclElemSingleNoC]
          ) [VarDeclSingleNoC]
        ) [VarDecl]
      ) [InnerVarDecls]
      StatementsList(
        StatementsEmpty(
        ) [StatementsEmpty]
        StatementSingle(
          StmtIf(
            CondSingle(
              CondTermMultiple(
                CondTermSingle(
                  CondFactMultiple(
                    ExprSingle(
                      TermSingle(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermSingle]
                    ) [ExprSingle]
                    RelopGrt(
                    ) [RelopGrt]
                    ExprSingle(
                      TermSingle(
                        FactorNumber(
                         0
                        ) [FactorNumber]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [CondFactMultiple]
                ) [CondTermSingle]
                CondFactMultipleEq(
                  ExprSingle(
                    TermSingle(
                      FactorObject(
                        Type(
                         A
                        ) [Type]
                      ) [FactorObject]
                    ) [TermSingle]
                  ) [ExprSingle]
                  RelopEqu(
                  ) [RelopEqu]
                  ExprSingle(
                    TermSingle(
                      FactorObject(
                        Type(
                         A
                        ) [Type]
                      ) [FactorObject]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [CondFactMultipleEq]
              ) [CondTermMultiple]
            ) [CondSingle]
            StatementMultiple(
              StatementsBlock(
                StatementsList(
                  StatementsList(
                    StatementsEmpty(
                    ) [StatementsEmpty]
                    StatementSingle(
                      StmtPrint(
                        ExprSingle(
                          TermSingle(
                            FactorChar(
                             'j'
                            ) [FactorChar]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [StmtPrint]
                    ) [StatementSingle]
                  ) [StatementsList]
                  StatementSingle(
                    StmtReturn(
                      ExprSingle(
                        TermSingle(
                          FactorObject(
                            Type(
                             A
                            ) [Type]
                          ) [FactorObject]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [StmtReturn]
                  ) [StatementSingle]
                ) [StatementsList]
              ) [StatementsBlock]
            ) [StatementMultiple]
          ) [StmtIf]
        ) [StatementSingle]
      ) [StatementsList]
    ) [MethodDeclPar]
    MethodDecls(
      MethodDeclPar(
        MethodDeclChecker(
          RetTypeVoid(
          ) [RetTypeVoid]
          MethodName(
           main
          ) [MethodName]
        ) [MethodDeclChecker]
        FormParsSingle(
          Type(
           A
          ) [Type]
         a
        ) [FormParsSingle]
        InnerVarDeclsEmpty(
        ) [InnerVarDeclsEmpty]
        StatementsList(
          StatementsList(
            StatementsList(
              StatementsList(
                StatementsList(
                  StatementsEmpty(
                  ) [StatementsEmpty]
                  StatementSingle(
                    StmtGoto(
                      Label(
                       LABELA
                      ) [Label]
                    ) [StmtGoto]
                  ) [StatementSingle]
                ) [StatementsList]
                StatementSingleLabel(
                  LabelDef(
                    Label(
                     LABELA
                    ) [Label]
                  ) [LabelDef]
                  StmtDesign(
                    DsgnOpInc(
                      CallName(
                        DesignatorAccessArray(
                          DesignatorAccessField(
                            DesignatorFirst(
                             a
                            ) [DesignatorFirst]
                           baseField
                          ) [DesignatorAccessField]
                          ExprSingle(
                            TermSingle(
                              FactorNumber(
                               0
                              ) [FactorNumber]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [DesignatorAccessArray]
                      ) [CallName]
                    ) [DsgnOpInc]
                  ) [StmtDesign]
                ) [StatementSingleLabel]
              ) [StatementsList]
              StatementSingle(
                StmtDesign(
                  DsgnOpInc(
                    CallName(
                      DesignatorAccessArray(
                        DesignatorAccessField(
                          DesignatorAccessArray(
                            DesignatorFirst(
                             niz
                            ) [DesignatorFirst]
                            ExprSingle(
                              TermSingle(
                                FactorDsgn(
                                  DesignatorAccessArray(
                                    DesignatorAccessField(
                                      DesignatorFirst(
                                       a
                                      ) [DesignatorFirst]
                                     baseField
                                    ) [DesignatorAccessField]
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumber(
                                         0
                                        ) [FactorNumber]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [DesignatorAccessArray]
                                ) [FactorDsgn]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [DesignatorAccessArray]
                         baseField
                        ) [DesignatorAccessField]
                        ExprSingle(
                          TermSingle(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [DesignatorAccessArray]
                    ) [CallName]
                  ) [DsgnOpInc]
                ) [StmtDesign]
              ) [StatementSingle]
            ) [StatementsList]
            StatementSingle(
              StmtDoWhile(
                DoStart(
                ) [DoStart]
                StatementMultiple(
                  StatementsBlock(
                    StatementsList(
                      StatementsList(
                        StatementsEmpty(
                        ) [StatementsEmpty]
                        StatementSingle(
                          StmtRead(
                            DesignatorAccessArray(
                              DesignatorAccessField(
                                DesignatorFirst(
                                 a
                                ) [DesignatorFirst]
                               baseField
                              ) [DesignatorAccessField]
                              ExprSingle(
                                TermSingle(
                                  FactorNumber(
                                   0
                                  ) [FactorNumber]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [DesignatorAccessArray]
                          ) [StmtRead]
                        ) [StatementSingle]
                      ) [StatementsList]
                      StatementSingle(
                        StmtContinue(
                        ) [StmtContinue]
                      ) [StatementSingle]
                    ) [StatementsList]
                  ) [StatementsBlock]
                ) [StatementMultiple]
                CondSingle(
                  CondTermSingle(
                    CondFactMultiple(
                      ExprSingle(
                        TermSingle(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermSingle]
                      ) [ExprSingle]
                      RelopGrt(
                      ) [RelopGrt]
                      ExprSingle(
                        TermSingle(
                          FactorNumber(
                           0
                          ) [FactorNumber]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [CondFactMultiple]
                  ) [CondTermSingle]
                ) [CondSingle]
              ) [StmtDoWhile]
            ) [StatementSingle]
          ) [StatementsList]
          StatementSingle(
            StmtDesign(
              DsgnOpCallEmpty(
                CallName(
                  DesignatorAccessField(
                    DesignatorFirst(
                     a
                    ) [DesignatorFirst]
                   mmm
                  ) [DesignatorAccessField]
                ) [CallName]
              ) [DsgnOpCallEmpty]
            ) [StmtDesign]
          ) [StatementSingle]
        ) [StatementsList]
      ) [MethodDeclPar]
      MethodDeclsEmpty(
      ) [MethodDeclsEmpty]
    ) [MethodDecls]
  ) [MethodDecls]
) [Program]
INFO  19:48:24,981 - Pronadjen simbol: p na liniji 1
INFO  19:48:24,981 - Pronadjen simbol: size na liniji 2
INFO  19:48:24,981 - Pronadjen simbol: jaab na liniji 2
INFO  19:48:24,981 - Pronadjen simbol: xx na liniji 2
INFO  19:48:24,982 - Pronadjen simbol: variable na liniji 3
INFO  19:48:24,982 - Pronadjen simbol: xyz na liniji 4
INFO  19:48:24,982 - Pronadjen simbol: xyza na liniji 5
INFO  19:48:24,982 - Pronadjen simbol: jana2 na liniji 5
INFO  19:48:24,982 - Pronadjen simbol: Base na liniji 6
INFO  19:48:24,982 - Pronadjen simbol: Derived na liniji 10
INFO  19:48:24,982 - Pronadjen simbol: B na liniji 13
INFO  19:48:24,982 - Pronadjen simbol: baseField na liniji 14
INFO  19:48:24,983 - Pronadjen simbol: xyza na liniji 15
INFO  19:48:24,983 - Pronadjen simbol: B na liniji 17
INFO  19:48:24,983 - Pronadjen simbol: a na liniji 17
INFO  19:48:24,983 - Pronadjen simbol: j na liniji 17
INFO  19:48:24,983 - Pronadjen simbol: xyz na liniji 20
INFO  19:48:24,983 - Pronadjen simbol: j na liniji 20
INFO  19:48:24,983 - Pronadjen simbol: A na liniji 25
INFO  19:48:24,983 - Pronadjen simbol: A na liniji 27
INFO  19:48:24,984 - Pronadjen simbol: xyz na liniji 30
INFO  19:48:24,985 - Pronadjen simbol: h na liniji 30
INFO  19:48:24,985 - Pronadjen simbol: x na liniji 30
INFO  19:48:24,986 - Pronadjen simbol: Label na liniji 31
INFO  19:48:24,988 - Upotreba simbola: x prihvacena na liniji 31
INFO  19:48:24,988 - Pronadjen simbol: mmm na liniji 33
INFO  19:48:24,988 - Pronadjen simbol: M na liniji 38
INFO  19:48:24,988 - Pronadjen simbol: niz na liniji 42
INFO  19:48:24,988 - Pronadjen simbol: method na liniji 45
INFO  19:48:24,989 - Pronadjen simbol: d na liniji 45
INFO  19:48:24,989 - Pronadjen simbol: a na liniji 45
INFO  19:48:24,989 - Pronadjen simbol: h na liniji 45
INFO  19:48:24,989 - Pronadjen simbol: main na liniji 54
INFO  19:48:24,989 - Pronadjen simbol: a na liniji 54
INFO  19:48:24,989 - Pronadjen simbol: LABELA na liniji 56
INFO  19:48:24,990 - Upotreba simbola: LABELA prihvacena na liniji 55
INFO  19:48:24,990 - Upotreba simbola: a prihvacena na liniji 56
INFO  19:48:24,990 - Upotreba simbola: baseField prihvacena na liniji 56
INFO  19:48:24,990 - Upotreba simbola: niz prihvacena na liniji 57
INFO  19:48:24,991 - Upotreba simbola: a prihvacena na liniji 57
INFO  19:48:24,991 - Upotreba simbola: baseField prihvacena na liniji 57
INFO  19:48:24,991 - Upotreba simbola: baseField prihvacena na liniji 57
INFO  19:48:24,991 - Upotreba simbola: a prihvacena na liniji 59
INFO  19:48:24,991 - Upotreba simbola: baseField prihvacena na liniji 59
INFO  19:48:24,991 - Upotreba simbola: a prihvacena na liniji 63
INFO  19:48:24,991 - Upotreba simbola: mmm prihvacena na liniji 63
INFO  19:48:24,991 - Upotreba simbola: mmm prihvacena na liniji 63
