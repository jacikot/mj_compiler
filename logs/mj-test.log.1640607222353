INFO  12:55:07,881 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program.mj
INFO  12:55:07,955 - #2 program
INFO  12:55:07,956 - #22 p
INFO  12:55:07,956 - #5 const
INFO  12:55:07,957 - #22 int
INFO  12:55:07,957 - #22 size
INFO  12:55:07,958 - #9 =
INFO  12:55:07,958 - #20 10
INFO  12:55:07,958 - #6 ;
INFO  12:55:07,958 - #13 class
INFO  12:55:07,959 - #22 Table
INFO  12:55:07,959 - #3 {
INFO  12:55:07,959 - #22 int
INFO  12:55:07,960 - #22 pos
INFO  12:55:07,960 - #10 [
INFO  12:55:07,960 - #11 ]
INFO  12:55:07,960 - #7 ,
INFO  12:55:07,961 - #22 neg
INFO  12:55:07,961 - #10 [
INFO  12:55:07,962 - #11 ]
INFO  12:55:07,962 - #6 ;
INFO  12:55:07,962 - #3 {
INFO  12:55:07,963 - #18 void
INFO  12:55:07,964 - #22 putp
INFO  12:55:07,965 - #15 (
INFO  12:55:07,965 - #22 int
INFO  12:55:07,965 - #22 a
INFO  12:55:07,965 - #7 ,
INFO  12:55:07,966 - #22 int
INFO  12:55:07,966 - #22 idx
INFO  12:55:07,966 - #16 )
INFO  12:55:07,966 - #3 {
INFO  12:55:07,966 - #22 this
INFO  12:55:07,967 - #17 .
INFO  12:55:07,967 - #22 pos
INFO  12:55:07,967 - #10 [
INFO  12:55:07,967 - #22 idx
INFO  12:55:07,967 - #11 ]
INFO  12:55:07,968 - #9 =
INFO  12:55:07,968 - #22 a
INFO  12:55:07,968 - #6 ;
INFO  12:55:07,968 - #4 }
INFO  12:55:07,969 - #18 void
INFO  12:55:07,969 - #22 putn
INFO  12:55:07,969 - #15 (
INFO  12:55:07,969 - #22 int
INFO  12:55:07,969 - #22 a
INFO  12:55:07,969 - #7 ,
INFO  12:55:07,970 - #22 int
INFO  12:55:07,970 - #22 idx
INFO  12:55:07,970 - #16 )
INFO  12:55:07,970 - #3 {
INFO  12:55:07,970 - #22 this
INFO  12:55:07,970 - #17 .
INFO  12:55:07,970 - #22 neg
INFO  12:55:07,970 - #10 [
INFO  12:55:07,970 - #22 idx
INFO  12:55:07,970 - #11 ]
INFO  12:55:07,970 - #9 =
INFO  12:55:07,970 - #22 a
INFO  12:55:07,970 - #6 ;
INFO  12:55:07,970 - #4 }
INFO  12:55:07,970 - #22 int
INFO  12:55:07,970 - #22 getp
INFO  12:55:07,971 - #15 (
INFO  12:55:07,971 - #22 int
INFO  12:55:07,971 - #22 idx
INFO  12:55:07,971 - #16 )
INFO  12:55:07,971 - #3 {
INFO  12:55:07,971 - #31 return
INFO  12:55:07,971 - #22 pos
INFO  12:55:07,971 - #10 [
INFO  12:55:07,971 - #22 idx
INFO  12:55:07,971 - #11 ]
INFO  12:55:07,971 - #6 ;
INFO  12:55:07,971 - #4 }
INFO  12:55:07,971 - #22 int
INFO  12:55:07,971 - #22 getn
INFO  12:55:07,971 - #15 (
INFO  12:55:07,971 - #22 int
INFO  12:55:07,971 - #22 idx
INFO  12:55:07,972 - #16 )
INFO  12:55:07,972 - #3 {
INFO  12:55:07,972 - #31 return
INFO  12:55:07,972 - #22 neg
INFO  12:55:07,972 - #10 [
INFO  12:55:07,972 - #22 idx
INFO  12:55:07,972 - #11 ]
INFO  12:55:07,972 - #6 ;
INFO  12:55:07,972 - #4 }
INFO  12:55:07,972 - #4 }
INFO  12:55:07,973 - #4 }
INFO  12:55:07,973 - #12 record
INFO  12:55:07,974 - #22 Board
INFO  12:55:07,974 - #3 {
INFO  12:55:07,974 - #22 int
INFO  12:55:07,974 - #22 rows
INFO  12:55:07,974 - #22 i
ERROR 12:55:07,974 - 
Sintaksna greska na liniji 13
INFO  12:55:07,974 - #7 ,
INFO  12:55:07,975 - #22 columns
INFO  12:55:07,975 - #6 ;
INFO  12:55:07,975 - #4 }
ERROR 13:13:35,355 - Izvrsen oporavak do , u liniji 13
INFO  13:13:35,357 - #22 Table
INFO  13:13:35,359 - #22 val
INFO  13:13:35,359 - #6 ;
INFO  13:13:35,359 - #22 Board
INFO  13:13:35,359 - #22 board
INFO  13:13:35,359 - #6 ;
INFO  13:13:35,359 - #3 {
INFO  13:13:35,359 - #18 void
INFO  13:13:35,359 - #22 f
INFO  13:13:35,359 - #15 (
INFO  13:13:35,359 - #22 char
INFO  13:13:35,359 - #22 ch
INFO  13:13:35,360 - #7 ,
INFO  13:13:35,360 - #22 int
INFO  13:13:35,360 - #22 a
INFO  13:13:35,360 - #7 ,
INFO  13:13:35,360 - #22 int
INFO  13:13:35,360 - #22 arg
INFO  13:13:35,360 - #16 )
INFO  13:13:35,360 - #22 int
INFO  13:13:35,360 - #22 x
INFO  13:13:35,360 - #6 ;
INFO  13:13:35,360 - #3 {
INFO  13:13:35,360 - #22 x
INFO  13:13:35,360 - #9 =
INFO  13:13:35,360 - #22 arg
INFO  13:13:35,360 - #6 ;
INFO  13:13:35,360 - #4 }
INFO  13:13:35,360 - #18 void
INFO  13:13:35,360 - #22 main
INFO  13:13:35,360 - #15 (
INFO  13:13:35,360 - #16 )
INFO  13:13:35,361 - #22 int
INFO  13:13:35,361 - #22 x
INFO  13:13:35,361 - #7 ,
INFO  13:13:35,361 - #22 i
INFO  13:13:35,361 - #6 ;
INFO  13:13:35,361 - #22 char
INFO  13:13:35,361 - #22 c
INFO  13:13:35,361 - #6 ;
INFO  13:13:35,361 - #3 {
INFO  13:13:35,361 - #22 val
INFO  13:13:35,361 - #9 =
INFO  13:13:35,361 - #19 new
INFO  13:13:35,361 - #22 Table
INFO  13:13:35,361 - #6 ;
INFO  13:13:35,361 - #22 val
INFO  13:13:35,361 - #17 .
INFO  13:13:35,361 - #22 pos
INFO  13:13:35,362 - #9 =
INFO  13:13:35,362 - #19 new
INFO  13:13:35,362 - #22 int
INFO  13:13:35,362 - #10 [
INFO  13:13:35,362 - #22 size
INFO  13:13:35,362 - #11 ]
INFO  13:13:35,362 - #6 ;
INFO  13:13:35,362 - #22 val
INFO  13:13:35,362 - #17 .
INFO  13:13:35,362 - #22 neg
INFO  13:13:35,362 - #9 =
INFO  13:13:35,362 - #19 new
INFO  13:13:35,367 - #22 int
INFO  13:13:35,367 - #10 [
INFO  13:13:35,367 - #22 size
INFO  13:13:35,367 - #11 ]
INFO  13:13:35,367 - #6 ;
INFO  13:13:35,367 - #32 read
INFO  13:13:35,367 - #15 (
INFO  13:13:35,367 - #22 x
INFO  13:13:35,367 - #16 )
INFO  13:13:35,367 - #6 ;
INFO  13:13:35,367 - #24 if
INFO  13:13:35,368 - #15 (
INFO  13:13:35,368 - #22 x
INFO  13:13:35,368 - #36 >
INFO  13:13:35,368 - #20 5
INFO  13:13:35,369 - #16 )
INFO  13:13:35,370 - #3 {
INFO  13:13:35,370 - #26 goto
INFO  13:13:35,370 - #22 skip
INFO  13:13:35,370 - #6 ;
INFO  13:13:35,371 - #4 }
INFO  13:13:35,371 - #22 i
INFO  13:13:35,371 - #9 =
INFO  13:13:35,371 - #20 0
INFO  13:13:35,371 - #6 ;
INFO  13:13:35,372 - #27 do
INFO  13:13:35,372 - #3 {
INFO  13:13:35,372 - #22 val
INFO  13:13:35,372 - #17 .
INFO  13:13:35,372 - #22 putp
INFO  13:13:35,372 - #15 (
INFO  13:13:35,372 - #20 0
INFO  13:13:35,372 - #7 ,
INFO  13:13:35,372 - #22 i
INFO  13:13:35,372 - #16 )
INFO  13:13:35,372 - #6 ;
INFO  13:13:35,372 - #22 val
INFO  13:13:35,372 - #17 .
INFO  13:13:35,372 - #22 putn
INFO  13:13:35,372 - #15 (
INFO  13:13:35,373 - #20 0
INFO  13:13:35,373 - #7 ,
INFO  13:13:35,373 - #22 i
INFO  13:13:35,373 - #16 )
INFO  13:13:35,373 - #6 ;
INFO  13:13:35,373 - #22 i
INFO  13:13:35,373 - #47 ++
INFO  13:13:35,373 - #6 ;
INFO  13:13:35,374 - #4 }
INFO  13:13:35,374 - #28 while
INFO  13:13:35,374 - #15 (
INFO  13:13:35,374 - #22 i
INFO  13:13:35,374 - #38 <
INFO  13:13:35,374 - #22 size
INFO  13:13:35,375 - #16 )
INFO  13:13:35,375 - #6 ;
INFO  13:13:35,375 - #22 skip
INFO  13:13:35,375 - #8 :
INFO  13:13:35,375 - #22 f
INFO  13:13:35,375 - #15 (
INFO  13:13:35,375 - #22 c
INFO  13:13:35,375 - #7 ,
INFO  13:13:35,375 - #22 x
INFO  13:13:35,375 - #7 ,
INFO  13:13:35,375 - #22 i
INFO  13:13:35,375 - #16 )
INFO  13:13:35,375 - #6 ;
INFO  13:13:35,375 - #22 board
INFO  13:13:35,375 - #9 =
INFO  13:13:35,375 - #19 new
INFO  13:13:35,376 - #22 Board
INFO  13:13:35,376 - #6 ;
INFO  13:13:35,376 - #32 read
INFO  13:13:35,376 - #15 (
INFO  13:13:35,376 - #22 board
INFO  13:13:35,376 - #17 .
INFO  13:13:35,376 - #22 rows
INFO  13:13:35,376 - #16 )
INFO  13:13:35,376 - #6 ;
INFO  13:13:35,376 - #22 x
INFO  13:13:35,376 - #9 =
INFO  13:13:35,376 - #22 board
INFO  13:13:35,376 - #17 .
INFO  13:13:35,376 - #22 rows
INFO  13:13:35,376 - #6 ;
INFO  13:13:35,376 - #27 do
INFO  13:13:35,376 - #3 {
INFO  13:13:35,376 - #24 if
INFO  13:13:35,376 - #15 (
INFO  13:13:35,376 - #22 x
INFO  13:13:35,377 - #39 <=
INFO  13:13:35,377 - #20 0
INFO  13:13:35,378 - #16 )
INFO  13:13:35,378 - #29 break
INFO  13:13:35,378 - #6 ;
INFO  13:13:35,378 - #24 if
INFO  13:13:35,378 - #15 (
INFO  13:13:35,379 - #20 0
INFO  13:13:35,379 - #39 <=
INFO  13:13:35,379 - #22 x
INFO  13:13:35,379 - #40 &&
INFO  13:13:35,379 - #22 x
INFO  13:13:35,379 - #38 <
INFO  13:13:35,379 - #22 size
INFO  13:13:35,379 - #16 )
INFO  13:13:35,379 - #3 {
INFO  13:13:35,379 - #22 val
INFO  13:13:35,379 - #17 .
INFO  13:13:35,379 - #22 putp
INFO  13:13:35,379 - #15 (
INFO  13:13:35,379 - #22 val
INFO  13:13:35,379 - #17 .
INFO  13:13:35,379 - #22 getp
INFO  13:13:35,379 - #15 (
INFO  13:13:35,379 - #22 x
INFO  13:13:35,379 - #16 )
INFO  13:13:35,379 - #45 +
INFO  13:13:35,379 - #20 1
INFO  13:13:35,381 - #16 )
INFO  13:13:35,381 - #6 ;
INFO  13:13:35,381 - #4 }
INFO  13:13:35,381 - #25 else
INFO  13:13:35,381 - #24 if
INFO  13:13:35,381 - #15 (
INFO  13:13:35,381 - #46 -
INFO  13:13:35,381 - #22 size
INFO  13:13:35,381 - #38 <
INFO  13:13:35,381 - #22 x
INFO  13:13:35,381 - #40 &&
INFO  13:13:35,381 - #22 x
INFO  13:13:35,381 - #38 <
INFO  13:13:35,381 - #20 0
INFO  13:13:35,381 - #16 )
INFO  13:13:35,381 - #3 {
INFO  13:13:35,381 - #22 val
INFO  13:13:35,381 - #17 .
INFO  13:13:35,381 - #22 putn
INFO  13:13:35,382 - #15 (
INFO  13:13:35,382 - #22 val
INFO  13:13:35,382 - #17 .
INFO  13:13:35,382 - #22 getn
INFO  13:13:35,382 - #15 (
INFO  13:13:35,382 - #46 -
INFO  13:13:35,382 - #22 x
INFO  13:13:35,382 - #16 )
INFO  13:13:35,382 - #45 +
INFO  13:13:35,382 - #20 1
INFO  13:13:35,382 - #16 )
INFO  13:13:35,382 - #6 ;
INFO  13:13:35,382 - #4 }
INFO  13:13:35,382 - #32 read
INFO  13:13:35,382 - #15 (
INFO  13:13:35,382 - #22 x
INFO  13:13:35,382 - #16 )
INFO  13:13:35,382 - #6 ;
INFO  13:13:35,382 - #4 }
INFO  13:13:35,382 - #28 while
INFO  13:13:35,382 - #15 (
INFO  13:13:35,382 - #21 1
INFO  13:13:35,382 - #16 )
INFO  13:13:35,383 - #6 ;
INFO  13:13:35,383 - #4 }
INFO  13:13:35,383 - #4 }
