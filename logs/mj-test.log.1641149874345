INFO  19:55:59,313 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program_original.mj
INFO  19:55:59,394 - #2 program
INFO  19:55:59,394 - #22 p
INFO  19:55:59,394 - #5 const
INFO  19:55:59,395 - #22 int
INFO  19:55:59,395 - #22 size
INFO  19:55:59,396 - #9 =
INFO  19:55:59,396 - #20 10
INFO  19:55:59,396 - #7 ,
INFO  19:55:59,397 - #22 jaab
INFO  19:55:59,397 - #9 =
INFO  19:55:59,397 - #20 0
INFO  19:55:59,397 - #7 ,
INFO  19:55:59,398 - #22 xx
INFO  19:55:59,398 - #9 =
INFO  19:55:59,398 - #20 5
INFO  19:55:59,398 - #6 ;
INFO  19:55:59,398 - #5 const
INFO  19:55:59,399 - #22 char
INFO  19:55:59,399 - #22 variable
INFO  19:55:59,399 - #9 =
INFO  19:55:59,399 - #23 'p'
INFO  19:55:59,401 - #6 ;
INFO  19:55:59,401 - #5 const
INFO  19:55:59,401 - #22 bool
INFO  19:55:59,401 - #22 xyz
INFO  19:55:59,401 - #9 =
INFO  19:55:59,401 - #21 0
INFO  19:55:59,401 - #6 ;
INFO  19:55:59,402 - #22 int
INFO  19:55:59,402 - #22 xyza
INFO  19:55:59,402 - #7 ,
INFO  19:55:59,402 - #22 jana2
INFO  19:55:59,402 - #10 [
INFO  19:55:59,402 - #11 ]
INFO  19:55:59,402 - #6 ;
INFO  19:55:59,403 - #13 class
INFO  19:55:59,403 - #22 Base
INFO  19:55:59,403 - #3 {
INFO  19:55:59,404 - #4 }
INFO  19:55:59,405 - #13 class
INFO  19:55:59,406 - #22 Derived
INFO  19:55:59,406 - #14 extends
INFO  19:55:59,406 - #22 Base
INFO  19:55:59,406 - #3 {
INFO  19:55:59,406 - #4 }
INFO  19:55:59,407 - #13 class
INFO  19:55:59,407 - #22 B
INFO  19:55:59,407 - #3 {
INFO  19:55:59,407 - #22 int
INFO  19:55:59,407 - #22 baseField
INFO  19:55:59,407 - #10 [
INFO  19:55:59,407 - #11 ]
INFO  19:55:59,407 - #6 ;
INFO  19:55:59,408 - #22 int
INFO  19:55:59,408 - #22 xyza
INFO  19:55:59,408 - #6 ;
INFO  19:55:59,408 - #3 {
INFO  19:55:59,408 - #22 B
INFO  19:55:59,408 - #15 (
INFO  19:55:59,409 - #16 )
INFO  19:55:59,409 - #22 int
INFO  19:55:59,410 - #22 a
INFO  19:55:59,410 - #7 ,
INFO  19:55:59,410 - #22 j
INFO  19:55:59,410 - #6 ;
INFO  19:55:59,410 - #3 {
INFO  19:55:59,411 - #4 }
INFO  19:55:59,412 - #18 void
INFO  19:55:59,413 - #22 xyz
INFO  19:55:59,414 - #15 (
INFO  19:55:59,415 - #22 int
INFO  19:55:59,415 - #22 j
INFO  19:55:59,415 - #16 )
INFO  19:55:59,415 - #3 {
INFO  19:55:59,415 - #4 }
INFO  19:55:59,415 - #4 }
INFO  19:55:59,416 - #4 }
INFO  19:55:59,416 - #13 class
INFO  19:55:59,416 - #22 A
INFO  19:55:59,416 - #14 extends
INFO  19:55:59,416 - #22 B
INFO  19:55:59,416 - #3 {
INFO  19:55:59,416 - #3 {
INFO  19:55:59,416 - #22 A
INFO  19:55:59,416 - #15 (
INFO  19:55:59,417 - #16 )
INFO  19:55:59,417 - #3 {
INFO  19:55:59,417 - #4 }
INFO  19:55:59,417 - #18 void
INFO  19:55:59,417 - #22 xyz
INFO  19:55:59,417 - #15 (
INFO  19:55:59,417 - #22 Base
INFO  19:55:59,417 - #22 h
INFO  19:55:59,417 - #16 )
INFO  19:55:59,417 - #22 int
INFO  19:55:59,417 - #22 x
INFO  19:55:59,417 - #6 ;
INFO  19:55:59,417 - #3 {
INFO  19:55:59,417 - #22 Label
INFO  19:55:59,417 - #8 :
INFO  19:55:59,422 - #22 x
INFO  19:55:59,423 - #47 ++
INFO  19:55:59,424 - #6 ;
INFO  19:55:59,424 - #4 }
INFO  19:55:59,424 - #18 void
INFO  19:55:59,424 - #22 mmm
INFO  19:55:59,424 - #15 (
INFO  19:55:59,424 - #16 )
INFO  19:55:59,424 - #3 {
INFO  19:55:59,424 - #4 }
INFO  19:55:59,424 - #4 }
INFO  19:55:59,425 - #4 }
INFO  19:55:59,425 - #12 record
INFO  19:55:59,425 - #22 M
INFO  19:55:59,425 - #3 {
INFO  19:55:59,425 - #4 }
INFO  19:55:59,426 - #22 A
INFO  19:55:59,426 - #22 niz
INFO  19:55:59,426 - #10 [
INFO  19:55:59,426 - #11 ]
INFO  19:55:59,426 - #6 ;
INFO  19:55:59,426 - #22 int
INFO  19:55:59,427 - #22 pom
INFO  19:55:59,427 - #6 ;
INFO  19:55:59,427 - #22 Derived
INFO  19:55:59,427 - #22 ddd
INFO  19:55:59,427 - #6 ;
INFO  19:55:59,427 - #3 {
INFO  19:55:59,427 - #22 B
INFO  19:55:59,427 - #22 method
INFO  19:55:59,427 - #15 (
INFO  19:55:59,427 - #22 B
INFO  19:55:59,427 - #22 d
INFO  19:55:59,427 - #7 ,
INFO  19:55:59,427 - #22 A
INFO  19:55:59,427 - #22 a
INFO  19:55:59,427 - #16 )
INFO  19:55:59,427 - #22 int
INFO  19:55:59,428 - #22 h
INFO  19:55:59,428 - #6 ;
INFO  19:55:59,428 - #3 {
INFO  19:55:59,428 - #24 if
INFO  19:55:59,428 - #15 (
INFO  19:55:59,428 - #20 1
INFO  19:55:59,428 - #36 >
INFO  19:55:59,428 - #20 0
INFO  19:55:59,429 - #40 &&
INFO  19:55:59,429 - #19 new
INFO  19:55:59,430 - #22 A
INFO  19:55:59,430 - #34 ==
INFO  19:55:59,430 - #19 new
INFO  19:55:59,431 - #22 A
INFO  19:55:59,431 - #16 )
INFO  19:55:59,431 - #3 {
INFO  19:55:59,431 - #33 print
INFO  19:55:59,431 - #15 (
INFO  19:55:59,431 - #23 'j'
INFO  19:55:59,431 - #16 )
INFO  19:55:59,431 - #6 ;
INFO  19:55:59,431 - #31 return
INFO  19:55:59,431 - #19 new
INFO  19:55:59,431 - #22 A
INFO  19:55:59,432 - #6 ;
INFO  19:55:59,432 - #4 }
INFO  19:55:59,432 - #4 }
INFO  19:55:59,432 - #18 void
INFO  19:55:59,432 - #22 main
INFO  19:55:59,432 - #15 (
INFO  19:55:59,432 - #22 A
INFO  19:55:59,432 - #22 a
INFO  19:55:59,432 - #16 )
INFO  19:55:59,432 - #3 {
INFO  19:55:59,432 - #26 goto
INFO  19:55:59,432 - #22 LABELA
INFO  19:55:59,432 - #6 ;
INFO  19:55:59,432 - #22 LABELA
INFO  19:55:59,433 - #8 :
INFO  19:55:59,433 - #22 a
INFO  19:55:59,433 - #17 .
INFO  19:55:59,433 - #22 baseField
INFO  19:55:59,433 - #10 [
INFO  19:55:59,433 - #20 0
INFO  19:55:59,433 - #11 ]
INFO  19:55:59,433 - #47 ++
INFO  19:55:59,433 - #6 ;
INFO  19:55:59,433 - #22 niz
INFO  19:55:59,433 - #10 [
INFO  19:55:59,433 - #22 a
INFO  19:55:59,433 - #17 .
INFO  19:55:59,433 - #22 baseField
INFO  19:55:59,433 - #10 [
INFO  19:55:59,433 - #20 0
INFO  19:55:59,434 - #11 ]
INFO  19:55:59,434 - #11 ]
INFO  19:55:59,434 - #17 .
INFO  19:55:59,434 - #22 baseField
INFO  19:55:59,434 - #10 [
INFO  19:55:59,434 - #20 2
INFO  19:55:59,434 - #11 ]
INFO  19:55:59,434 - #47 ++
INFO  19:55:59,434 - #6 ;
INFO  19:55:59,434 - #27 do
INFO  19:55:59,434 - #3 {
INFO  19:55:59,435 - #32 read
INFO  19:55:59,435 - #15 (
INFO  19:55:59,435 - #22 a
INFO  19:55:59,435 - #17 .
INFO  19:55:59,435 - #22 baseField
INFO  19:55:59,435 - #10 [
INFO  19:55:59,435 - #20 0
INFO  19:55:59,435 - #11 ]
INFO  19:55:59,435 - #16 )
INFO  19:55:59,435 - #6 ;
INFO  19:55:59,435 - #22 a
INFO  19:55:59,435 - #17 .
INFO  19:55:59,436 - #22 xyz
INFO  19:55:59,436 - #15 (
INFO  19:55:59,436 - #22 ddd
INFO  19:55:59,436 - #16 )
INFO  19:55:59,436 - #6 ;
INFO  19:55:59,436 - #30 continue
INFO  19:55:59,436 - #6 ;
INFO  19:55:59,436 - #4 }
INFO  19:55:59,437 - #28 while
INFO  19:55:59,437 - #15 (
INFO  19:55:59,437 - #20 1
INFO  19:55:59,437 - #36 >
INFO  19:55:59,437 - #20 0
INFO  19:55:59,437 - #16 )
INFO  19:55:59,437 - #6 ;
INFO  19:55:59,437 - #22 a
INFO  19:55:59,437 - #17 .
INFO  19:55:59,437 - #22 mmm
INFO  19:55:59,437 - #15 (
INFO  19:55:59,437 - #16 )
INFO  19:55:59,438 - #6 ;
INFO  19:55:59,438 - #4 }
INFO  19:55:59,438 - #4 }
INFO  19:55:59,449 - Program(
  ProgramName(
   p
  ) [ProgramName]
  DeclListVar(
    DeclListVar(
      DeclListVar(
        DeclListRecord(
          DeclListClass(
            DeclListClass(
              DeclListClass(
                DeclListClass(
                  DeclListVar(
                    DeclListConst(
                      DeclListConst(
                        DeclListConst(
                          DeclListEmpty(
                          ) [DeclListEmpty]
                          DeclConst(
                            Type(
                             int
                            ) [Type]
                            ConstDeclMultiple(
                              ConstDeclMultiple(
                                ConstDeclSingle(
                                  ConstDeclElemCorrect(
                                   size
                                    ConstLitNum(
                                     10
                                    ) [ConstLitNum]
                                  ) [ConstDeclElemCorrect]
                                ) [ConstDeclSingle]
                                ConstDeclElemCorrect(
                                 jaab
                                  ConstLitNum(
                                   0
                                  ) [ConstLitNum]
                                ) [ConstDeclElemCorrect]
                              ) [ConstDeclMultiple]
                              ConstDeclElemCorrect(
                               xx
                                ConstLitNum(
                                 5
                                ) [ConstLitNum]
                              ) [ConstDeclElemCorrect]
                            ) [ConstDeclMultiple]
                          ) [DeclConst]
                        ) [DeclListConst]
                        DeclConst(
                          Type(
                           char
                          ) [Type]
                          ConstDeclSingle(
                            ConstDeclElemCorrect(
                             variable
                              ConstLitChar(
                               'p'
                              ) [ConstLitChar]
                            ) [ConstDeclElemCorrect]
                          ) [ConstDeclSingle]
                        ) [DeclConst]
                      ) [DeclListConst]
                      DeclConst(
                        Type(
                         bool
                        ) [Type]
                        ConstDeclSingle(
                          ConstDeclElemCorrect(
                           xyz
                            ConstLitBool(
                             0
                            ) [ConstLitBool]
                          ) [ConstDeclElemCorrect]
                        ) [ConstDeclSingle]
                      ) [DeclConst]
                    ) [DeclListConst]
                    VarDeclGlobalCorrect(
                      Type(
                       int
                      ) [Type]
                      VarDeclMultiple(
                        VarDeclSingle(
                          VarDeclElemSingle(
                           xyza
                          ) [VarDeclElemSingle]
                        ) [VarDeclSingle]
                        VarDeclElemArray(
                         jana2
                        ) [VarDeclElemArray]
                      ) [VarDeclMultiple]
                    ) [VarDeclGlobalCorrect]
                  ) [DeclListVar]
                  ClassDecl(
                    ClassName(
                     Base
                    ) [ClassName]
                    ExtendsDeclEmpty(
                    ) [ExtendsDeclEmpty]
                    ClassDeclsEmpty(
                    ) [ClassDeclsEmpty]
                  ) [ClassDecl]
                ) [DeclListClass]
                ClassDecl(
                  ClassName(
                   Derived
                  ) [ClassName]
                  ExtendsDeclType(
                    Type(
                     Base
                    ) [Type]
                  ) [ExtendsDeclType]
                  ClassDeclsEmpty(
                  ) [ClassDeclsEmpty]
                ) [ClassDecl]
              ) [DeclListClass]
              ClassDecl(
                ClassName(
                 B
                ) [ClassName]
                ExtendsDeclEmpty(
                ) [ExtendsDeclEmpty]
                ClassVarDecls(
                  VarDeclsCorrect(
                    Type(
                     int
                    ) [Type]
                    VarDeclSingleNoC(
                      VarDeclElemArrayNoC(
                       baseField
                      ) [VarDeclElemArrayNoC]
                    ) [VarDeclSingleNoC]
                  ) [VarDeclsCorrect]
                  ClassVarDecls(
                    VarDeclsCorrect(
                      Type(
                       int
                      ) [Type]
                      VarDeclSingleNoC(
                        VarDeclElemSingleNoC(
                         xyza
                        ) [VarDeclElemSingleNoC]
                      ) [VarDeclSingleNoC]
                    ) [VarDeclsCorrect]
                    ClassDeclsMethods(
                      InnerMethodBlockAll(
                        ConstructorDecl(
                          ConstructorName(
                           B
                          ) [ConstructorName]
                          InnerVarDecls(
                            InnerVarDeclsEmpty(
                            ) [InnerVarDeclsEmpty]
                            VarDecl(
                              Type(
                               int
                              ) [Type]
                              VarDeclMultipleNoC(
                                VarDeclSingleNoC(
                                  VarDeclElemSingleNoC(
                                   a
                                  ) [VarDeclElemSingleNoC]
                                ) [VarDeclSingleNoC]
                                VarDeclElemSingleNoC(
                                 j
                                ) [VarDeclElemSingleNoC]
                              ) [VarDeclMultipleNoC]
                            ) [VarDecl]
                          ) [InnerVarDecls]
                          StatementsEmpty(
                          ) [StatementsEmpty]
                        ) [ConstructorDecl]
                        MethodDecls(
                          MethodDeclPar(
                            MethodDeclChecker(
                              RetTypeVoid(
                              ) [RetTypeVoid]
                              MethodName(
                               xyz
                              ) [MethodName]
                            ) [MethodDeclChecker]
                            FormParsSingle(
                              Type(
                               int
                              ) [Type]
                             j
                            ) [FormParsSingle]
                            InnerVarDeclsEmpty(
                            ) [InnerVarDeclsEmpty]
                            StatementsEmpty(
                            ) [StatementsEmpty]
                          ) [MethodDeclPar]
                          MethodDeclsEmpty(
                          ) [MethodDeclsEmpty]
                        ) [MethodDecls]
                      ) [InnerMethodBlockAll]
                    ) [ClassDeclsMethods]
                  ) [ClassVarDecls]
                ) [ClassVarDecls]
              ) [ClassDecl]
            ) [DeclListClass]
            ClassDecl(
              ClassName(
               A
              ) [ClassName]
              ExtendsDeclType(
                Type(
                 B
                ) [Type]
              ) [ExtendsDeclType]
              ClassDeclsMethods(
                InnerMethodBlockAll(
                  ConstructorDecl(
                    ConstructorName(
                     A
                    ) [ConstructorName]
                    InnerVarDeclsEmpty(
                    ) [InnerVarDeclsEmpty]
                    StatementsEmpty(
                    ) [StatementsEmpty]
                  ) [ConstructorDecl]
                  MethodDecls(
                    MethodDeclPar(
                      MethodDeclChecker(
                        RetTypeVoid(
                        ) [RetTypeVoid]
                        MethodName(
                         xyz
                        ) [MethodName]
                      ) [MethodDeclChecker]
                      FormParsSingle(
                        Type(
                         Base
                        ) [Type]
                       h
                      ) [FormParsSingle]
                      InnerVarDecls(
                        InnerVarDeclsEmpty(
                        ) [InnerVarDeclsEmpty]
                        VarDecl(
                          Type(
                           int
                          ) [Type]
                          VarDeclSingleNoC(
                            VarDeclElemSingleNoC(
                             x
                            ) [VarDeclElemSingleNoC]
                          ) [VarDeclSingleNoC]
                        ) [VarDecl]
                      ) [InnerVarDecls]
                      StatementsList(
                        StatementsEmpty(
                        ) [StatementsEmpty]
                        StatementSingleLabel(
                          LabelDef(
                            Label(
                             Label
                            ) [Label]
                          ) [LabelDef]
                          StmtDesign(
                            DsgnOpInc(
                              CallName(
                                DesignatorFirst(
                                 x
                                ) [DesignatorFirst]
                              ) [CallName]
                            ) [DsgnOpInc]
                          ) [StmtDesign]
                        ) [StatementSingleLabel]
                      ) [StatementsList]
                    ) [MethodDeclPar]
                    MethodDecls(
                      MethodDeclNoPar(
                        MethodDeclChecker(
                          RetTypeVoid(
                          ) [RetTypeVoid]
                          MethodName(
                           mmm
                          ) [MethodName]
                        ) [MethodDeclChecker]
                        InnerVarDeclsEmpty(
                        ) [InnerVarDeclsEmpty]
                        StatementsEmpty(
                        ) [StatementsEmpty]
                      ) [MethodDeclNoPar]
                      MethodDeclsEmpty(
                      ) [MethodDeclsEmpty]
                    ) [MethodDecls]
                  ) [MethodDecls]
                ) [InnerMethodBlockAll]
              ) [ClassDeclsMethods]
            ) [ClassDecl]
          ) [DeclListClass]
          RecordDecl(
            RecordName(
             M
            ) [RecordName]
            InnerVarDeclsEmpty(
            ) [InnerVarDeclsEmpty]
          ) [RecordDecl]
        ) [DeclListRecord]
        VarDeclGlobalCorrect(
          Type(
           A
          ) [Type]
          VarDeclSingle(
            VarDeclElemArray(
             niz
            ) [VarDeclElemArray]
          ) [VarDeclSingle]
        ) [VarDeclGlobalCorrect]
      ) [DeclListVar]
      VarDeclGlobalCorrect(
        Type(
         int
        ) [Type]
        VarDeclSingle(
          VarDeclElemSingle(
           pom
          ) [VarDeclElemSingle]
        ) [VarDeclSingle]
      ) [VarDeclGlobalCorrect]
    ) [DeclListVar]
    VarDeclGlobalCorrect(
      Type(
       Derived
      ) [Type]
      VarDeclSingle(
        VarDeclElemSingle(
         ddd
        ) [VarDeclElemSingle]
      ) [VarDeclSingle]
    ) [VarDeclGlobalCorrect]
  ) [DeclListVar]
  MethodDecls(
    MethodDeclPar(
      MethodDeclChecker(
        RetTypeType(
          Type(
           B
          ) [Type]
        ) [RetTypeType]
        MethodName(
         method
        ) [MethodName]
      ) [MethodDeclChecker]
      FormParsMultiple(
        FormParsSingle(
          Type(
           B
          ) [Type]
         d
        ) [FormParsSingle]
        Type(
         A
        ) [Type]
       a
      ) [FormParsMultiple]
      InnerVarDecls(
        InnerVarDeclsEmpty(
        ) [InnerVarDeclsEmpty]
        VarDecl(
          Type(
           int
          ) [Type]
          VarDeclSingleNoC(
            VarDeclElemSingleNoC(
             h
            ) [VarDeclElemSingleNoC]
          ) [VarDeclSingleNoC]
        ) [VarDecl]
      ) [InnerVarDecls]
      StatementsList(
        StatementsEmpty(
        ) [StatementsEmpty]
        StatementSingle(
          StmtIf(
            CondSingle(
              CondTermMultiple(
                CondTermSingle(
                  CondFactMultiple(
                    ExprSingle(
                      TermSingle(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermSingle]
                    ) [ExprSingle]
                    RelopGrt(
                    ) [RelopGrt]
                    ExprSingle(
                      TermSingle(
                        FactorNumber(
                         0
                        ) [FactorNumber]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [CondFactMultiple]
                ) [CondTermSingle]
                CondFactMultipleEq(
                  ExprSingle(
                    TermSingle(
                      FactorObject(
                        Type(
                         A
                        ) [Type]
                      ) [FactorObject]
                    ) [TermSingle]
                  ) [ExprSingle]
                  RelopEqu(
                  ) [RelopEqu]
                  ExprSingle(
                    TermSingle(
                      FactorObject(
                        Type(
                         A
                        ) [Type]
                      ) [FactorObject]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [CondFactMultipleEq]
              ) [CondTermMultiple]
            ) [CondSingle]
            StatementMultiple(
              StatementsBlock(
                StatementsList(
                  StatementsList(
                    StatementsEmpty(
                    ) [StatementsEmpty]
                    StatementSingle(
                      StmtPrint(
                        ExprSingle(
                          TermSingle(
                            FactorChar(
                             'j'
                            ) [FactorChar]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [StmtPrint]
                    ) [StatementSingle]
                  ) [StatementsList]
                  StatementSingle(
                    StmtReturn(
                      ExprSingle(
                        TermSingle(
                          FactorObject(
                            Type(
                             A
                            ) [Type]
                          ) [FactorObject]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [StmtReturn]
                  ) [StatementSingle]
                ) [StatementsList]
              ) [StatementsBlock]
            ) [StatementMultiple]
          ) [StmtIf]
        ) [StatementSingle]
      ) [StatementsList]
    ) [MethodDeclPar]
    MethodDecls(
      MethodDeclPar(
        MethodDeclChecker(
          RetTypeVoid(
          ) [RetTypeVoid]
          MethodName(
           main
          ) [MethodName]
        ) [MethodDeclChecker]
        FormParsSingle(
          Type(
           A
          ) [Type]
         a
        ) [FormParsSingle]
        InnerVarDeclsEmpty(
        ) [InnerVarDeclsEmpty]
        StatementsList(
          StatementsList(
            StatementsList(
              StatementsList(
                StatementsList(
                  StatementsEmpty(
                  ) [StatementsEmpty]
                  StatementSingle(
                    StmtGoto(
                      Label(
                       LABELA
                      ) [Label]
                    ) [StmtGoto]
                  ) [StatementSingle]
                ) [StatementsList]
                StatementSingleLabel(
                  LabelDef(
                    Label(
                     LABELA
                    ) [Label]
                  ) [LabelDef]
                  StmtDesign(
                    DsgnOpInc(
                      CallName(
                        DesignatorAccessArray(
                          DesignatorAccessField(
                            DesignatorFirst(
                             a
                            ) [DesignatorFirst]
                           baseField
                          ) [DesignatorAccessField]
                          ExprSingle(
                            TermSingle(
                              FactorNumber(
                               0
                              ) [FactorNumber]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [DesignatorAccessArray]
                      ) [CallName]
                    ) [DsgnOpInc]
                  ) [StmtDesign]
                ) [StatementSingleLabel]
              ) [StatementsList]
              StatementSingle(
                StmtDesign(
                  DsgnOpInc(
                    CallName(
                      DesignatorAccessArray(
                        DesignatorAccessField(
                          DesignatorAccessArray(
                            DesignatorFirst(
                             niz
                            ) [DesignatorFirst]
                            ExprSingle(
                              TermSingle(
                                FactorDsgn(
                                  DesignatorAccessArray(
                                    DesignatorAccessField(
                                      DesignatorFirst(
                                       a
                                      ) [DesignatorFirst]
                                     baseField
                                    ) [DesignatorAccessField]
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumber(
                                         0
                                        ) [FactorNumber]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [DesignatorAccessArray]
                                ) [FactorDsgn]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [DesignatorAccessArray]
                         baseField
                        ) [DesignatorAccessField]
                        ExprSingle(
                          TermSingle(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [DesignatorAccessArray]
                    ) [CallName]
                  ) [DsgnOpInc]
                ) [StmtDesign]
              ) [StatementSingle]
            ) [StatementsList]
            StatementSingle(
              StmtDoWhile(
                DoStart(
                ) [DoStart]
                StatementMultiple(
                  StatementsBlock(
                    StatementsList(
                      StatementsList(
                        StatementsList(
                          StatementsEmpty(
                          ) [StatementsEmpty]
                          StatementSingle(
                            StmtRead(
                              DesignatorAccessArray(
                                DesignatorAccessField(
                                  DesignatorFirst(
                                   a
                                  ) [DesignatorFirst]
                                 baseField
                                ) [DesignatorAccessField]
                                ExprSingle(
                                  TermSingle(
                                    FactorNumber(
                                     0
                                    ) [FactorNumber]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [DesignatorAccessArray]
                            ) [StmtRead]
                          ) [StatementSingle]
                        ) [StatementsList]
                        StatementSingle(
                          StmtDesign(
                            DsgnOpCallPars(
                              CallName(
                                DesignatorAccessField(
                                  DesignatorFirst(
                                   a
                                  ) [DesignatorFirst]
                                 xyz
                                ) [DesignatorAccessField]
                              ) [CallName]
                              ActParsSingle(
                                ExprSingle(
                                  TermSingle(
                                    FactorDsgn(
                                      DesignatorFirst(
                                       ddd
                                      ) [DesignatorFirst]
                                    ) [FactorDsgn]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ActParsSingle]
                            ) [DsgnOpCallPars]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [StatementsList]
                      StatementSingle(
                        StmtContinue(
                        ) [StmtContinue]
                      ) [StatementSingle]
                    ) [StatementsList]
                  ) [StatementsBlock]
                ) [StatementMultiple]
                CondSingle(
                  CondTermSingle(
                    CondFactMultiple(
                      ExprSingle(
                        TermSingle(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermSingle]
                      ) [ExprSingle]
                      RelopGrt(
                      ) [RelopGrt]
                      ExprSingle(
                        TermSingle(
                          FactorNumber(
                           0
                          ) [FactorNumber]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [CondFactMultiple]
                  ) [CondTermSingle]
                ) [CondSingle]
              ) [StmtDoWhile]
            ) [StatementSingle]
          ) [StatementsList]
          StatementSingle(
            StmtDesign(
              DsgnOpCallEmpty(
                CallName(
                  DesignatorAccessField(
                    DesignatorFirst(
                     a
                    ) [DesignatorFirst]
                   mmm
                  ) [DesignatorAccessField]
                ) [CallName]
              ) [DsgnOpCallEmpty]
            ) [StmtDesign]
          ) [StatementSingle]
        ) [StatementsList]
      ) [MethodDeclPar]
      MethodDeclsEmpty(
      ) [MethodDeclsEmpty]
    ) [MethodDecls]
  ) [MethodDecls]
) [Program]
INFO  19:55:59,473 - Pronadjen simbol: p na liniji 1
INFO  19:55:59,473 - Pronadjen simbol: size na liniji 2
INFO  19:55:59,473 - Pronadjen simbol: jaab na liniji 2
INFO  19:55:59,473 - Pronadjen simbol: xx na liniji 2
INFO  19:55:59,473 - Pronadjen simbol: variable na liniji 3
INFO  19:55:59,473 - Pronadjen simbol: xyz na liniji 4
INFO  19:55:59,473 - Pronadjen simbol: xyza na liniji 5
INFO  19:55:59,474 - Pronadjen simbol: jana2 na liniji 5
INFO  19:55:59,474 - Pronadjen simbol: Base na liniji 6
INFO  19:55:59,474 - Pronadjen simbol: Derived na liniji 10
INFO  19:55:59,474 - Pronadjen simbol: B na liniji 13
INFO  19:55:59,474 - Pronadjen simbol: baseField na liniji 14
INFO  19:55:59,474 - Pronadjen simbol: xyza na liniji 15
INFO  19:55:59,474 - Pronadjen simbol: B na liniji 17
INFO  19:55:59,474 - Pronadjen simbol: a na liniji 17
INFO  19:55:59,475 - Pronadjen simbol: j na liniji 17
INFO  19:55:59,475 - Pronadjen simbol: xyz na liniji 20
INFO  19:55:59,475 - Pronadjen simbol: j na liniji 20
INFO  19:55:59,475 - Pronadjen simbol: A na liniji 25
INFO  19:55:59,475 - Pronadjen simbol: A na liniji 27
INFO  19:55:59,475 - Pronadjen simbol: xyz na liniji 30
ERROR 19:55:59,479 - Tip parametra h nije jednak tipu parametra base metode! na liniji 30
INFO  19:55:59,479 - Pronadjen simbol: x na liniji 30
INFO  19:55:59,479 - Pronadjen simbol: Label na liniji 31
INFO  19:55:59,479 - Upotreba simbola: x prihvacena na liniji 31
INFO  19:55:59,479 - Pronadjen simbol: mmm na liniji 33
INFO  19:55:59,479 - Pronadjen simbol: M na liniji 38
INFO  19:55:59,480 - Pronadjen simbol: niz na liniji 42
INFO  19:55:59,480 - Pronadjen simbol: pom na liniji 43
INFO  19:55:59,480 - Pronadjen simbol: ddd na liniji 44
INFO  19:55:59,480 - Pronadjen simbol: method na liniji 47
INFO  19:55:59,480 - Pronadjen simbol: d na liniji 47
INFO  19:55:59,480 - Pronadjen simbol: a na liniji 47
INFO  19:55:59,480 - Pronadjen simbol: h na liniji 47
INFO  19:55:59,480 - Pronadjen simbol: main na liniji 56
INFO  19:55:59,480 - Pronadjen simbol: a na liniji 56
INFO  19:55:59,480 - Pronadjen simbol: LABELA na liniji 58
INFO  19:55:59,480 - Upotreba simbola: LABELA prihvacena na liniji 57
INFO  19:55:59,480 - Upotreba simbola: a prihvacena na liniji 58
INFO  19:55:59,481 - Upotreba simbola: baseField prihvacena na liniji 58
INFO  19:55:59,481 - Upotreba simbola: niz prihvacena na liniji 59
INFO  19:55:59,481 - Upotreba simbola: a prihvacena na liniji 59
INFO  19:55:59,481 - Upotreba simbola: baseField prihvacena na liniji 59
INFO  19:55:59,482 - Upotreba simbola: baseField prihvacena na liniji 59
INFO  19:55:59,482 - Upotreba simbola: a prihvacena na liniji 61
INFO  19:55:59,482 - Upotreba simbola: baseField prihvacena na liniji 61
INFO  19:55:59,482 - Upotreba simbola: a prihvacena na liniji 62
INFO  19:55:59,482 - Upotreba simbola: xyz prihvacena na liniji 62
INFO  19:55:59,482 - Upotreba simbola: ddd prihvacena na liniji 62
ERROR 19:57:51,901 - Potpis metode xyz neispravan - kompatibilnost! na liniji 62
INFO  19:57:51,902 - Upotreba simbola: a prihvacena na liniji 66
INFO  19:57:51,902 - Upotreba simbola: mmm prihvacena na liniji 66
INFO  19:57:51,902 - Upotreba simbola: mmm prihvacena na liniji 66
