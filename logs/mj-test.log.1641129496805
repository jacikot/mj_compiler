INFO  14:17:42,938 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program_original.mj
INFO  14:17:43,017 - #2 program
INFO  14:17:43,018 - #22 p
INFO  14:17:43,018 - #5 const
INFO  14:17:43,019 - #22 int
INFO  14:17:43,020 - #22 size
INFO  14:17:43,020 - #9 =
INFO  14:17:43,021 - #20 10
INFO  14:17:43,021 - #7 ,
INFO  14:17:43,021 - #22 jaab
INFO  14:17:43,021 - #9 =
INFO  14:17:43,021 - #20 0
INFO  14:17:43,021 - #7 ,
INFO  14:17:43,021 - #22 xx
INFO  14:17:43,022 - #9 =
INFO  14:17:43,022 - #20 5
INFO  14:17:43,022 - #6 ;
INFO  14:17:43,022 - #5 const
INFO  14:17:43,022 - #22 char
INFO  14:17:43,022 - #22 variable
INFO  14:17:43,022 - #9 =
INFO  14:17:43,022 - #23 'p'
INFO  14:17:43,024 - #6 ;
INFO  14:17:43,025 - #5 const
INFO  14:17:43,025 - #22 bool
INFO  14:17:43,025 - #22 xyz
INFO  14:17:43,025 - #9 =
INFO  14:17:43,025 - #21 0
INFO  14:17:43,025 - #6 ;
INFO  14:17:43,025 - #22 int
INFO  14:17:43,025 - #22 xyza
INFO  14:17:43,025 - #7 ,
INFO  14:17:43,025 - #22 jana2
INFO  14:17:43,026 - #10 [
INFO  14:17:43,026 - #11 ]
INFO  14:17:43,026 - #6 ;
INFO  14:17:43,026 - #13 class
INFO  14:17:43,026 - #22 Base
INFO  14:17:43,026 - #3 {
INFO  14:17:43,027 - #4 }
INFO  14:17:43,028 - #13 class
INFO  14:17:43,029 - #22 Derived
INFO  14:17:43,029 - #14 extends
INFO  14:17:43,029 - #22 Base
INFO  14:17:43,029 - #3 {
INFO  14:17:43,029 - #4 }
INFO  14:17:43,029 - #13 class
INFO  14:17:43,029 - #22 B
INFO  14:17:43,029 - #3 {
INFO  14:17:43,029 - #22 int
INFO  14:17:43,030 - #22 baseField
INFO  14:17:43,030 - #6 ;
INFO  14:17:43,030 - #22 bool
INFO  14:17:43,030 - #22 xyza
INFO  14:17:43,030 - #6 ;
INFO  14:17:43,030 - #3 {
INFO  14:17:43,030 - #22 B
INFO  14:17:43,030 - #15 (
INFO  14:17:43,031 - #16 )
INFO  14:17:43,031 - #22 int
INFO  14:17:43,032 - #22 a
INFO  14:17:43,032 - #7 ,
INFO  14:17:43,032 - #22 j
INFO  14:17:43,032 - #6 ;
INFO  14:17:43,032 - #3 {
INFO  14:17:43,033 - #4 }
INFO  14:17:43,034 - #18 void
INFO  14:17:43,035 - #22 xyz
INFO  14:17:43,036 - #15 (
INFO  14:17:43,038 - #22 int
INFO  14:17:43,038 - #22 j
INFO  14:17:43,038 - #16 )
INFO  14:17:43,038 - #3 {
INFO  14:17:43,038 - #4 }
INFO  14:17:43,038 - #4 }
INFO  14:17:43,039 - #4 }
INFO  14:17:43,040 - #13 class
INFO  14:17:43,040 - #22 A
INFO  14:17:43,040 - #14 extends
INFO  14:17:43,040 - #22 B
INFO  14:17:43,040 - #3 {
INFO  14:17:43,040 - #3 {
INFO  14:17:43,040 - #22 A
INFO  14:17:43,040 - #15 (
INFO  14:17:43,040 - #16 )
INFO  14:17:43,041 - #3 {
INFO  14:17:43,041 - #4 }
INFO  14:17:43,041 - #18 void
INFO  14:17:43,041 - #22 xyz
INFO  14:17:43,041 - #15 (
INFO  14:17:43,041 - #22 int
INFO  14:17:43,041 - #22 h
INFO  14:17:43,041 - #16 )
INFO  14:17:43,041 - #22 int
INFO  14:17:43,041 - #22 x
INFO  14:17:43,041 - #6 ;
INFO  14:17:43,042 - #3 {
INFO  14:17:43,042 - #22 Label
INFO  14:17:43,042 - #8 :
INFO  14:17:43,043 - #22 x
INFO  14:17:43,044 - #47 ++
INFO  14:17:43,049 - #6 ;
INFO  14:17:43,050 - #4 }
INFO  14:17:43,050 - #4 }
INFO  14:17:43,051 - #4 }
INFO  14:17:43,051 - #12 record
INFO  14:17:43,051 - #22 M
INFO  14:17:43,051 - #3 {
INFO  14:17:43,052 - #4 }
INFO  14:17:43,052 - #3 {
INFO  14:17:43,053 - #22 int
INFO  14:17:43,053 - #22 method
INFO  14:17:43,053 - #15 (
INFO  14:17:43,053 - #22 B
INFO  14:17:43,053 - #22 d
INFO  14:17:43,053 - #7 ,
INFO  14:17:43,053 - #22 A
INFO  14:17:43,053 - #22 a
INFO  14:17:43,053 - #16 )
INFO  14:17:43,053 - #3 {
INFO  14:17:43,053 - #24 if
INFO  14:17:43,054 - #15 (
INFO  14:17:43,054 - #19 new
INFO  14:17:43,054 - #22 A
INFO  14:17:43,054 - #10 [
INFO  14:17:43,054 - #20 2
INFO  14:17:43,054 - #11 ]
INFO  14:17:43,054 - #38 <
INFO  14:17:43,054 - #19 new
INFO  14:17:43,056 - #22 A
INFO  14:17:43,056 - #10 [
INFO  14:17:43,056 - #20 2
INFO  14:17:43,056 - #11 ]
INFO  14:17:43,057 - #40 &&
INFO  14:17:43,057 - #20 2
INFO  14:17:43,057 - #38 <
INFO  14:17:43,057 - #20 3
INFO  14:17:43,057 - #16 )
INFO  14:17:43,057 - #3 {
INFO  14:17:43,057 - #4 }
INFO  14:17:43,057 - #4 }
INFO  14:17:43,057 - #18 void
INFO  14:17:43,057 - #22 main
INFO  14:17:43,057 - #15 (
INFO  14:17:43,057 - #16 )
INFO  14:17:43,057 - #3 {
INFO  14:17:43,058 - #26 goto
INFO  14:17:43,058 - #22 LABELA
INFO  14:17:43,058 - #6 ;
INFO  14:17:43,058 - #22 LABELA
INFO  14:17:43,058 - #8 :
INFO  14:17:43,058 - #24 if
INFO  14:17:43,058 - #15 (
INFO  14:17:43,058 - #22 a
INFO  14:17:43,058 - #34 ==
INFO  14:17:43,058 - #20 1
INFO  14:17:43,060 - #16 )
INFO  14:17:43,060 - #3 {
INFO  14:17:43,060 - #24 if
INFO  14:17:43,060 - #15 (
INFO  14:17:43,060 - #22 b
INFO  14:17:43,060 - #34 ==
INFO  14:17:43,060 - #20 0
INFO  14:17:43,060 - #16 )
INFO  14:17:43,060 - #22 a
INFO  14:17:43,061 - #9 =
INFO  14:17:43,061 - #20 0
INFO  14:17:43,062 - #6 ;
INFO  14:17:43,062 - #4 }
INFO  14:17:43,062 - #25 else
INFO  14:17:43,062 - #22 b
INFO  14:17:43,062 - #9 =
INFO  14:17:43,062 - #20 0
INFO  14:17:43,062 - #6 ;
INFO  14:17:43,062 - #4 }
INFO  14:17:43,063 - #4 }
INFO  14:17:43,078 - Program(
  ProgramName(
   p
  ) [ProgramName]
  DeclListRecord(
    DeclListClass(
      DeclListClass(
        DeclListClass(
          DeclListClass(
            DeclListVar(
              DeclListConst(
                DeclListConst(
                  DeclListConst(
                    DeclListEmpty(
                    ) [DeclListEmpty]
                    DeclConst(
                      Type(
                       int
                      ) [Type]
                      ConstDeclMultiple(
                        ConstDeclMultiple(
                          ConstDeclSingle(
                            ConstDeclElemCorrect(
                             size
                              ConstLitNum(
                               10
                              ) [ConstLitNum]
                            ) [ConstDeclElemCorrect]
                          ) [ConstDeclSingle]
                          ConstDeclElemCorrect(
                           jaab
                            ConstLitNum(
                             0
                            ) [ConstLitNum]
                          ) [ConstDeclElemCorrect]
                        ) [ConstDeclMultiple]
                        ConstDeclElemCorrect(
                         xx
                          ConstLitNum(
                           5
                          ) [ConstLitNum]
                        ) [ConstDeclElemCorrect]
                      ) [ConstDeclMultiple]
                    ) [DeclConst]
                  ) [DeclListConst]
                  DeclConst(
                    Type(
                     char
                    ) [Type]
                    ConstDeclSingle(
                      ConstDeclElemCorrect(
                       variable
                        ConstLitChar(
                         'p'
                        ) [ConstLitChar]
                      ) [ConstDeclElemCorrect]
                    ) [ConstDeclSingle]
                  ) [DeclConst]
                ) [DeclListConst]
                DeclConst(
                  Type(
                   bool
                  ) [Type]
                  ConstDeclSingle(
                    ConstDeclElemCorrect(
                     xyz
                      ConstLitBool(
                       0
                      ) [ConstLitBool]
                    ) [ConstDeclElemCorrect]
                  ) [ConstDeclSingle]
                ) [DeclConst]
              ) [DeclListConst]
              VarDeclGlobalCorrect(
                Type(
                 int
                ) [Type]
                VarDeclMultiple(
                  VarDeclSingle(
                    VarDeclElemSingle(
                     xyza
                    ) [VarDeclElemSingle]
                  ) [VarDeclSingle]
                  VarDeclElemArray(
                   jana2
                  ) [VarDeclElemArray]
                ) [VarDeclMultiple]
              ) [VarDeclGlobalCorrect]
            ) [DeclListVar]
            ClassDecl(
              ClassName(
               Base
              ) [ClassName]
              ExtendsDeclEmpty(
              ) [ExtendsDeclEmpty]
              ClassDeclsEmpty(
              ) [ClassDeclsEmpty]
            ) [ClassDecl]
          ) [DeclListClass]
          ClassDecl(
            ClassName(
             Derived
            ) [ClassName]
            ExtendsDeclType(
              Type(
               Base
              ) [Type]
            ) [ExtendsDeclType]
            ClassDeclsEmpty(
            ) [ClassDeclsEmpty]
          ) [ClassDecl]
        ) [DeclListClass]
        ClassDecl(
          ClassName(
           B
          ) [ClassName]
          ExtendsDeclEmpty(
          ) [ExtendsDeclEmpty]
          ClassVarDecls(
            VarDeclsCorrect(
              Type(
               int
              ) [Type]
              VarDeclSingleNoC(
                VarDeclElemSingleNoC(
                 baseField
                ) [VarDeclElemSingleNoC]
              ) [VarDeclSingleNoC]
            ) [VarDeclsCorrect]
            ClassVarDecls(
              VarDeclsCorrect(
                Type(
                 bool
                ) [Type]
                VarDeclSingleNoC(
                  VarDeclElemSingleNoC(
                   xyza
                  ) [VarDeclElemSingleNoC]
                ) [VarDeclSingleNoC]
              ) [VarDeclsCorrect]
              ClassDeclsMethods(
                InnerMethodBlockAll(
                  ConstructorDecl(
                    ConstructorName(
                     B
                    ) [ConstructorName]
                    InnerVarDecls(
                      InnerVarDeclsEmpty(
                      ) [InnerVarDeclsEmpty]
                      VarDecl(
                        Type(
                         int
                        ) [Type]
                        VarDeclMultipleNoC(
                          VarDeclSingleNoC(
                            VarDeclElemSingleNoC(
                             a
                            ) [VarDeclElemSingleNoC]
                          ) [VarDeclSingleNoC]
                          VarDeclElemSingleNoC(
                           j
                          ) [VarDeclElemSingleNoC]
                        ) [VarDeclMultipleNoC]
                      ) [VarDecl]
                    ) [InnerVarDecls]
                    StatementsEmpty(
                    ) [StatementsEmpty]
                  ) [ConstructorDecl]
                  MethodDecls(
                    MethodDeclPar(
                      MethodDeclChecker(
                        RetTypeVoid(
                        ) [RetTypeVoid]
                        MethodName(
                         xyz
                        ) [MethodName]
                      ) [MethodDeclChecker]
                      FormParsSingle(
                        Type(
                         int
                        ) [Type]
                       j
                      ) [FormParsSingle]
                      InnerVarDeclsEmpty(
                      ) [InnerVarDeclsEmpty]
                      StatementsEmpty(
                      ) [StatementsEmpty]
                    ) [MethodDeclPar]
                    MethodDeclsEmpty(
                    ) [MethodDeclsEmpty]
                  ) [MethodDecls]
                ) [InnerMethodBlockAll]
              ) [ClassDeclsMethods]
            ) [ClassVarDecls]
          ) [ClassVarDecls]
        ) [ClassDecl]
      ) [DeclListClass]
      ClassDecl(
        ClassName(
         A
        ) [ClassName]
        ExtendsDeclType(
          Type(
           B
          ) [Type]
        ) [ExtendsDeclType]
        ClassDeclsMethods(
          InnerMethodBlockAll(
            ConstructorDecl(
              ConstructorName(
               A
              ) [ConstructorName]
              InnerVarDeclsEmpty(
              ) [InnerVarDeclsEmpty]
              StatementsEmpty(
              ) [StatementsEmpty]
            ) [ConstructorDecl]
            MethodDecls(
              MethodDeclPar(
                MethodDeclChecker(
                  RetTypeVoid(
                  ) [RetTypeVoid]
                  MethodName(
                   xyz
                  ) [MethodName]
                ) [MethodDeclChecker]
                FormParsSingle(
                  Type(
                   int
                  ) [Type]
                 h
                ) [FormParsSingle]
                InnerVarDecls(
                  InnerVarDeclsEmpty(
                  ) [InnerVarDeclsEmpty]
                  VarDecl(
                    Type(
                     int
                    ) [Type]
                    VarDeclSingleNoC(
                      VarDeclElemSingleNoC(
                       x
                      ) [VarDeclElemSingleNoC]
                    ) [VarDeclSingleNoC]
                  ) [VarDecl]
                ) [InnerVarDecls]
                StatementsList(
                  StatementsEmpty(
                  ) [StatementsEmpty]
                  StatementSingleLabel(
                    LabelDef(
                      Label(
                       Label
                      ) [Label]
                    ) [LabelDef]
                    StmtDesign(
                      DesignStmt(
                        DesignatorFirst(
                         x
                        ) [DesignatorFirst]
                        DsgnOpInc(
                        ) [DsgnOpInc]
                      ) [DesignStmt]
                    ) [StmtDesign]
                  ) [StatementSingleLabel]
                ) [StatementsList]
              ) [MethodDeclPar]
              MethodDeclsEmpty(
              ) [MethodDeclsEmpty]
            ) [MethodDecls]
          ) [InnerMethodBlockAll]
        ) [ClassDeclsMethods]
      ) [ClassDecl]
    ) [DeclListClass]
    RecordDecl(
      RecordName(
       M
      ) [RecordName]
      InnerVarDeclsEmpty(
      ) [InnerVarDeclsEmpty]
    ) [RecordDecl]
  ) [DeclListRecord]
  MethodDecls(
    MethodDeclPar(
      MethodDeclChecker(
        RetTypeType(
          Type(
           int
          ) [Type]
        ) [RetTypeType]
        MethodName(
         method
        ) [MethodName]
      ) [MethodDeclChecker]
      FormParsMultiple(
        FormParsSingle(
          Type(
           B
          ) [Type]
         d
        ) [FormParsSingle]
        Type(
         A
        ) [Type]
       a
      ) [FormParsMultiple]
      InnerVarDeclsEmpty(
      ) [InnerVarDeclsEmpty]
      StatementsList(
        StatementsEmpty(
        ) [StatementsEmpty]
        StatementSingle(
          StmtIf(
            CondSingle(
              CondTermMultiple(
                CondTermSingle(
                  CondFactMultiple(
                    ExprSingle(
                      TermSingle(
                        FactorArray(
                          Type(
                           A
                          ) [Type]
                          ExprSingle(
                            TermSingle(
                              FactorNumber(
                               2
                              ) [FactorNumber]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [FactorArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                    RelopLes(
                    ) [RelopLes]
                    ExprSingle(
                      TermSingle(
                        FactorArray(
                          Type(
                           A
                          ) [Type]
                          ExprSingle(
                            TermSingle(
                              FactorNumber(
                               2
                              ) [FactorNumber]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [FactorArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [CondFactMultiple]
                ) [CondTermSingle]
                CondFactMultiple(
                  ExprSingle(
                    TermSingle(
                      FactorNumber(
                       2
                      ) [FactorNumber]
                    ) [TermSingle]
                  ) [ExprSingle]
                  RelopLes(
                  ) [RelopLes]
                  ExprSingle(
                    TermSingle(
                      FactorNumber(
                       3
                      ) [FactorNumber]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [CondFactMultiple]
              ) [CondTermMultiple]
            ) [CondSingle]
            StatementMultiple(
              StatementsBlock(
                StatementsEmpty(
                ) [StatementsEmpty]
              ) [StatementsBlock]
            ) [StatementMultiple]
          ) [StmtIf]
        ) [StatementSingle]
      ) [StatementsList]
    ) [MethodDeclPar]
    MethodDecls(
      MethodDeclNoPar(
        MethodDeclChecker(
          RetTypeVoid(
          ) [RetTypeVoid]
          MethodName(
           main
          ) [MethodName]
        ) [MethodDeclChecker]
        InnerVarDeclsEmpty(
        ) [InnerVarDeclsEmpty]
        StatementsList(
          StatementsList(
            StatementsEmpty(
            ) [StatementsEmpty]
            StatementSingle(
              StmtGoto(
                Label(
                 LABELA
                ) [Label]
              ) [StmtGoto]
            ) [StatementSingle]
          ) [StatementsList]
          StatementSingleLabel(
            LabelDef(
              Label(
               LABELA
              ) [Label]
            ) [LabelDef]
            StmtIfElse(
              CondSingle(
                CondTermSingle(
                  CondFactMultipleEq(
                    ExprSingle(
                      TermSingle(
                        FactorDsgn(
                          DesignatorFirst(
                           a
                          ) [DesignatorFirst]
                        ) [FactorDsgn]
                      ) [TermSingle]
                    ) [ExprSingle]
                    RelopEqu(
                    ) [RelopEqu]
                    ExprSingle(
                      TermSingle(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [CondFactMultipleEq]
                ) [CondTermSingle]
              ) [CondSingle]
              StatementMultiple(
                StatementsBlock(
                  StatementsList(
                    StatementsEmpty(
                    ) [StatementsEmpty]
                    StatementSingle(
                      StmtIf(
                        CondSingle(
                          CondTermSingle(
                            CondFactMultipleEq(
                              ExprSingle(
                                TermSingle(
                                  FactorDsgn(
                                    DesignatorFirst(
                                     b
                                    ) [DesignatorFirst]
                                  ) [FactorDsgn]
                                ) [TermSingle]
                              ) [ExprSingle]
                              RelopEqu(
                              ) [RelopEqu]
                              ExprSingle(
                                TermSingle(
                                  FactorNumber(
                                   0
                                  ) [FactorNumber]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [CondFactMultipleEq]
                          ) [CondTermSingle]
                        ) [CondSingle]
                        StatementSingle(
                          StmtDesign(
                            DesignStmt(
                              DesignatorFirst(
                               a
                              ) [DesignatorFirst]
                              DsgnOpAssign(
                                Assignop(
                                ) [Assignop]
                                ExprSingle(
                                  TermSingle(
                                    FactorNumber(
                                     0
                                    ) [FactorNumber]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [DsgnOpAssign]
                            ) [DesignStmt]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [StmtIf]
                    ) [StatementSingle]
                  ) [StatementsList]
                ) [StatementsBlock]
              ) [StatementMultiple]
              StatementSingle(
                StmtDesign(
                  DesignStmt(
                    DesignatorFirst(
                     b
                    ) [DesignatorFirst]
                    DsgnOpAssign(
                      Assignop(
                      ) [Assignop]
                      ExprSingle(
                        TermSingle(
                          FactorNumber(
                           0
                          ) [FactorNumber]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [DsgnOpAssign]
                  ) [DesignStmt]
                ) [StmtDesign]
              ) [StatementSingle]
            ) [StmtIfElse]
          ) [StatementSingleLabel]
        ) [StatementsList]
      ) [MethodDeclNoPar]
      MethodDeclsEmpty(
      ) [MethodDeclsEmpty]
    ) [MethodDecls]
  ) [MethodDecls]
) [Program]
INFO  14:17:43,086 - Pronadjen simbol: p na liniji 1
INFO  14:17:43,087 - Pronadjen simbol: size na liniji 2
INFO  14:17:43,087 - Pronadjen simbol: jaab na liniji 2
INFO  14:17:43,087 - Pronadjen simbol: xx na liniji 2
INFO  14:17:43,087 - Pronadjen simbol: variable na liniji 3
INFO  14:17:43,087 - Pronadjen simbol: xyz na liniji 4
INFO  14:17:43,087 - Pronadjen simbol: xyza na liniji 5
INFO  14:17:43,087 - Pronadjen simbol: jana2 na liniji 5
INFO  14:17:43,087 - Pronadjen simbol: Base na liniji 6
INFO  14:17:43,088 - Pronadjen simbol: Derived na liniji 10
INFO  14:17:43,088 - Pronadjen simbol: B na liniji 13
INFO  14:17:43,088 - Pronadjen simbol: baseField na liniji 14
INFO  14:17:43,089 - Pronadjen simbol: xyza na liniji 15
INFO  14:17:43,089 - Pronadjen simbol: B na liniji 17
INFO  14:17:43,089 - Pronadjen simbol: a na liniji 17
INFO  14:17:43,089 - Pronadjen simbol: j na liniji 17
INFO  14:17:43,089 - Pronadjen simbol: xyz na liniji 20
INFO  14:17:43,089 - Pronadjen simbol: j na liniji 20
INFO  14:17:43,089 - Pronadjen simbol: A na liniji 23
INFO  14:17:43,090 - Pronadjen simbol: A na liniji 25
INFO  14:17:43,090 - Pronadjen simbol: xyz na liniji 28
INFO  14:17:43,092 - Pronadjen simbol: h na liniji 28
INFO  14:17:43,092 - Pronadjen simbol: x na liniji 28
INFO  14:17:43,092 - Pronadjen simbol: Label na liniji 29
INFO  14:17:43,092 - Pronadjen simbol: M na liniji 34
INFO  14:17:43,092 - Pronadjen simbol: method na liniji 38
INFO  14:17:43,093 - Pronadjen simbol: d na liniji 38
INFO  14:17:43,093 - Pronadjen simbol: a na liniji 38
ERROR 14:17:43,093 - Relacioni operator nije moguce primeniti na korisnicke tipove i nizove! na liniji 40
INFO  14:17:43,093 - Pronadjen simbol: main na liniji 44
INFO  14:17:43,093 - Pronadjen simbol: LABELA na liniji 46
INFO  14:17:43,095 - Upotreba simbola: LABELA prihvacena na liniji 45
