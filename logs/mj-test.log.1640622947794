INFO  16:20:21,527 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program.mj
INFO  16:20:21,603 - #2 program
INFO  16:20:21,603 - #22 p
INFO  16:20:21,604 - #5 const
INFO  16:20:21,605 - #22 int
INFO  16:20:21,606 - #22 size
INFO  16:20:21,606 - #9 =
INFO  16:20:21,606 - #20 10
INFO  16:20:21,606 - #6 ;
INFO  16:20:21,607 - #13 class
INFO  16:20:21,607 - #22 Table
INFO  16:20:21,607 - #3 {
INFO  16:20:21,608 - #22 int
INFO  16:20:21,609 - #22 pos
INFO  16:20:21,609 - #10 [
INFO  16:20:21,610 - #11 ]
INFO  16:20:21,610 - #7 ,
INFO  16:20:21,611 - #22 neg
INFO  16:20:21,611 - #10 [
INFO  16:20:21,611 - #11 ]
INFO  16:20:21,612 - #3 {
ERROR 16:20:21,612 - 
Sintaksna greska na liniji 5
INFO  16:20:21,614 - #18 void
INFO  16:20:21,614 - #22 putp
INFO  16:20:21,614 - #15 (
INFO  16:20:21,614 - #22 int
INFO  16:20:21,615 - #22 a
INFO  16:20:21,615 - #7 ,
INFO  16:20:21,615 - #22 int
INFO  16:20:21,615 - #22 idx
INFO  16:20:21,615 - #16 )
INFO  16:20:21,615 - #3 {
INFO  16:20:21,615 - #22 this
INFO  16:20:21,615 - #17 .
INFO  16:20:21,615 - #22 pos
INFO  16:20:21,616 - #10 [
INFO  16:20:21,616 - #22 idx
INFO  16:20:21,616 - #11 ]
INFO  16:20:21,616 - #9 =
INFO  16:20:21,616 - #22 a
INFO  16:20:21,616 - #6 ;
INFO  16:20:21,616 - #4 }
INFO  16:20:21,617 - #18 void
INFO  16:20:21,617 - #22 putn
INFO  16:20:21,617 - #15 (
INFO  16:20:21,617 - #22 int
INFO  16:20:21,617 - #22 a
INFO  16:20:21,617 - #7 ,
INFO  16:20:21,617 - #22 int
INFO  16:20:21,617 - #22 idx
INFO  16:20:21,617 - #16 )
INFO  16:20:21,618 - #3 {
INFO  16:20:21,618 - #22 this
INFO  16:20:21,618 - #17 .
INFO  16:20:21,618 - #22 neg
INFO  16:20:21,618 - #10 [
INFO  16:20:21,618 - #22 idx
INFO  16:20:21,618 - #11 ]
INFO  16:20:21,618 - #9 =
INFO  16:20:21,618 - #22 a
INFO  16:20:21,618 - #6 ;
INFO  16:20:21,618 - #4 }
INFO  16:20:21,619 - #22 int
INFO  16:20:21,619 - #22 getp
INFO  16:20:21,620 - #15 (
ERROR 16:20:21,620 - 
Sintaksna greska na liniji 8
INFO  16:20:21,620 - #22 int
INFO  16:20:21,620 - #22 idx
INFO  16:20:21,620 - #16 )
INFO  16:20:21,620 - #3 {
INFO  16:20:21,620 - #31 return
INFO  16:20:21,620 - #22 pos
INFO  16:20:21,621 - #10 [
INFO  16:20:21,621 - #22 idx
INFO  16:20:21,621 - #11 ]
INFO  16:20:21,621 - #6 ;
INFO  16:20:21,621 - #4 }
INFO  16:20:21,621 - #22 int
INFO  16:20:21,621 - #22 getn
INFO  16:20:21,621 - #15 (
INFO  16:20:21,621 - #22 int
INFO  16:20:21,621 - #22 idx
INFO  16:20:21,622 - #16 )
INFO  16:20:21,622 - #3 {
INFO  16:20:21,622 - #31 return
INFO  16:20:21,622 - #22 neg
INFO  16:20:21,622 - #10 [
INFO  16:20:21,622 - #22 idx
INFO  16:20:21,622 - #11 ]
INFO  16:20:21,622 - #6 ;
INFO  16:20:21,623 - #4 }
INFO  16:20:21,623 - #4 }
INFO  16:20:21,623 - #4 }
INFO  16:20:21,623 - #12 record
INFO  16:20:21,623 - #22 Board
INFO  16:20:21,623 - #3 {
INFO  16:20:21,623 - #22 int
INFO  16:20:21,623 - #22 rows
INFO  16:20:21,623 - #7 ,
INFO  16:20:21,623 - #22 columns
INFO  16:20:21,623 - #6 ;
INFO  16:20:21,623 - #4 }
ERROR 16:20:21,627 - Izvrsen oporavak do , u liniji 8
ERROR 16:20:21,630 - 
Sintaksna greska na liniji 15
INFO  16:20:21,630 - #22 Table
INFO  16:20:21,630 - #22 val
INFO  16:20:21,630 - #6 ;
INFO  16:20:21,630 - #22 Board
INFO  16:20:21,630 - #22 board
INFO  16:20:21,630 - #6 ;
INFO  16:20:21,630 - #3 {
INFO  16:20:21,630 - #18 void
INFO  16:20:21,630 - #22 f
INFO  16:20:21,630 - #15 (
INFO  16:20:21,630 - #22 char
INFO  16:20:21,630 - #22 ch
INFO  16:20:21,630 - #7 ,
INFO  16:20:21,630 - #22 int
INFO  16:20:21,630 - #22 a
INFO  16:20:21,630 - #7 ,
INFO  16:20:21,631 - #22 int
INFO  16:20:21,631 - #22 arg
INFO  16:20:21,631 - #16 )
INFO  16:20:21,631 - #22 int
INFO  16:20:21,631 - #22 x
INFO  16:20:21,631 - #6 ;
INFO  16:20:21,631 - #3 {
INFO  16:20:21,631 - #22 x
INFO  16:20:21,631 - #9 =
INFO  16:20:21,632 - #22 arg
INFO  16:20:21,633 - #6 ;
INFO  16:20:21,633 - #4 }
INFO  16:20:21,633 - #18 void
INFO  16:20:21,633 - #22 main
INFO  16:20:21,633 - #15 (
INFO  16:20:21,633 - #16 )
INFO  16:20:21,633 - #22 int
INFO  16:20:21,633 - #22 x
INFO  16:20:21,633 - #7 ,
INFO  16:20:21,633 - #22 i
INFO  16:20:21,634 - #6 ;
INFO  16:20:21,634 - #22 char
ERROR 16:20:21,634 - Izvrsen oporavak do , u liniji 8
INFO  16:20:21,634 - #22 c
INFO  16:20:21,634 - #6 ;
INFO  16:20:21,634 - #3 {
INFO  16:20:21,634 - #22 val
INFO  16:20:21,634 - #9 =
ERROR 16:20:21,634 - 
Sintaksna greska na liniji 26
INFO  16:20:21,634 - #19 new
INFO  16:20:21,634 - #22 Table
INFO  16:20:21,634 - #6 ;
INFO  16:20:21,634 - #22 val
INFO  16:20:21,634 - #17 .
INFO  16:20:21,634 - #22 pos
INFO  16:20:21,634 - #9 =
INFO  16:20:21,634 - #19 new
INFO  16:20:21,634 - #22 int
INFO  16:20:21,634 - #10 [
INFO  16:20:21,634 - #22 size
INFO  16:20:21,635 - #11 ]
INFO  16:20:21,635 - #6 ;
INFO  16:20:21,635 - #22 val
INFO  16:20:21,635 - #17 .
INFO  16:20:21,635 - #22 neg
INFO  16:20:21,640 - #9 =
INFO  16:20:21,641 - #19 new
INFO  16:20:21,641 - #22 int
INFO  16:20:21,641 - #10 [
INFO  16:20:21,641 - #22 size
INFO  16:20:21,641 - #11 ]
INFO  16:20:21,641 - #6 ;
INFO  16:20:21,641 - #32 read
INFO  16:20:21,641 - #15 (
INFO  16:20:21,641 - #22 x
INFO  16:20:21,641 - #16 )
INFO  16:20:21,641 - #6 ;
INFO  16:20:21,641 - #24 if
INFO  16:20:21,641 - #15 (
INFO  16:20:21,641 - #22 x
INFO  16:20:21,641 - #36 >
INFO  16:20:21,641 - #20 5
INFO  16:20:21,641 - #16 )
INFO  16:20:21,641 - #3 {
INFO  16:20:21,641 - #26 goto
INFO  16:20:21,641 - #22 skip
INFO  16:20:21,641 - #6 ;
INFO  16:20:21,641 - #4 }
INFO  16:20:21,641 - #22 i
INFO  16:20:21,641 - #9 =
INFO  16:20:21,641 - #20 0
INFO  16:20:21,641 - #6 ;
INFO  16:20:21,641 - #27 do
INFO  16:20:21,641 - #3 {
INFO  16:20:21,642 - #22 val
INFO  16:20:21,642 - #17 .
INFO  16:20:21,642 - #22 putp
INFO  16:20:21,642 - #15 (
INFO  16:20:21,642 - #20 0
INFO  16:20:21,642 - #7 ,
INFO  16:20:21,642 - #22 i
INFO  16:20:21,642 - #16 )
INFO  16:20:21,642 - #6 ;
INFO  16:20:21,642 - #22 val
INFO  16:20:21,642 - #17 .
INFO  16:20:21,642 - #22 putn
INFO  16:20:21,642 - #15 (
INFO  16:20:21,643 - #20 0
INFO  16:20:21,643 - #7 ,
INFO  16:20:21,643 - #22 i
INFO  16:20:21,643 - #16 )
INFO  16:20:21,643 - #6 ;
INFO  16:20:21,643 - #22 i
INFO  16:20:21,643 - #47 ++
INFO  16:20:21,643 - #6 ;
INFO  16:20:21,643 - #4 }
INFO  16:20:21,643 - #28 while
INFO  16:20:21,643 - #15 (
INFO  16:20:21,643 - #22 i
INFO  16:20:21,643 - #38 <
INFO  16:20:21,643 - #22 size
INFO  16:20:21,643 - #16 )
INFO  16:20:21,644 - #6 ;
INFO  16:20:21,644 - #22 skip
INFO  16:20:21,644 - #8 :
INFO  16:20:21,644 - #22 f
INFO  16:20:21,644 - #15 (
INFO  16:20:21,644 - #22 c
INFO  16:20:21,644 - #7 ,
INFO  16:20:21,644 - #22 x
INFO  16:20:21,644 - #7 ,
INFO  16:20:21,644 - #22 i
INFO  16:20:21,644 - #16 )
INFO  16:20:21,644 - #6 ;
INFO  16:20:21,644 - #22 board
INFO  16:20:21,644 - #9 =
INFO  16:20:21,644 - #19 new
INFO  16:20:21,645 - #22 Board
INFO  16:20:21,645 - #6 ;
INFO  16:20:21,645 - #32 read
INFO  16:20:21,645 - #15 (
INFO  16:20:21,645 - #22 board
INFO  16:20:21,645 - #17 .
INFO  16:20:21,645 - #22 rows
INFO  16:20:21,645 - #16 )
INFO  16:20:21,645 - #6 ;
INFO  16:20:21,645 - #22 x
INFO  16:20:21,645 - #9 =
INFO  16:20:21,645 - #22 board
INFO  16:20:21,645 - #17 .
INFO  16:20:21,645 - #22 rows
INFO  16:20:21,645 - #6 ;
INFO  16:20:21,646 - #27 do
INFO  16:20:21,646 - #3 {
INFO  16:20:21,646 - #24 if
INFO  16:20:21,646 - #15 (
INFO  16:20:21,646 - #22 x
INFO  16:20:21,646 - #39 <=
INFO  16:20:21,646 - #20 0
INFO  16:20:21,646 - #16 )
INFO  16:20:21,646 - #29 break
INFO  16:20:21,646 - #6 ;
INFO  16:20:21,646 - #24 if
INFO  16:20:21,646 - #15 (
INFO  16:20:21,646 - #20 0
INFO  16:20:21,647 - #39 <=
INFO  16:20:21,647 - #22 x
INFO  16:20:21,647 - #40 &&
INFO  16:20:21,647 - #22 x
INFO  16:20:21,647 - #38 <
INFO  16:20:21,647 - #22 size
INFO  16:20:21,647 - #16 )
INFO  16:20:21,647 - #3 {
INFO  16:20:21,647 - #22 val
INFO  16:20:21,647 - #17 .
INFO  16:20:21,647 - #22 putp
INFO  16:20:21,647 - #15 (
INFO  16:20:21,647 - #22 val
INFO  16:20:21,647 - #17 .
INFO  16:20:21,647 - #22 getp
INFO  16:20:21,647 - #15 (
INFO  16:20:21,647 - #22 x
INFO  16:20:21,648 - #16 )
INFO  16:20:21,648 - #45 +
INFO  16:20:21,648 - #20 1
INFO  16:20:21,648 - #16 )
INFO  16:20:21,648 - #6 ;
INFO  16:20:21,648 - #4 }
INFO  16:20:21,648 - #25 else
INFO  16:20:21,648 - #24 if
INFO  16:20:21,648 - #15 (
INFO  16:20:21,648 - #46 -
INFO  16:20:21,648 - #22 size
INFO  16:20:21,648 - #38 <
INFO  16:20:21,648 - #22 x
INFO  16:20:21,649 - #40 &&
INFO  16:20:21,650 - #22 x
INFO  16:20:21,650 - #38 <
INFO  16:20:21,650 - #20 0
INFO  16:20:21,650 - #16 )
INFO  16:20:21,650 - #3 {
INFO  16:20:21,650 - #22 val
INFO  16:20:21,650 - #17 .
INFO  16:20:21,650 - #22 putn
INFO  16:20:21,650 - #15 (
INFO  16:20:21,650 - #22 val
INFO  16:20:21,650 - #17 .
INFO  16:20:21,650 - #22 getn
INFO  16:20:21,650 - #15 (
INFO  16:20:21,650 - #46 -
INFO  16:20:21,650 - #22 x
INFO  16:20:21,650 - #16 )
INFO  16:20:21,650 - #45 +
INFO  16:20:21,650 - #20 1
INFO  16:20:21,650 - #16 )
INFO  16:20:21,650 - #6 ;
INFO  16:20:21,650 - #4 }
INFO  16:20:21,650 - #32 read
INFO  16:20:21,650 - #15 (
INFO  16:20:21,650 - #22 x
INFO  16:20:21,650 - #16 )
INFO  16:20:21,650 - #6 ;
INFO  16:20:21,651 - #4 }
INFO  16:20:21,651 - #28 while
INFO  16:20:21,651 - #15 (
INFO  16:20:21,651 - #21 1
INFO  16:20:21,651 - #16 )
INFO  16:20:21,651 - #6 ;
INFO  16:20:21,651 - #4 }
INFO  16:20:21,651 - #4 }
ERROR 16:20:21,652 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 57
