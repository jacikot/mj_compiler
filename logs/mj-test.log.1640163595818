INFO  12:31:20,567 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program.mj
INFO  12:31:20,576 - #1 program
INFO  12:31:20,576 - #50 p
INFO  12:31:20,576 - #6 const
INFO  12:31:20,576 - #50 int
INFO  12:31:20,576 - #50 size
INFO  12:31:20,576 - #35 =
INFO  12:31:20,577 - #51 10
INFO  12:31:20,577 - #39 ;
INFO  12:31:20,577 - #3 class
INFO  12:31:20,577 - #50 Table
INFO  12:31:20,577 - #43 {
INFO  12:31:20,577 - #50 int
INFO  12:31:20,577 - #50 pos
INFO  12:31:20,577 - #45 [
INFO  12:31:20,577 - #46 ]
INFO  12:31:20,578 - #38 ,
INFO  12:31:20,578 - #50 neg
INFO  12:31:20,578 - #45 [
INFO  12:31:20,578 - #46 ]
INFO  12:31:20,578 - #39 ;
INFO  12:31:20,578 - #43 {
INFO  12:31:20,578 - #49 void
INFO  12:31:20,578 - #50 putp
INFO  12:31:20,579 - #41 (
INFO  12:31:20,579 - #50 int
INFO  12:31:20,579 - #50 a
INFO  12:31:20,579 - #38 ,
INFO  12:31:20,579 - #50 int
INFO  12:31:20,579 - #50 idx
INFO  12:31:20,579 - #42 )
INFO  12:31:20,579 - #43 {
INFO  12:31:20,579 - #16 this
INFO  12:31:20,579 - #40 .
INFO  12:31:20,579 - #50 pos
INFO  12:31:20,580 - #45 [
INFO  12:31:20,580 - #50 idx
INFO  12:31:20,580 - #46 ]
INFO  12:31:20,580 - #35 =
INFO  12:31:20,580 - #50 a
INFO  12:31:20,580 - #39 ;
INFO  12:31:20,580 - #44 }
INFO  12:31:20,580 - #49 void
INFO  12:31:20,580 - #50 putn
INFO  12:31:20,580 - #41 (
INFO  12:31:20,580 - #50 int
INFO  12:31:20,580 - #50 a
INFO  12:31:20,580 - #38 ,
INFO  12:31:20,581 - #50 int
INFO  12:31:20,581 - #50 idx
INFO  12:31:20,581 - #42 )
INFO  12:31:20,581 - #43 {
INFO  12:31:20,581 - #16 this
INFO  12:31:20,581 - #40 .
INFO  12:31:20,581 - #50 neg
INFO  12:31:20,581 - #45 [
INFO  12:31:20,581 - #50 idx
INFO  12:31:20,581 - #46 ]
INFO  12:31:20,582 - #35 =
INFO  12:31:20,582 - #50 a
INFO  12:31:20,582 - #39 ;
INFO  12:31:20,582 - #44 }
INFO  12:31:20,582 - #50 int
INFO  12:31:20,582 - #50 getp
INFO  12:31:20,582 - #41 (
INFO  12:31:20,582 - #50 int
INFO  12:31:20,582 - #50 idx
INFO  12:31:20,582 - #42 )
INFO  12:31:20,582 - #43 {
INFO  12:31:20,582 - #15 return
INFO  12:31:20,582 - #50 pos
INFO  12:31:20,582 - #45 [
INFO  12:31:20,582 - #50 idx
INFO  12:31:20,582 - #46 ]
INFO  12:31:20,582 - #39 ;
INFO  12:31:20,582 - #44 }
INFO  12:31:20,582 - #50 int
INFO  12:31:20,582 - #50 getn
INFO  12:31:20,582 - #41 (
INFO  12:31:20,582 - #50 int
INFO  12:31:20,583 - #50 idx
INFO  12:31:20,583 - #42 )
INFO  12:31:20,583 - #43 {
INFO  12:31:20,583 - #15 return
INFO  12:31:20,583 - #50 neg
INFO  12:31:20,583 - #45 [
INFO  12:31:20,583 - #50 idx
INFO  12:31:20,583 - #46 ]
INFO  12:31:20,583 - #39 ;
INFO  12:31:20,583 - #44 }
INFO  12:31:20,583 - #44 }
INFO  12:31:20,583 - #44 }
INFO  12:31:20,583 - #19 record
INFO  12:31:20,584 - #50 Board
INFO  12:31:20,584 - #43 {
INFO  12:31:20,584 - #50 int
INFO  12:31:20,584 - #50 rows
INFO  12:31:20,584 - #38 ,
INFO  12:31:20,584 - #50 columns
INFO  12:31:20,584 - #39 ;
INFO  12:31:20,584 - #44 }
INFO  12:31:20,584 - #50 Table
INFO  12:31:20,584 - #50 val
INFO  12:31:20,584 - #39 ;
INFO  12:31:20,584 - #50 Board
INFO  12:31:20,584 - #50 board
INFO  12:31:20,584 - #39 ;
INFO  12:31:20,584 - #43 {
INFO  12:31:20,584 - #49 void
INFO  12:31:20,585 - #50 f
INFO  12:31:20,585 - #41 (
INFO  12:31:20,585 - #50 char
INFO  12:31:20,585 - #50 ch
INFO  12:31:20,585 - #38 ,
INFO  12:31:20,585 - #50 int
INFO  12:31:20,585 - #50 a
INFO  12:31:20,585 - #38 ,
INFO  12:31:20,585 - #50 int
INFO  12:31:20,585 - #50 arg
INFO  12:31:20,585 - #42 )
INFO  12:31:20,585 - #50 int
INFO  12:31:20,585 - #50 x
INFO  12:31:20,585 - #39 ;
INFO  12:31:20,585 - #43 {
INFO  12:31:20,585 - #50 x
INFO  12:31:20,586 - #35 =
INFO  12:31:20,586 - #50 arg
INFO  12:31:20,586 - #39 ;
INFO  12:31:20,586 - #44 }
INFO  12:31:20,586 - #49 void
INFO  12:31:20,586 - #50 main
INFO  12:31:20,586 - #41 (
INFO  12:31:20,586 - #42 )
INFO  12:31:20,586 - #50 int
INFO  12:31:20,586 - #50 x
INFO  12:31:20,586 - #38 ,
INFO  12:31:20,586 - #50 i
INFO  12:31:20,586 - #39 ;
INFO  12:31:20,587 - #50 char
INFO  12:31:20,587 - #50 c
INFO  12:31:20,587 - #39 ;
INFO  12:31:20,587 - #43 {
INFO  12:31:20,587 - #50 val
INFO  12:31:20,587 - #35 =
INFO  12:31:20,587 - #10 new
INFO  12:31:20,587 - #50 Table
INFO  12:31:20,587 - #39 ;
INFO  12:31:20,587 - #50 val
INFO  12:31:20,587 - #40 .
INFO  12:31:20,587 - #50 pos
INFO  12:31:20,587 - #35 =
INFO  12:31:20,587 - #10 new
INFO  12:31:20,587 - #50 int
INFO  12:31:20,587 - #45 [
INFO  12:31:20,587 - #50 size
INFO  12:31:20,588 - #46 ]
INFO  12:31:20,588 - #39 ;
INFO  12:31:20,588 - #50 val
INFO  12:31:20,588 - #40 .
INFO  12:31:20,588 - #50 neg
INFO  12:31:20,588 - #35 =
INFO  12:31:20,588 - #10 new
INFO  12:31:20,588 - #50 int
INFO  12:31:20,588 - #45 [
INFO  12:31:20,588 - #50 size
INFO  12:31:20,593 - #46 ]
INFO  12:31:20,593 - #39 ;
INFO  12:31:20,593 - #12 read
INFO  12:31:20,593 - #41 (
INFO  12:31:20,593 - #50 x
INFO  12:31:20,593 - #42 )
INFO  12:31:20,593 - #39 ;
INFO  12:31:20,593 - #7 if
INFO  12:31:20,593 - #41 (
INFO  12:31:20,594 - #50 x
INFO  12:31:20,594 - #29 >
INFO  12:31:20,594 - #51 5
INFO  12:31:20,594 - #42 )
INFO  12:31:20,594 - #43 {
INFO  12:31:20,594 - #18 goto
INFO  12:31:20,594 - #50 skip
INFO  12:31:20,594 - #39 ;
INFO  12:31:20,594 - #44 }
INFO  12:31:20,594 - #50 i
INFO  12:31:20,594 - #35 =
INFO  12:31:20,594 - #51 0
INFO  12:31:20,594 - #39 ;
INFO  12:31:20,594 - #8 do
INFO  12:31:20,594 - #43 {
INFO  12:31:20,594 - #50 val
INFO  12:31:20,594 - #40 .
INFO  12:31:20,594 - #50 putp
INFO  12:31:20,594 - #41 (
INFO  12:31:20,594 - #51 0
INFO  12:31:20,594 - #38 ,
INFO  12:31:20,594 - #50 i
INFO  12:31:20,594 - #42 )
INFO  12:31:20,594 - #39 ;
INFO  12:31:20,594 - #50 val
INFO  12:31:20,594 - #40 .
INFO  12:31:20,595 - #50 putn
INFO  12:31:20,595 - #41 (
INFO  12:31:20,595 - #51 0
INFO  12:31:20,595 - #38 ,
INFO  12:31:20,595 - #50 i
INFO  12:31:20,595 - #42 )
INFO  12:31:20,595 - #39 ;
INFO  12:31:20,595 - #50 i
INFO  12:31:20,595 - #36 ++
INFO  12:31:20,595 - #39 ;
INFO  12:31:20,595 - #44 }
INFO  12:31:20,595 - #9 while
INFO  12:31:20,595 - #41 (
INFO  12:31:20,595 - #50 i
INFO  12:31:20,595 - #31 <
INFO  12:31:20,595 - #50 size
INFO  12:31:20,595 - #42 )
INFO  12:31:20,595 - #39 ;
INFO  12:31:20,595 - #50 skip
INFO  12:31:20,595 - #47 :
INFO  12:31:20,595 - #50 f
INFO  12:31:20,595 - #41 (
INFO  12:31:20,595 - #50 c
INFO  12:31:20,595 - #38 ,
INFO  12:31:20,595 - #50 x
INFO  12:31:20,595 - #38 ,
INFO  12:31:20,595 - #50 i
INFO  12:31:20,595 - #42 )
INFO  12:31:20,595 - #39 ;
INFO  12:31:20,596 - #50 board
INFO  12:31:20,596 - #35 =
INFO  12:31:20,596 - #10 new
INFO  12:31:20,596 - #50 Board
INFO  12:31:20,596 - #39 ;
INFO  12:31:20,596 - #12 read
INFO  12:31:20,596 - #41 (
INFO  12:31:20,596 - #50 board
INFO  12:31:20,596 - #40 .
INFO  12:31:20,596 - #50 rows
INFO  12:31:20,596 - #42 )
INFO  12:31:20,596 - #39 ;
INFO  12:31:20,596 - #50 x
INFO  12:31:20,596 - #35 =
INFO  12:31:20,596 - #50 board
INFO  12:31:20,596 - #40 .
INFO  12:31:20,596 - #50 rows
INFO  12:31:20,596 - #39 ;
INFO  12:31:20,596 - #8 do
INFO  12:31:20,596 - #43 {
INFO  12:31:20,596 - #7 if
INFO  12:31:20,596 - #41 (
INFO  12:31:20,596 - #50 x
INFO  12:31:20,597 - #32 <=
INFO  12:31:20,597 - #51 0
INFO  12:31:20,597 - #42 )
INFO  12:31:20,597 - #2 break
INFO  12:31:20,597 - #39 ;
INFO  12:31:20,597 - #7 if
INFO  12:31:20,597 - #41 (
INFO  12:31:20,598 - #51 0
INFO  12:31:20,598 - #32 <=
INFO  12:31:20,598 - #50 x
INFO  12:31:20,598 - #33 &&
INFO  12:31:20,598 - #50 x
INFO  12:31:20,598 - #31 <
INFO  12:31:20,598 - #50 size
INFO  12:31:20,598 - #42 )
INFO  12:31:20,598 - #43 {
INFO  12:31:20,598 - #50 val
INFO  12:31:20,598 - #40 .
INFO  12:31:20,598 - #50 putp
INFO  12:31:20,598 - #41 (
INFO  12:31:20,598 - #50 val
INFO  12:31:20,598 - #40 .
INFO  12:31:20,598 - #50 getp
INFO  12:31:20,598 - #41 (
INFO  12:31:20,598 - #50 x
INFO  12:31:20,598 - #42 )
INFO  12:31:20,599 - #22 +
INFO  12:31:20,599 - #51 1
INFO  12:31:20,599 - #42 )
INFO  12:31:20,599 - #39 ;
INFO  12:31:20,599 - #44 }
INFO  12:31:20,599 - #5 else
INFO  12:31:20,599 - #7 if
INFO  12:31:20,599 - #41 (
INFO  12:31:20,599 - #23 -
INFO  12:31:20,599 - #50 size
INFO  12:31:20,599 - #31 <
INFO  12:31:20,599 - #50 x
INFO  12:31:20,599 - #33 &&
INFO  12:31:20,599 - #50 x
INFO  12:31:20,599 - #31 <
INFO  12:31:20,599 - #51 0
INFO  12:31:20,599 - #42 )
INFO  12:31:20,600 - #43 {
INFO  12:31:20,600 - #50 val
INFO  12:31:20,600 - #40 .
INFO  12:31:20,600 - #50 putn
INFO  12:31:20,600 - #41 (
INFO  12:31:20,600 - #50 val
INFO  12:31:20,600 - #40 .
INFO  12:31:20,600 - #50 getn
INFO  12:31:20,600 - #41 (
INFO  12:31:20,600 - #23 -
INFO  12:31:20,600 - #50 x
INFO  12:31:20,600 - #42 )
INFO  12:31:20,600 - #22 +
INFO  12:31:20,600 - #51 1
INFO  12:31:20,600 - #42 )
INFO  12:31:20,600 - #39 ;
INFO  12:31:20,600 - #44 }
INFO  12:31:20,600 - #12 read
INFO  12:31:20,600 - #41 (
INFO  12:31:20,600 - #50 x
INFO  12:31:20,600 - #42 )
INFO  12:31:20,600 - #39 ;
INFO  12:31:20,600 - #44 }
INFO  12:31:20,600 - #9 while
INFO  12:31:20,600 - #41 (
INFO  12:31:20,601 - #53 true
INFO  12:31:20,601 - #42 )
INFO  12:31:20,601 - #39 ;
INFO  12:31:20,601 - #44 }
INFO  12:31:20,601 - #44 }
