INFO  16:17:26,295 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program.mj
INFO  16:17:26,372 - #2 program
INFO  16:17:26,372 - #22 p
INFO  16:17:26,372 - #5 const
INFO  16:17:26,374 - #22 int
INFO  16:17:26,374 - #22 size
INFO  16:17:26,375 - #9 =
INFO  16:17:26,375 - #20 10
INFO  16:17:26,375 - #6 ;
INFO  16:17:26,375 - #13 class
INFO  16:17:26,375 - #22 Table
INFO  16:17:26,375 - #3 {
INFO  16:17:26,376 - #22 int
INFO  16:17:26,377 - #22 pos
INFO  16:17:26,377 - #10 [
INFO  16:17:26,377 - #11 ]
INFO  16:17:26,377 - #7 ,
INFO  16:17:26,378 - #22 neg
INFO  16:17:26,378 - #10 [
INFO  16:17:26,379 - #11 ]
INFO  16:17:26,379 - #3 {
ERROR 16:17:26,379 - 
Sintaksna greska na liniji 5
INFO  16:17:26,381 - #18 void
INFO  16:17:26,381 - #22 putp
INFO  16:17:26,381 - #15 (
INFO  16:17:26,381 - #22 int
INFO  16:17:26,382 - #22 a
INFO  16:17:26,382 - #7 ,
INFO  16:17:26,382 - #22 int
INFO  16:17:26,382 - #22 idx
INFO  16:17:26,382 - #16 )
INFO  16:17:26,382 - #3 {
INFO  16:17:26,382 - #22 this
INFO  16:17:26,382 - #17 .
INFO  16:17:26,382 - #22 pos
INFO  16:17:26,382 - #10 [
INFO  16:17:26,382 - #22 idx
INFO  16:17:26,382 - #11 ]
INFO  16:17:26,383 - #9 =
INFO  16:17:26,383 - #22 a
INFO  16:17:26,383 - #6 ;
INFO  16:17:26,383 - #4 }
INFO  16:17:26,383 - #18 void
INFO  16:17:26,383 - #22 putn
INFO  16:17:26,383 - #15 (
INFO  16:17:26,383 - #22 int
INFO  16:17:26,383 - #22 a
INFO  16:17:26,383 - #7 ,
INFO  16:17:26,383 - #22 int
INFO  16:17:26,383 - #22 idx
INFO  16:17:26,384 - #16 )
INFO  16:17:26,384 - #3 {
INFO  16:17:26,384 - #22 this
INFO  16:17:26,384 - #17 .
INFO  16:17:26,384 - #22 neg
INFO  16:17:26,384 - #10 [
INFO  16:17:26,384 - #22 idx
INFO  16:17:26,384 - #11 ]
INFO  16:17:26,384 - #9 =
INFO  16:17:26,384 - #22 a
INFO  16:17:26,384 - #6 ;
INFO  16:17:26,384 - #4 }
INFO  16:17:26,384 - #22 int
INFO  16:17:26,384 - #22 getp
INFO  16:17:26,385 - #15 (
ERROR 16:17:26,385 - 
Sintaksna greska na liniji 8
INFO  16:17:26,385 - #22 int
INFO  16:17:26,385 - #22 idx
INFO  16:17:26,385 - #16 )
INFO  16:17:26,385 - #3 {
INFO  16:17:26,385 - #31 return
INFO  16:17:26,385 - #22 pos
INFO  16:17:26,385 - #10 [
INFO  16:17:26,385 - #22 idx
INFO  16:17:26,385 - #11 ]
INFO  16:17:26,385 - #6 ;
INFO  16:17:26,385 - #4 }
INFO  16:17:26,385 - #22 int
INFO  16:17:26,385 - #22 getn
INFO  16:17:26,385 - #15 (
INFO  16:17:26,386 - #22 int
INFO  16:17:26,386 - #22 idx
INFO  16:17:26,386 - #16 )
INFO  16:17:26,386 - #3 {
INFO  16:17:26,386 - #31 return
INFO  16:17:26,386 - #22 neg
INFO  16:17:26,386 - #10 [
INFO  16:17:26,386 - #22 idx
INFO  16:17:26,386 - #11 ]
INFO  16:17:26,386 - #6 ;
INFO  16:17:26,386 - #4 }
INFO  16:17:26,386 - #4 }
INFO  16:17:26,386 - #4 }
INFO  16:17:26,386 - #12 record
INFO  16:17:26,386 - #22 Board
INFO  16:17:26,386 - #3 {
INFO  16:17:26,387 - #22 int
INFO  16:17:26,387 - #22 rows
INFO  16:17:26,387 - #7 ,
INFO  16:17:26,387 - #22 columns
INFO  16:17:26,387 - #6 ;
INFO  16:17:26,387 - #4 }
ERROR 16:17:26,391 - Izvrsen oporavak do , u liniji 8
ERROR 16:17:26,392 - 
Sintaksna greska na liniji 15
INFO  16:17:26,393 - #22 Table
INFO  16:17:26,393 - #22 val
INFO  16:17:26,393 - #6 ;
INFO  16:17:26,393 - #22 Board
INFO  16:17:26,393 - #22 board
INFO  16:17:26,393 - #6 ;
INFO  16:17:26,393 - #3 {
INFO  16:17:26,393 - #18 void
INFO  16:17:26,393 - #22 f
INFO  16:17:26,393 - #15 (
INFO  16:17:26,393 - #22 char
INFO  16:17:26,393 - #22 ch
INFO  16:17:26,393 - #7 ,
INFO  16:17:26,393 - #22 int
INFO  16:17:26,393 - #22 a
INFO  16:17:26,394 - #7 ,
INFO  16:17:26,394 - #22 int
INFO  16:17:26,394 - #22 arg
INFO  16:17:26,394 - #16 )
INFO  16:17:26,394 - #22 int
INFO  16:17:26,394 - #22 x
INFO  16:17:26,394 - #6 ;
INFO  16:17:26,394 - #3 {
INFO  16:17:26,394 - #22 x
INFO  16:17:26,394 - #9 =
INFO  16:17:26,394 - #22 arg
INFO  16:17:26,394 - #6 ;
INFO  16:17:26,395 - #4 }
INFO  16:17:26,395 - #18 void
INFO  16:17:26,395 - #22 main
INFO  16:17:26,395 - #15 (
INFO  16:17:26,395 - #16 )
INFO  16:17:26,395 - #22 int
INFO  16:17:26,395 - #22 x
INFO  16:17:26,395 - #7 ,
INFO  16:17:26,395 - #22 i
INFO  16:17:26,395 - #6 ;
INFO  16:17:26,395 - #22 char
ERROR 16:17:26,395 - Izvrsen oporavak do , u liniji 8
INFO  16:17:26,395 - #22 c
INFO  16:17:26,395 - #6 ;
INFO  16:17:26,395 - #3 {
INFO  16:17:26,396 - #22 val
INFO  16:17:26,396 - #9 =
ERROR 16:17:26,396 - 
Sintaksna greska na liniji 26
INFO  16:17:26,396 - #19 new
INFO  16:17:26,396 - #22 Table
INFO  16:17:26,396 - #6 ;
INFO  16:17:26,396 - #22 val
INFO  16:17:26,396 - #17 .
INFO  16:17:26,396 - #22 pos
INFO  16:17:26,396 - #9 =
INFO  16:17:26,396 - #19 new
INFO  16:17:26,396 - #22 int
INFO  16:17:26,396 - #10 [
INFO  16:17:26,396 - #22 size
INFO  16:17:26,396 - #11 ]
INFO  16:17:26,396 - #6 ;
INFO  16:17:26,396 - #22 val
INFO  16:17:26,396 - #17 .
INFO  16:17:26,396 - #22 neg
INFO  16:17:26,401 - #9 =
INFO  16:17:26,401 - #19 new
INFO  16:17:26,401 - #22 int
INFO  16:17:26,401 - #10 [
INFO  16:17:26,401 - #22 size
INFO  16:17:26,401 - #11 ]
INFO  16:17:26,401 - #6 ;
INFO  16:17:26,401 - #32 read
INFO  16:17:26,401 - #15 (
INFO  16:17:26,402 - #22 x
INFO  16:17:26,402 - #16 )
INFO  16:17:26,402 - #6 ;
INFO  16:17:26,402 - #24 if
INFO  16:17:26,402 - #15 (
INFO  16:17:26,402 - #22 x
INFO  16:17:26,402 - #36 >
INFO  16:17:26,402 - #20 5
INFO  16:17:26,402 - #16 )
INFO  16:17:26,402 - #3 {
INFO  16:17:26,402 - #26 goto
INFO  16:17:26,402 - #22 skip
INFO  16:17:26,402 - #6 ;
INFO  16:17:26,402 - #4 }
INFO  16:17:26,402 - #22 i
INFO  16:17:26,402 - #9 =
INFO  16:17:26,403 - #20 0
INFO  16:17:26,403 - #6 ;
INFO  16:17:26,403 - #27 do
INFO  16:17:26,403 - #3 {
INFO  16:17:26,403 - #22 val
INFO  16:17:26,403 - #17 .
INFO  16:17:26,403 - #22 putp
INFO  16:17:26,403 - #15 (
INFO  16:17:26,403 - #20 0
INFO  16:17:26,403 - #7 ,
INFO  16:17:26,403 - #22 i
INFO  16:17:26,403 - #16 )
INFO  16:17:26,403 - #6 ;
INFO  16:17:26,403 - #22 val
INFO  16:17:26,403 - #17 .
INFO  16:17:26,404 - #22 putn
INFO  16:17:26,404 - #15 (
INFO  16:17:26,404 - #20 0
INFO  16:17:26,404 - #7 ,
INFO  16:17:26,404 - #22 i
INFO  16:17:26,404 - #16 )
INFO  16:17:26,404 - #6 ;
INFO  16:17:26,404 - #22 i
INFO  16:17:26,404 - #47 ++
INFO  16:17:26,404 - #6 ;
INFO  16:17:26,404 - #4 }
INFO  16:17:26,404 - #28 while
INFO  16:17:26,404 - #15 (
INFO  16:17:26,404 - #22 i
INFO  16:17:26,404 - #38 <
INFO  16:17:26,404 - #22 size
INFO  16:17:26,405 - #16 )
INFO  16:17:26,405 - #6 ;
INFO  16:17:26,405 - #22 skip
INFO  16:17:26,405 - #8 :
INFO  16:17:26,405 - #22 f
INFO  16:17:26,405 - #15 (
INFO  16:17:26,405 - #22 c
INFO  16:17:26,405 - #7 ,
INFO  16:17:26,405 - #22 x
INFO  16:17:26,405 - #7 ,
INFO  16:17:26,405 - #22 i
INFO  16:17:26,405 - #16 )
INFO  16:17:26,405 - #6 ;
INFO  16:17:26,405 - #22 board
INFO  16:17:26,405 - #9 =
INFO  16:17:26,406 - #19 new
INFO  16:17:26,406 - #22 Board
INFO  16:17:26,406 - #6 ;
INFO  16:17:26,406 - #32 read
INFO  16:17:26,406 - #15 (
INFO  16:17:26,406 - #22 board
INFO  16:17:26,406 - #17 .
INFO  16:17:26,406 - #22 rows
INFO  16:17:26,406 - #16 )
INFO  16:17:26,406 - #6 ;
INFO  16:17:26,406 - #22 x
INFO  16:17:26,406 - #9 =
INFO  16:17:26,406 - #22 board
INFO  16:17:26,406 - #17 .
INFO  16:17:26,406 - #22 rows
INFO  16:17:26,406 - #6 ;
INFO  16:17:26,406 - #27 do
INFO  16:17:26,406 - #3 {
INFO  16:17:26,406 - #24 if
INFO  16:17:26,407 - #15 (
INFO  16:17:26,407 - #22 x
INFO  16:17:26,407 - #39 <=
INFO  16:17:26,407 - #20 0
INFO  16:17:26,407 - #16 )
INFO  16:17:26,407 - #29 break
INFO  16:17:26,407 - #6 ;
INFO  16:17:26,407 - #24 if
INFO  16:17:26,407 - #15 (
INFO  16:17:26,407 - #20 0
INFO  16:17:26,407 - #39 <=
INFO  16:17:26,407 - #22 x
INFO  16:17:26,407 - #40 &&
INFO  16:17:26,408 - #22 x
INFO  16:17:26,408 - #38 <
INFO  16:17:26,408 - #22 size
INFO  16:17:26,408 - #16 )
INFO  16:17:26,408 - #3 {
INFO  16:17:26,408 - #22 val
INFO  16:17:26,408 - #17 .
INFO  16:17:26,408 - #22 putp
INFO  16:17:26,408 - #15 (
INFO  16:17:26,408 - #22 val
INFO  16:17:26,408 - #17 .
INFO  16:17:26,408 - #22 getp
INFO  16:17:26,408 - #15 (
INFO  16:17:26,408 - #22 x
INFO  16:17:26,409 - #16 )
INFO  16:17:26,409 - #45 +
INFO  16:17:26,409 - #20 1
INFO  16:17:26,409 - #16 )
INFO  16:17:26,409 - #6 ;
INFO  16:17:26,409 - #4 }
INFO  16:17:26,409 - #25 else
INFO  16:17:26,409 - #24 if
INFO  16:17:26,409 - #15 (
INFO  16:17:26,409 - #46 -
INFO  16:17:26,409 - #22 size
INFO  16:17:26,409 - #38 <
INFO  16:17:26,409 - #22 x
INFO  16:17:26,409 - #40 &&
INFO  16:17:26,409 - #22 x
INFO  16:17:26,410 - #38 <
INFO  16:17:26,410 - #20 0
INFO  16:17:26,410 - #16 )
INFO  16:17:26,410 - #3 {
INFO  16:17:26,410 - #22 val
INFO  16:17:26,410 - #17 .
INFO  16:17:26,410 - #22 putn
INFO  16:17:26,410 - #15 (
INFO  16:17:26,410 - #22 val
INFO  16:17:26,410 - #17 .
INFO  16:17:26,410 - #22 getn
INFO  16:17:26,410 - #15 (
INFO  16:17:26,410 - #46 -
INFO  16:17:26,410 - #22 x
INFO  16:17:26,410 - #16 )
INFO  16:17:26,410 - #45 +
INFO  16:17:26,410 - #20 1
INFO  16:17:26,410 - #16 )
INFO  16:17:26,410 - #6 ;
INFO  16:17:26,411 - #4 }
INFO  16:17:26,411 - #32 read
INFO  16:17:26,411 - #15 (
INFO  16:17:26,411 - #22 x
INFO  16:17:26,411 - #16 )
INFO  16:17:26,411 - #6 ;
INFO  16:17:26,411 - #4 }
INFO  16:17:26,411 - #28 while
INFO  16:17:26,411 - #15 (
INFO  16:17:26,411 - #21 1
INFO  16:17:26,411 - #16 )
INFO  16:17:26,411 - #6 ;
INFO  16:17:26,411 - #4 }
INFO  16:17:26,411 - #4 }
ERROR 16:17:26,411 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 57
