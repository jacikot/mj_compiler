INFO  11:10:41,219 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program_original.mj
INFO  11:10:41,310 - #2 program
INFO  11:10:41,310 - #22 p
INFO  11:10:41,310 - #5 const
INFO  11:10:41,312 - #22 int
INFO  11:10:41,313 - #22 size
INFO  11:10:41,314 - #9 =
INFO  11:10:41,314 - #20 10
INFO  11:10:41,314 - #7 ,
INFO  11:10:41,314 - #22 jaab
INFO  11:10:41,315 - #9 =
INFO  11:10:41,315 - #20 0
INFO  11:10:41,315 - #7 ,
INFO  11:10:41,315 - #22 xx
INFO  11:10:41,315 - #9 =
INFO  11:10:41,315 - #20 5
INFO  11:10:41,315 - #6 ;
INFO  11:10:41,315 - #5 const
INFO  11:10:41,316 - #22 char
INFO  11:10:41,316 - #22 variable
INFO  11:10:41,316 - #9 =
INFO  11:10:41,316 - #23 'p'
INFO  11:10:41,316 - #6 ;
INFO  11:10:41,317 - #5 const
INFO  11:10:41,317 - #22 bool
INFO  11:10:41,317 - #22 xyz
INFO  11:10:41,317 - #9 =
INFO  11:10:41,317 - #21 0
INFO  11:10:41,317 - #6 ;
INFO  11:10:41,317 - #22 int
INFO  11:10:41,317 - #22 xyza
INFO  11:10:41,317 - #7 ,
INFO  11:10:41,318 - #22 jana2
INFO  11:10:41,318 - #10 [
INFO  11:10:41,318 - #11 ]
INFO  11:10:41,318 - #6 ;
INFO  11:10:41,318 - #13 class
INFO  11:10:41,318 - #22 Base
INFO  11:10:41,318 - #3 {
INFO  11:10:41,320 - #3 {
INFO  11:10:41,320 - #18 void
INFO  11:10:41,320 - #22 meth
INFO  11:10:41,321 - #15 (
INFO  11:10:41,323 - #16 )
INFO  11:10:41,323 - #3 {
INFO  11:10:41,324 - #4 }
INFO  11:10:41,325 - #4 }
INFO  11:10:41,326 - #4 }
INFO  11:10:41,326 - #13 class
INFO  11:10:41,328 - #22 Derived
INFO  11:10:41,328 - #14 extends
INFO  11:10:41,328 - #22 Base
INFO  11:10:41,328 - #3 {
INFO  11:10:41,328 - #4 }
INFO  11:10:41,329 - #13 class
INFO  11:10:41,329 - #22 B
INFO  11:10:41,329 - #3 {
INFO  11:10:41,329 - #22 int
INFO  11:10:41,329 - #22 baseField
INFO  11:10:41,329 - #10 [
INFO  11:10:41,330 - #11 ]
INFO  11:10:41,330 - #6 ;
INFO  11:10:41,330 - #22 int
INFO  11:10:41,330 - #22 xyza
INFO  11:10:41,330 - #6 ;
INFO  11:10:41,330 - #3 {
INFO  11:10:41,330 - #22 B
INFO  11:10:41,330 - #15 (
INFO  11:10:41,332 - #16 )
INFO  11:10:41,332 - #22 int
INFO  11:10:41,332 - #22 a
INFO  11:10:41,332 - #7 ,
INFO  11:10:41,332 - #22 j
INFO  11:10:41,332 - #6 ;
INFO  11:10:41,332 - #3 {
INFO  11:10:41,333 - #4 }
INFO  11:10:41,333 - #22 int
INFO  11:10:41,334 - #22 xyz
INFO  11:10:41,334 - #15 (
INFO  11:10:41,334 - #22 Base
INFO  11:10:41,334 - #22 j
INFO  11:10:41,335 - #16 )
INFO  11:10:41,335 - #3 {
INFO  11:10:41,335 - #31 return
INFO  11:10:41,335 - #20 0
INFO  11:10:41,335 - #6 ;
INFO  11:10:41,335 - #4 }
INFO  11:10:41,336 - #4 }
INFO  11:10:41,336 - #4 }
INFO  11:10:41,336 - #13 class
INFO  11:10:41,336 - #22 A
INFO  11:10:41,336 - #14 extends
INFO  11:10:41,336 - #22 B
INFO  11:10:41,336 - #3 {
INFO  11:10:41,336 - #3 {
INFO  11:10:41,337 - #22 A
INFO  11:10:41,337 - #15 (
INFO  11:10:41,337 - #16 )
INFO  11:10:41,337 - #3 {
INFO  11:10:41,337 - #4 }
INFO  11:10:41,337 - #22 int
INFO  11:10:41,342 - #22 mmm
INFO  11:10:41,342 - #15 (
INFO  11:10:41,342 - #16 )
INFO  11:10:41,342 - #3 {
INFO  11:10:41,342 - #31 return
INFO  11:10:41,343 - #20 1
INFO  11:10:41,343 - #6 ;
INFO  11:10:41,343 - #4 }
INFO  11:10:41,343 - #22 int
INFO  11:10:41,343 - #22 xyz
INFO  11:10:41,343 - #15 (
INFO  11:10:41,343 - #22 Base
INFO  11:10:41,343 - #22 h
INFO  11:10:41,343 - #16 )
INFO  11:10:41,343 - #22 int
INFO  11:10:41,343 - #22 x
INFO  11:10:41,343 - #6 ;
INFO  11:10:41,343 - #3 {
INFO  11:10:41,343 - #50 super
INFO  11:10:41,343 - #15 (
INFO  11:10:41,345 - #22 h
INFO  11:10:41,345 - #16 )
INFO  11:10:41,346 - #6 ;
INFO  11:10:41,346 - #22 Label
INFO  11:10:41,346 - #8 :
INFO  11:10:41,347 - #22 x
INFO  11:10:41,348 - #47 ++
INFO  11:10:41,348 - #6 ;
INFO  11:10:41,349 - #22 h
INFO  11:10:41,349 - #17 .
INFO  11:10:41,349 - #22 meth
INFO  11:10:41,349 - #15 (
INFO  11:10:41,349 - #16 )
INFO  11:10:41,349 - #6 ;
INFO  11:10:41,349 - #24 if
INFO  11:10:41,349 - #15 (
INFO  11:10:41,349 - #50 super
INFO  11:10:41,349 - #15 (
INFO  11:10:41,349 - #22 h
INFO  11:10:41,349 - #16 )
INFO  11:10:41,349 - #34 ==
INFO  11:10:41,350 - #20 1
INFO  11:10:41,351 - #16 )
INFO  11:10:41,351 - #22 mmm
INFO  11:10:41,351 - #15 (
INFO  11:10:41,351 - #16 )
INFO  11:10:41,351 - #6 ;
INFO  11:10:41,352 - #22 xyz
INFO  11:10:41,352 - #15 (
INFO  11:10:41,352 - #22 h
INFO  11:10:41,352 - #16 )
INFO  11:10:41,352 - #6 ;
INFO  11:10:41,352 - #31 return
INFO  11:10:41,352 - #20 1
INFO  11:10:41,352 - #6 ;
INFO  11:10:41,352 - #4 }
INFO  11:10:41,352 - #4 }
INFO  11:10:41,352 - #4 }
INFO  11:10:41,352 - #12 record
INFO  11:10:41,352 - #22 M
INFO  11:10:41,352 - #3 {
INFO  11:10:41,353 - #22 Derived
INFO  11:10:41,353 - #22 ddd
INFO  11:10:41,353 - #6 ;
INFO  11:10:41,353 - #4 }
INFO  11:10:41,354 - #22 A
INFO  11:10:41,355 - #22 niz
INFO  11:10:41,355 - #10 [
INFO  11:10:41,355 - #11 ]
INFO  11:10:41,355 - #6 ;
INFO  11:10:41,355 - #22 int
INFO  11:10:41,355 - #22 pom
INFO  11:10:41,355 - #6 ;
INFO  11:10:41,355 - #22 M
INFO  11:10:41,355 - #22 m
INFO  11:10:41,355 - #6 ;
INFO  11:10:41,355 - #3 {
INFO  11:10:41,355 - #22 B
INFO  11:10:41,355 - #22 method
INFO  11:10:41,355 - #15 (
INFO  11:10:41,355 - #22 B
INFO  11:10:41,355 - #22 d
INFO  11:10:41,356 - #7 ,
INFO  11:10:41,356 - #22 A
INFO  11:10:41,356 - #22 a
INFO  11:10:41,356 - #16 )
INFO  11:10:41,356 - #22 int
INFO  11:10:41,356 - #22 h
INFO  11:10:41,356 - #6 ;
INFO  11:10:41,356 - #3 {
INFO  11:10:41,356 - #24 if
INFO  11:10:41,356 - #15 (
INFO  11:10:41,356 - #20 1
INFO  11:10:41,356 - #36 >
INFO  11:10:41,356 - #20 0
INFO  11:10:41,358 - #40 &&
INFO  11:10:41,358 - #19 new
INFO  11:10:41,358 - #22 A
INFO  11:10:41,358 - #34 ==
INFO  11:10:41,358 - #19 new
INFO  11:10:41,358 - #22 A
INFO  11:10:41,358 - #16 )
INFO  11:10:41,358 - #3 {
INFO  11:10:41,359 - #33 print
INFO  11:10:41,359 - #15 (
INFO  11:10:41,359 - #23 'j'
INFO  11:10:41,359 - #16 )
INFO  11:10:41,359 - #6 ;
INFO  11:10:41,359 - #31 return
INFO  11:10:41,359 - #19 new
INFO  11:10:41,359 - #22 A
INFO  11:10:41,359 - #6 ;
INFO  11:10:41,359 - #4 }
INFO  11:10:41,359 - #4 }
INFO  11:10:41,359 - #22 A
INFO  11:10:41,360 - #22 abc
INFO  11:10:41,360 - #15 (
INFO  11:10:41,360 - #22 int
INFO  11:10:41,360 - #22 qjk
INFO  11:10:41,360 - #16 )
INFO  11:10:41,360 - #3 {
INFO  11:10:41,360 - #31 return
INFO  11:10:41,360 - #19 new
INFO  11:10:41,360 - #22 A
INFO  11:10:41,360 - #6 ;
INFO  11:10:41,360 - #4 }
INFO  11:10:41,360 - #18 void
INFO  11:10:41,360 - #22 main
INFO  11:10:41,360 - #15 (
INFO  11:10:41,360 - #22 A
INFO  11:10:41,360 - #22 a
INFO  11:10:41,360 - #16 )
INFO  11:10:41,360 - #3 {
INFO  11:10:41,361 - #26 goto
INFO  11:10:41,361 - #22 LABELA
INFO  11:10:41,361 - #6 ;
INFO  11:10:41,361 - #22 LABELA
INFO  11:10:41,361 - #8 :
INFO  11:10:41,361 - #22 a
INFO  11:10:41,361 - #17 .
INFO  11:10:41,361 - #22 baseField
INFO  11:10:41,361 - #10 [
INFO  11:10:41,361 - #20 0
INFO  11:10:41,361 - #11 ]
INFO  11:10:41,361 - #47 ++
INFO  11:10:41,361 - #6 ;
INFO  11:10:41,361 - #22 niz
INFO  11:10:41,362 - #10 [
INFO  11:10:41,362 - #22 a
INFO  11:10:41,362 - #17 .
INFO  11:10:41,362 - #22 baseField
INFO  11:10:41,362 - #10 [
INFO  11:10:41,362 - #20 0
INFO  11:10:41,362 - #11 ]
INFO  11:10:41,362 - #11 ]
INFO  11:10:41,362 - #17 .
INFO  11:10:41,362 - #22 baseField
INFO  11:10:41,362 - #10 [
INFO  11:10:41,363 - #20 2
INFO  11:10:41,363 - #11 ]
INFO  11:10:41,363 - #47 ++
INFO  11:10:41,363 - #6 ;
INFO  11:10:41,363 - #27 do
INFO  11:10:41,363 - #3 {
INFO  11:10:41,364 - #32 read
INFO  11:10:41,364 - #15 (
INFO  11:10:41,364 - #22 a
INFO  11:10:41,364 - #17 .
INFO  11:10:41,364 - #22 baseField
INFO  11:10:41,364 - #10 [
INFO  11:10:41,364 - #20 0
INFO  11:10:41,364 - #11 ]
INFO  11:10:41,364 - #16 )
INFO  11:10:41,365 - #6 ;
INFO  11:10:41,365 - #22 a
INFO  11:10:41,365 - #17 .
INFO  11:10:41,365 - #22 xyz
INFO  11:10:41,365 - #15 (
INFO  11:10:41,365 - #22 m
INFO  11:10:41,365 - #17 .
INFO  11:10:41,365 - #22 ddd
INFO  11:10:41,365 - #16 )
INFO  11:10:41,365 - #6 ;
INFO  11:10:41,365 - #22 method
INFO  11:10:41,365 - #15 (
INFO  11:10:41,365 - #22 niz
INFO  11:10:41,365 - #10 [
INFO  11:10:41,365 - #20 0
INFO  11:10:41,365 - #11 ]
INFO  11:10:41,365 - #7 ,
INFO  11:10:41,365 - #22 niz
INFO  11:10:41,365 - #10 [
INFO  11:10:41,366 - #20 1
INFO  11:10:41,366 - #11 ]
INFO  11:10:41,366 - #16 )
INFO  11:10:41,366 - #6 ;
INFO  11:10:41,366 - #22 abc
INFO  11:10:41,366 - #15 (
INFO  11:10:41,366 - #22 a
INFO  11:10:41,366 - #17 .
INFO  11:10:41,366 - #22 mmm
INFO  11:10:41,366 - #15 (
INFO  11:10:41,366 - #16 )
INFO  11:10:41,366 - #16 )
INFO  11:10:41,366 - #17 .
ERROR 11:10:41,366 - 
Sintaksna greska na liniji 79
INFO  11:10:41,366 - #22 baseField
INFO  11:10:41,366 - #10 [
INFO  11:10:41,366 - #20 0
INFO  11:10:41,367 - #11 ]
INFO  11:10:41,367 - #6 ;
INFO  11:10:41,367 - #30 continue
INFO  11:10:41,367 - #6 ;
INFO  11:10:41,367 - #4 }
INFO  11:10:41,367 - #28 while
INFO  11:10:41,367 - #15 (
INFO  11:10:41,367 - #20 1
INFO  11:10:41,367 - #36 >
INFO  11:10:41,367 - #20 0
INFO  11:10:41,368 - #16 )
INFO  11:10:41,368 - #6 ;
INFO  11:10:41,368 - #22 a
INFO  11:10:41,368 - #17 .
INFO  11:10:41,368 - #22 mmm
INFO  11:10:41,368 - #15 (
INFO  11:10:41,368 - #16 )
INFO  11:10:41,368 - #6 ;
INFO  11:10:41,368 - #4 }
INFO  11:10:41,368 - #4 }
ERROR 11:10:41,368 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 86
