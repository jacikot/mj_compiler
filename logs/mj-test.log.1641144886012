INFO  18:32:33,159 - Compiling source file: D:\4.godina\pp\pp_projekat\workspace\mj_compiler\test\program_original.mj
INFO  18:32:33,254 - #2 program
INFO  18:32:33,255 - #22 p
INFO  18:32:33,255 - #5 const
INFO  18:32:33,258 - #22 int
INFO  18:32:33,258 - #22 size
INFO  18:32:33,259 - #9 =
INFO  18:32:33,259 - #20 10
INFO  18:32:33,259 - #7 ,
INFO  18:32:33,260 - #22 jaab
INFO  18:32:33,260 - #9 =
INFO  18:32:33,260 - #20 0
INFO  18:32:33,260 - #7 ,
INFO  18:32:33,260 - #22 xx
INFO  18:32:33,261 - #9 =
INFO  18:32:33,261 - #20 5
INFO  18:32:33,261 - #6 ;
INFO  18:32:33,261 - #5 const
INFO  18:32:33,261 - #22 char
INFO  18:32:33,261 - #22 variable
INFO  18:32:33,261 - #9 =
INFO  18:32:33,262 - #23 'p'
INFO  18:32:33,263 - #6 ;
INFO  18:32:33,264 - #5 const
INFO  18:32:33,264 - #22 bool
INFO  18:32:33,264 - #22 xyz
INFO  18:32:33,264 - #9 =
INFO  18:32:33,264 - #21 0
INFO  18:32:33,264 - #6 ;
INFO  18:32:33,264 - #22 int
INFO  18:32:33,265 - #22 xyza
INFO  18:32:33,265 - #7 ,
INFO  18:32:33,265 - #22 jana2
INFO  18:32:33,265 - #10 [
INFO  18:32:33,265 - #11 ]
INFO  18:32:33,265 - #6 ;
INFO  18:32:33,265 - #13 class
INFO  18:32:33,266 - #22 Base
INFO  18:32:33,266 - #3 {
INFO  18:32:33,268 - #4 }
INFO  18:32:33,269 - #13 class
INFO  18:32:33,269 - #22 Derived
INFO  18:32:33,270 - #14 extends
INFO  18:32:33,270 - #22 Base
INFO  18:32:33,270 - #3 {
INFO  18:32:33,270 - #4 }
INFO  18:32:33,270 - #13 class
INFO  18:32:33,270 - #22 B
INFO  18:32:33,270 - #3 {
INFO  18:32:33,270 - #22 int
INFO  18:32:33,270 - #22 baseField
INFO  18:32:33,271 - #10 [
INFO  18:32:33,271 - #11 ]
INFO  18:32:33,271 - #6 ;
INFO  18:32:33,271 - #22 int
INFO  18:32:33,271 - #22 xyza
INFO  18:32:33,271 - #6 ;
INFO  18:32:33,272 - #3 {
INFO  18:32:33,272 - #22 B
INFO  18:32:33,272 - #15 (
INFO  18:32:33,273 - #16 )
INFO  18:32:33,273 - #22 int
INFO  18:32:33,274 - #22 a
INFO  18:32:33,274 - #7 ,
INFO  18:32:33,275 - #22 j
INFO  18:32:33,275 - #6 ;
INFO  18:32:33,275 - #3 {
INFO  18:32:33,277 - #4 }
INFO  18:32:33,278 - #18 void
INFO  18:32:33,279 - #22 xyz
INFO  18:32:33,282 - #15 (
INFO  18:32:33,284 - #22 int
INFO  18:32:33,284 - #22 j
INFO  18:32:33,285 - #16 )
INFO  18:32:33,285 - #3 {
INFO  18:32:33,285 - #4 }
INFO  18:32:33,285 - #4 }
INFO  18:32:33,287 - #4 }
INFO  18:32:33,287 - #13 class
INFO  18:32:33,287 - #22 A
INFO  18:32:33,287 - #14 extends
INFO  18:32:33,288 - #22 B
INFO  18:32:33,288 - #3 {
INFO  18:32:33,288 - #3 {
INFO  18:32:33,288 - #22 A
INFO  18:32:33,288 - #15 (
INFO  18:32:33,288 - #16 )
INFO  18:32:33,288 - #3 {
INFO  18:32:33,289 - #4 }
INFO  18:32:33,289 - #18 void
INFO  18:32:33,289 - #22 xyz
INFO  18:32:33,289 - #15 (
INFO  18:32:33,289 - #22 int
INFO  18:32:33,289 - #22 h
INFO  18:32:33,289 - #16 )
INFO  18:32:33,290 - #22 int
INFO  18:32:33,290 - #22 x
INFO  18:32:33,290 - #6 ;
INFO  18:32:33,290 - #3 {
INFO  18:32:33,290 - #22 Label
INFO  18:32:33,290 - #8 :
INFO  18:32:33,298 - #22 x
INFO  18:32:33,299 - #47 ++
INFO  18:32:33,299 - #6 ;
INFO  18:32:33,299 - #4 }
INFO  18:32:33,300 - #4 }
INFO  18:32:33,300 - #4 }
INFO  18:32:33,300 - #12 record
INFO  18:32:33,300 - #22 M
INFO  18:32:33,300 - #3 {
INFO  18:32:33,301 - #4 }
INFO  18:32:33,301 - #22 A
INFO  18:32:33,302 - #22 niz
INFO  18:32:33,302 - #10 [
INFO  18:32:33,303 - #11 ]
INFO  18:32:33,303 - #6 ;
INFO  18:32:33,303 - #3 {
INFO  18:32:33,303 - #22 B
INFO  18:32:33,303 - #22 method
INFO  18:32:33,303 - #15 (
INFO  18:32:33,303 - #22 B
INFO  18:32:33,303 - #22 d
INFO  18:32:33,304 - #7 ,
INFO  18:32:33,304 - #22 A
INFO  18:32:33,304 - #22 a
INFO  18:32:33,304 - #16 )
INFO  18:32:33,304 - #3 {
INFO  18:32:33,304 - #24 if
INFO  18:32:33,304 - #15 (
INFO  18:32:33,304 - #20 1
INFO  18:32:33,304 - #36 >
INFO  18:32:33,305 - #20 0
INFO  18:32:33,306 - #40 &&
INFO  18:32:33,307 - #19 new
INFO  18:32:33,307 - #22 A
INFO  18:32:33,307 - #34 ==
INFO  18:32:33,307 - #19 new
INFO  18:32:33,309 - #22 A
INFO  18:32:33,309 - #16 )
INFO  18:32:33,309 - #3 {
INFO  18:32:33,310 - #33 print
INFO  18:32:33,310 - #15 (
INFO  18:32:33,310 - #23 'j'
INFO  18:32:33,310 - #16 )
INFO  18:32:33,310 - #6 ;
INFO  18:32:33,310 - #31 return
INFO  18:32:33,310 - #19 new
INFO  18:32:33,310 - #22 A
INFO  18:32:33,310 - #6 ;
INFO  18:32:33,310 - #4 }
INFO  18:32:33,311 - #4 }
INFO  18:32:33,311 - #18 void
INFO  18:32:33,311 - #22 main
INFO  18:32:33,311 - #15 (
INFO  18:32:33,311 - #22 A
INFO  18:32:33,311 - #22 a
INFO  18:32:33,311 - #16 )
INFO  18:32:33,311 - #3 {
INFO  18:32:33,312 - #26 goto
INFO  18:32:33,312 - #22 LABELA
INFO  18:32:33,312 - #6 ;
INFO  18:32:33,312 - #22 LABELA
INFO  18:32:33,312 - #8 :
INFO  18:32:33,312 - #22 a
INFO  18:32:33,312 - #17 .
INFO  18:32:33,312 - #22 baseField
INFO  18:32:33,312 - #10 [
INFO  18:32:33,313 - #20 0
INFO  18:32:33,313 - #11 ]
INFO  18:32:33,313 - #47 ++
INFO  18:32:33,313 - #6 ;
INFO  18:32:33,313 - #22 niz
INFO  18:32:33,313 - #10 [
INFO  18:32:33,313 - #22 a
INFO  18:32:33,313 - #17 .
INFO  18:32:33,313 - #22 baseField
INFO  18:32:33,313 - #10 [
INFO  18:32:33,313 - #20 0
INFO  18:32:33,313 - #11 ]
INFO  18:32:33,315 - #11 ]
INFO  18:32:33,315 - #17 .
INFO  18:32:33,315 - #22 baseField
INFO  18:32:33,315 - #10 [
INFO  18:32:33,315 - #20 2
INFO  18:32:33,315 - #11 ]
INFO  18:32:33,315 - #47 ++
INFO  18:32:33,315 - #6 ;
INFO  18:32:33,315 - #27 do
INFO  18:32:33,315 - #3 {
INFO  18:32:33,316 - #32 read
INFO  18:32:33,316 - #15 (
INFO  18:32:33,316 - #22 a
INFO  18:32:33,316 - #17 .
INFO  18:32:33,316 - #22 baseField
INFO  18:32:33,316 - #10 [
INFO  18:32:33,316 - #20 0
INFO  18:32:33,316 - #11 ]
INFO  18:32:33,316 - #16 )
INFO  18:32:33,317 - #6 ;
INFO  18:32:33,317 - #30 continue
INFO  18:32:33,317 - #6 ;
INFO  18:32:33,317 - #4 }
INFO  18:32:33,318 - #28 while
INFO  18:32:33,318 - #15 (
INFO  18:32:33,318 - #20 1
INFO  18:32:33,318 - #36 >
INFO  18:32:33,318 - #20 0
INFO  18:32:33,318 - #16 )
INFO  18:32:33,318 - #6 ;
INFO  18:32:33,319 - #4 }
INFO  18:32:33,319 - #4 }
INFO  18:32:33,339 - Program(
  ProgramName(
   p
  ) [ProgramName]
  DeclListVar(
    DeclListRecord(
      DeclListClass(
        DeclListClass(
          DeclListClass(
            DeclListClass(
              DeclListVar(
                DeclListConst(
                  DeclListConst(
                    DeclListConst(
                      DeclListEmpty(
                      ) [DeclListEmpty]
                      DeclConst(
                        Type(
                         int
                        ) [Type]
                        ConstDeclMultiple(
                          ConstDeclMultiple(
                            ConstDeclSingle(
                              ConstDeclElemCorrect(
                               size
                                ConstLitNum(
                                 10
                                ) [ConstLitNum]
                              ) [ConstDeclElemCorrect]
                            ) [ConstDeclSingle]
                            ConstDeclElemCorrect(
                             jaab
                              ConstLitNum(
                               0
                              ) [ConstLitNum]
                            ) [ConstDeclElemCorrect]
                          ) [ConstDeclMultiple]
                          ConstDeclElemCorrect(
                           xx
                            ConstLitNum(
                             5
                            ) [ConstLitNum]
                          ) [ConstDeclElemCorrect]
                        ) [ConstDeclMultiple]
                      ) [DeclConst]
                    ) [DeclListConst]
                    DeclConst(
                      Type(
                       char
                      ) [Type]
                      ConstDeclSingle(
                        ConstDeclElemCorrect(
                         variable
                          ConstLitChar(
                           'p'
                          ) [ConstLitChar]
                        ) [ConstDeclElemCorrect]
                      ) [ConstDeclSingle]
                    ) [DeclConst]
                  ) [DeclListConst]
                  DeclConst(
                    Type(
                     bool
                    ) [Type]
                    ConstDeclSingle(
                      ConstDeclElemCorrect(
                       xyz
                        ConstLitBool(
                         0
                        ) [ConstLitBool]
                      ) [ConstDeclElemCorrect]
                    ) [ConstDeclSingle]
                  ) [DeclConst]
                ) [DeclListConst]
                VarDeclGlobalCorrect(
                  Type(
                   int
                  ) [Type]
                  VarDeclMultiple(
                    VarDeclSingle(
                      VarDeclElemSingle(
                       xyza
                      ) [VarDeclElemSingle]
                    ) [VarDeclSingle]
                    VarDeclElemArray(
                     jana2
                    ) [VarDeclElemArray]
                  ) [VarDeclMultiple]
                ) [VarDeclGlobalCorrect]
              ) [DeclListVar]
              ClassDecl(
                ClassName(
                 Base
                ) [ClassName]
                ExtendsDeclEmpty(
                ) [ExtendsDeclEmpty]
                ClassDeclsEmpty(
                ) [ClassDeclsEmpty]
              ) [ClassDecl]
            ) [DeclListClass]
            ClassDecl(
              ClassName(
               Derived
              ) [ClassName]
              ExtendsDeclType(
                Type(
                 Base
                ) [Type]
              ) [ExtendsDeclType]
              ClassDeclsEmpty(
              ) [ClassDeclsEmpty]
            ) [ClassDecl]
          ) [DeclListClass]
          ClassDecl(
            ClassName(
             B
            ) [ClassName]
            ExtendsDeclEmpty(
            ) [ExtendsDeclEmpty]
            ClassVarDecls(
              VarDeclsCorrect(
                Type(
                 int
                ) [Type]
                VarDeclSingleNoC(
                  VarDeclElemArrayNoC(
                   baseField
                  ) [VarDeclElemArrayNoC]
                ) [VarDeclSingleNoC]
              ) [VarDeclsCorrect]
              ClassVarDecls(
                VarDeclsCorrect(
                  Type(
                   int
                  ) [Type]
                  VarDeclSingleNoC(
                    VarDeclElemSingleNoC(
                     xyza
                    ) [VarDeclElemSingleNoC]
                  ) [VarDeclSingleNoC]
                ) [VarDeclsCorrect]
                ClassDeclsMethods(
                  InnerMethodBlockAll(
                    ConstructorDecl(
                      ConstructorName(
                       B
                      ) [ConstructorName]
                      InnerVarDecls(
                        InnerVarDeclsEmpty(
                        ) [InnerVarDeclsEmpty]
                        VarDecl(
                          Type(
                           int
                          ) [Type]
                          VarDeclMultipleNoC(
                            VarDeclSingleNoC(
                              VarDeclElemSingleNoC(
                               a
                              ) [VarDeclElemSingleNoC]
                            ) [VarDeclSingleNoC]
                            VarDeclElemSingleNoC(
                             j
                            ) [VarDeclElemSingleNoC]
                          ) [VarDeclMultipleNoC]
                        ) [VarDecl]
                      ) [InnerVarDecls]
                      StatementsEmpty(
                      ) [StatementsEmpty]
                    ) [ConstructorDecl]
                    MethodDecls(
                      MethodDeclPar(
                        MethodDeclChecker(
                          RetTypeVoid(
                          ) [RetTypeVoid]
                          MethodName(
                           xyz
                          ) [MethodName]
                        ) [MethodDeclChecker]
                        FormParsSingle(
                          Type(
                           int
                          ) [Type]
                         j
                        ) [FormParsSingle]
                        InnerVarDeclsEmpty(
                        ) [InnerVarDeclsEmpty]
                        StatementsEmpty(
                        ) [StatementsEmpty]
                      ) [MethodDeclPar]
                      MethodDeclsEmpty(
                      ) [MethodDeclsEmpty]
                    ) [MethodDecls]
                  ) [InnerMethodBlockAll]
                ) [ClassDeclsMethods]
              ) [ClassVarDecls]
            ) [ClassVarDecls]
          ) [ClassDecl]
        ) [DeclListClass]
        ClassDecl(
          ClassName(
           A
          ) [ClassName]
          ExtendsDeclType(
            Type(
             B
            ) [Type]
          ) [ExtendsDeclType]
          ClassDeclsMethods(
            InnerMethodBlockAll(
              ConstructorDecl(
                ConstructorName(
                 A
                ) [ConstructorName]
                InnerVarDeclsEmpty(
                ) [InnerVarDeclsEmpty]
                StatementsEmpty(
                ) [StatementsEmpty]
              ) [ConstructorDecl]
              MethodDecls(
                MethodDeclPar(
                  MethodDeclChecker(
                    RetTypeVoid(
                    ) [RetTypeVoid]
                    MethodName(
                     xyz
                    ) [MethodName]
                  ) [MethodDeclChecker]
                  FormParsSingle(
                    Type(
                     int
                    ) [Type]
                   h
                  ) [FormParsSingle]
                  InnerVarDecls(
                    InnerVarDeclsEmpty(
                    ) [InnerVarDeclsEmpty]
                    VarDecl(
                      Type(
                       int
                      ) [Type]
                      VarDeclSingleNoC(
                        VarDeclElemSingleNoC(
                         x
                        ) [VarDeclElemSingleNoC]
                      ) [VarDeclSingleNoC]
                    ) [VarDecl]
                  ) [InnerVarDecls]
                  StatementsList(
                    StatementsEmpty(
                    ) [StatementsEmpty]
                    StatementSingleLabel(
                      LabelDef(
                        Label(
                         Label
                        ) [Label]
                      ) [LabelDef]
                      StmtDesign(
                        DsgnOpInc(
                          DesignatorFirst(
                           x
                          ) [DesignatorFirst]
                        ) [DsgnOpInc]
                      ) [StmtDesign]
                    ) [StatementSingleLabel]
                  ) [StatementsList]
                ) [MethodDeclPar]
                MethodDeclsEmpty(
                ) [MethodDeclsEmpty]
              ) [MethodDecls]
            ) [InnerMethodBlockAll]
          ) [ClassDeclsMethods]
        ) [ClassDecl]
      ) [DeclListClass]
      RecordDecl(
        RecordName(
         M
        ) [RecordName]
        InnerVarDeclsEmpty(
        ) [InnerVarDeclsEmpty]
      ) [RecordDecl]
    ) [DeclListRecord]
    VarDeclGlobalCorrect(
      Type(
       A
      ) [Type]
      VarDeclSingle(
        VarDeclElemArray(
         niz
        ) [VarDeclElemArray]
      ) [VarDeclSingle]
    ) [VarDeclGlobalCorrect]
  ) [DeclListVar]
  MethodDecls(
    MethodDeclPar(
      MethodDeclChecker(
        RetTypeType(
          Type(
           B
          ) [Type]
        ) [RetTypeType]
        MethodName(
         method
        ) [MethodName]
      ) [MethodDeclChecker]
      FormParsMultiple(
        FormParsSingle(
          Type(
           B
          ) [Type]
         d
        ) [FormParsSingle]
        Type(
         A
        ) [Type]
       a
      ) [FormParsMultiple]
      InnerVarDeclsEmpty(
      ) [InnerVarDeclsEmpty]
      StatementsList(
        StatementsEmpty(
        ) [StatementsEmpty]
        StatementSingle(
          StmtIf(
            CondSingle(
              CondTermMultiple(
                CondTermSingle(
                  CondFactMultiple(
                    ExprSingle(
                      TermSingle(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermSingle]
                    ) [ExprSingle]
                    RelopGrt(
                    ) [RelopGrt]
                    ExprSingle(
                      TermSingle(
                        FactorNumber(
                         0
                        ) [FactorNumber]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [CondFactMultiple]
                ) [CondTermSingle]
                CondFactMultipleEq(
                  ExprSingle(
                    TermSingle(
                      FactorObject(
                        Type(
                         A
                        ) [Type]
                      ) [FactorObject]
                    ) [TermSingle]
                  ) [ExprSingle]
                  RelopEqu(
                  ) [RelopEqu]
                  ExprSingle(
                    TermSingle(
                      FactorObject(
                        Type(
                         A
                        ) [Type]
                      ) [FactorObject]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [CondFactMultipleEq]
              ) [CondTermMultiple]
            ) [CondSingle]
            StatementMultiple(
              StatementsBlock(
                StatementsList(
                  StatementsList(
                    StatementsEmpty(
                    ) [StatementsEmpty]
                    StatementSingle(
                      StmtPrint(
                        ExprSingle(
                          TermSingle(
                            FactorChar(
                             'j'
                            ) [FactorChar]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [StmtPrint]
                    ) [StatementSingle]
                  ) [StatementsList]
                  StatementSingle(
                    StmtReturn(
                      ExprSingle(
                        TermSingle(
                          FactorObject(
                            Type(
                             A
                            ) [Type]
                          ) [FactorObject]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [StmtReturn]
                  ) [StatementSingle]
                ) [StatementsList]
              ) [StatementsBlock]
            ) [StatementMultiple]
          ) [StmtIf]
        ) [StatementSingle]
      ) [StatementsList]
    ) [MethodDeclPar]
    MethodDecls(
      MethodDeclPar(
        MethodDeclChecker(
          RetTypeVoid(
          ) [RetTypeVoid]
          MethodName(
           main
          ) [MethodName]
        ) [MethodDeclChecker]
        FormParsSingle(
          Type(
           A
          ) [Type]
         a
        ) [FormParsSingle]
        InnerVarDeclsEmpty(
        ) [InnerVarDeclsEmpty]
        StatementsList(
          StatementsList(
            StatementsList(
              StatementsList(
                StatementsEmpty(
                ) [StatementsEmpty]
                StatementSingle(
                  StmtGoto(
                    Label(
                     LABELA
                    ) [Label]
                  ) [StmtGoto]
                ) [StatementSingle]
              ) [StatementsList]
              StatementSingleLabel(
                LabelDef(
                  Label(
                   LABELA
                  ) [Label]
                ) [LabelDef]
                StmtDesign(
                  DsgnOpInc(
                    DesignatorAccessArray(
                      DesignatorAccessField(
                        DesignatorFirst(
                         a
                        ) [DesignatorFirst]
                       baseField
                      ) [DesignatorAccessField]
                      ExprSingle(
                        TermSingle(
                          FactorNumber(
                           0
                          ) [FactorNumber]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [DesignatorAccessArray]
                  ) [DsgnOpInc]
                ) [StmtDesign]
              ) [StatementSingleLabel]
            ) [StatementsList]
            StatementSingle(
              StmtDesign(
                DsgnOpInc(
                  DesignatorAccessArray(
                    DesignatorAccessField(
                      DesignatorAccessArray(
                        DesignatorFirst(
                         niz
                        ) [DesignatorFirst]
                        ExprSingle(
                          TermSingle(
                            FactorDsgn(
                              DesignatorAccessArray(
                                DesignatorAccessField(
                                  DesignatorFirst(
                                   a
                                  ) [DesignatorFirst]
                                 baseField
                                ) [DesignatorAccessField]
                                ExprSingle(
                                  TermSingle(
                                    FactorNumber(
                                     0
                                    ) [FactorNumber]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [DesignatorAccessArray]
                            ) [FactorDsgn]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [DesignatorAccessArray]
                     baseField
                    ) [DesignatorAccessField]
                    ExprSingle(
                      TermSingle(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [DesignatorAccessArray]
                ) [DsgnOpInc]
              ) [StmtDesign]
            ) [StatementSingle]
          ) [StatementsList]
          StatementSingle(
            StmtDoWhile(
              DoStart(
              ) [DoStart]
              StatementMultiple(
                StatementsBlock(
                  StatementsList(
                    StatementsList(
                      StatementsEmpty(
                      ) [StatementsEmpty]
                      StatementSingle(
                        StmtRead(
                          DesignatorAccessArray(
                            DesignatorAccessField(
                              DesignatorFirst(
                               a
                              ) [DesignatorFirst]
                             baseField
                            ) [DesignatorAccessField]
                            ExprSingle(
                              TermSingle(
                                FactorNumber(
                                 0
                                ) [FactorNumber]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [DesignatorAccessArray]
                        ) [StmtRead]
                      ) [StatementSingle]
                    ) [StatementsList]
                    StatementSingle(
                      StmtContinue(
                      ) [StmtContinue]
                    ) [StatementSingle]
                  ) [StatementsList]
                ) [StatementsBlock]
              ) [StatementMultiple]
              CondSingle(
                CondTermSingle(
                  CondFactMultiple(
                    ExprSingle(
                      TermSingle(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermSingle]
                    ) [ExprSingle]
                    RelopGrt(
                    ) [RelopGrt]
                    ExprSingle(
                      TermSingle(
                        FactorNumber(
                         0
                        ) [FactorNumber]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [CondFactMultiple]
                ) [CondTermSingle]
              ) [CondSingle]
            ) [StmtDoWhile]
          ) [StatementSingle]
        ) [StatementsList]
      ) [MethodDeclPar]
      MethodDeclsEmpty(
      ) [MethodDeclsEmpty]
    ) [MethodDecls]
  ) [MethodDecls]
) [Program]
INFO  18:32:33,352 - Pronadjen simbol: p na liniji 1
INFO  18:32:33,352 - Pronadjen simbol: size na liniji 2
INFO  18:32:33,352 - Pronadjen simbol: jaab na liniji 2
INFO  18:32:33,352 - Pronadjen simbol: xx na liniji 2
INFO  18:32:33,353 - Pronadjen simbol: variable na liniji 3
INFO  18:32:33,353 - Pronadjen simbol: xyz na liniji 4
INFO  18:32:33,353 - Pronadjen simbol: xyza na liniji 5
INFO  18:32:33,353 - Pronadjen simbol: jana2 na liniji 5
INFO  18:32:33,353 - Pronadjen simbol: Base na liniji 6
INFO  18:32:33,353 - Pronadjen simbol: Derived na liniji 10
INFO  18:32:33,353 - Pronadjen simbol: B na liniji 13
INFO  18:32:33,354 - Pronadjen simbol: baseField na liniji 14
INFO  18:32:33,354 - Pronadjen simbol: xyza na liniji 15
INFO  18:32:33,354 - Pronadjen simbol: B na liniji 17
INFO  18:32:33,354 - Pronadjen simbol: a na liniji 17
INFO  18:32:33,354 - Pronadjen simbol: j na liniji 17
ERROR 18:32:33,356 - Metoda: B nema return naredbu na liniji 17
INFO  18:32:33,357 - Pronadjen simbol: xyz na liniji 20
INFO  18:32:33,357 - Pronadjen simbol: j na liniji 20
INFO  18:32:33,357 - Pronadjen simbol: A na liniji 25
INFO  18:32:33,357 - Pronadjen simbol: A na liniji 27
ERROR 18:32:33,357 - Metoda: A nema return naredbu na liniji 27
INFO  18:32:33,357 - Pronadjen simbol: xyz na liniji 30
INFO  18:32:33,359 - Pronadjen simbol: h na liniji 30
INFO  18:32:33,360 - Pronadjen simbol: x na liniji 30
INFO  18:32:33,360 - Pronadjen simbol: Label na liniji 31
INFO  18:32:33,360 - Upotreba simbola: x prihvacena na liniji 31
INFO  18:32:33,360 - Pronadjen simbol: M na liniji 36
INFO  18:32:33,360 - Pronadjen simbol: niz na liniji 40
INFO  18:32:33,360 - Pronadjen simbol: method na liniji 43
INFO  18:32:33,360 - Pronadjen simbol: d na liniji 43
INFO  18:32:33,361 - Pronadjen simbol: a na liniji 43
INFO  18:32:33,361 - Pronadjen simbol: main na liniji 51
INFO  18:32:33,361 - Pronadjen simbol: a na liniji 51
INFO  18:32:33,361 - Pronadjen simbol: LABELA na liniji 53
INFO  18:32:33,361 - Upotreba simbola: LABELA prihvacena na liniji 52
INFO  18:32:33,361 - Upotreba simbola: a prihvacena na liniji 53
INFO  18:32:33,362 - Upotreba simbola: baseField prihvacena na liniji 53
INFO  18:32:33,363 - Upotreba simbola: niz prihvacena na liniji 54
INFO  18:32:33,363 - Upotreba simbola: a prihvacena na liniji 54
INFO  18:32:33,363 - Upotreba simbola: baseField prihvacena na liniji 54
INFO  18:32:33,363 - Upotreba simbola: baseField prihvacena na liniji 54
INFO  18:32:33,363 - Upotreba simbola: a prihvacena na liniji 56
INFO  18:32:33,363 - Upotreba simbola: baseField prihvacena na liniji 56
